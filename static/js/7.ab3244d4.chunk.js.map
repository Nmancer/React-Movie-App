{"version":3,"sources":["../node_modules/react-burger-menu/lib/BurgerMenu.js","../node_modules/react-burger-menu/lib/menus/slide.js","../node_modules/react-burger-menu/lib/baseStyles.js","../node_modules/react-burger-menu/lib/BurgerIcon.js","../node_modules/react-burger-menu/lib/CrossIcon.js","../node_modules/react-burger-menu/lib/menus/stack.js","../node_modules/react-burger-menu/lib/menus/elastic.js","../node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","../node_modules/eve/eve.js","../node_modules/react-burger-menu/lib/menus/bubble.js","../node_modules/react-burger-menu/lib/menus/push.js","../node_modules/react-burger-menu/lib/menus/pushRotate.js","../node_modules/react-burger-menu/lib/menus/scaleDown.js","../node_modules/react-burger-menu/lib/menus/scaleRotate.js","../node_modules/react-burger-menu/lib/menus/fallDown.js","../node_modules/react-burger-menu/lib/menus/reveal.js","../node_modules/react-burger-menu/lib/menuFactory.js","../node_modules/react-burger-menu/lib/snapsvgImporter.js"],"names":["Object","defineProperty","exports","value","slide","__webpack_require__","stack","elastic","bubble","push","pushRotate","scaleDown","scaleRotate","fallDown","reveal","module","obj","_menuFactory","_menuFactory2","__esModule","default","overlay","isOpen","position","zIndex","width","height","background","opacity","MozTransform","MsTransform","OTransform","WebkitTransform","transform","transition","menuWrap","right","menu","boxSizing","overflow","itemList","item","display","outline","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","_interopRequireDefault","_react","_react2","_propTypes2","BurgerIcon","_Component","instance","TypeError","_classCallCheck","this","state","hover","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_inherits","Component","index","left","top","_this","icon","customIcon","extraProps","className","style","styles","bmIcon","cloneElement","createElement","map","bar","barClassName","trim","getLineStyle","bmBurgerBars","bmBurgerButton","onClick","onMouseOver","setState","onMouseOut","margin","padding","border","fontSize","cursor","propTypes","string","element","defaultProps","CrossIcon","apply","type","bmCross","crossClassName","getCrossStyle","bmCrossButton","color","nthChild","_snapsvgImporter2","svg","lib","pathInitial","pathOpen","animate","path","window","mina","easeinout","morphShape","whiteSpace","pageWrap","outerContainer","eve","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","Date","getTime","isArray","Array","a","toString","idgen","idprefix","timer","now","sta","val","s","ds","b","dur","B","speed","spd","duration","stopit","id","update","pause","pdif","resume","frame","res","start","j","jj","end","easing","set","timeStamp","len","A","anim","linear","status","stop","time","getById","n","easeout","Math","pow","easein","q","Q","sqrt","x","y","t","abs","backin","backout","sin","PI","bounce","p","Snap","root","w","h","nodeType","wrap","is","Element","glob","doc","querySelector","String","e","Paper","version","_","win","document","has","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","el","xlink","xmlns","hub","url","$","attr","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","slice","cacher","f","scope","postprocessor","newf","arg","args","join","cache","count","array","ii","splice","repush","shift","rad","deg","format","tokenRegex","objNotationRegex","str","replace","all","name","quote","quotedName","isFunc","replacer","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","indexOf","r","g","hex","error","rgbtoString","charAt","_toHex","red","green","blue","rgb","match","split","hsb2rgb","hsl2rgb","hsb","hsl","l","toFixed","getElementsByTagName","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","z","data","params","concat","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","getSomeSVG","mgr","class","fill","appendChild","getW","getBBox","getH","nam","removeChild","contains","compareDocumentPosition","ownerSVGElement","select","add2group","list","forEach","children","childNodes","snap","paper","tagName","nodeName","anims","mask","pattern","symbol","method","Fragment","frag","make","defs","proto","ownerDocument","body","dom","contentDocument","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","firstDefined","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","filter","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","toUpperCase","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elementFromPoint","opera","so","elem","box","getBoundingClientRect","docElem","documentElement","clientTop","clientLeft","pageYOffset","scrollTop","pageXOffset","scrollLeft","getOffset","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","getElementById","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","test","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","viewBox","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","d","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","getFontSize","tokens","stops","seed","step","k","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuned","tuner","chunk","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","cssText","onload","image","preserveAspectRatio","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","Animation","each","begin","handler","cb","callbacker","bind","aname","unbound","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","keys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","__WEBPACK_AMD_DEFINE_RESULT__","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","sort","_events","nes","es","sep","RegExp","exist","event","subname","cur","nts","inodes","funcs","prune","steps","stepsTotal","nextStep","closeButton","transformOrigin","transformStyle","perspective","perspectiveOrigin","burgerIcon","_x4","_x5","_reactDom2","_baseStyles2","_BurgerIcon2","_CrossIcon2","Menu","options","noStateChange","newState","applyWrapperStyles","onStateChange","timeoutId","clearTimeout","bodyClassName","classList","pageWrapId","handleExternalWrapper","outerContainerId","wrapperStyles","html","wrapper","builtStyles","getStyle","prop","console","inline","propName","output","formattedWidth","keyCode","toggleMenu","disableOverlayClick","Error","customOnKeyDown","onkeydown","disableCloseOnEsc","listenForClose","_this2","findDOMNode","nextProps","_this3","noOverlay","overlayClassName","shouldDisableOverlayClick","getStyles","morphShapeClassName","menuClassName","itemListClassName","Children","itemClassName","customCrossIcon","crossButtonClassName","customBurgerIcon","burgerButtonClassName","burgerBarClassName","oneOfType","oneOf","func","bool","isRequired","number"],"mappings":"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","file":"static/js/7.ab3244d4.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n  item: function item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  }\n};\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return {\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        opacity: 0,\n        fontSize: 8,\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({\n            width: '100%',\n            height: '100%'\n          }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement('span', null, [0, 1, 2].map(function (bar) {\n          return _react2['default'].createElement('span', {\n            key: bar,\n            className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n            style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n          });\n        }));\n      }\n\n      return _react2['default'].createElement('div', {\n        className: ('bm-burger-button ' + this.props.className).trim(),\n        style: _extends({\n          zIndex: 1000\n        }, this.props.styles.bmBurgerButton)\n      }, icon, _react2['default'].createElement('button', {\n        onClick: this.props.onClick,\n        onMouseOver: function onMouseOver() {\n          return _this.setState({\n            hover: true\n          });\n        },\n        onMouseOut: function onMouseOut() {\n          return _this.setState({\n            hover: false\n          });\n        },\n        style: buttonStyle\n      }, 'Open Menu'));\n    }\n  }]);\n\n  return BurgerIcon;\n}(_react.Component);\n\nexports['default'] = BurgerIcon;\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        color: 'transparent',\n        outline: 'none',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({\n            width: '100%',\n            height: '100%'\n          }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement('span', {\n          style: {\n            position: 'absolute',\n            top: '6px',\n            right: '14px'\n          }\n        }, ['before', 'after'].map(function (type, i) {\n          return _react2['default'].createElement('span', {\n            key: i,\n            className: ('bm-cross ' + _this.props.crossClassName).trim(),\n            style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n          });\n        }));\n      }\n\n      return _react2['default'].createElement('div', {\n        className: ('bm-cross-button ' + this.props.className).trim(),\n        style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n      }, icon, _react2['default'].createElement('button', {\n        onClick: this.props.onClick,\n        style: buttonStyle\n      }, 'Close Menu'));\n    }\n  }]);\n\n  return CrossIcon;\n}(_react.Component);\n\nexports['default'] = CrossIcon;\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({\n        path: this.pathOpen\n      }, 400, window.mina.easeinout);\n    }\n  },\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","window.eve = require('eve'); // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar mina = function (eve) {\n  var animations = {},\n      requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n    setTimeout(callback, 16, new Date().getTime());\n    return true;\n  },\n      requestID,\n      isArray = Array.isArray || function (a) {\n    return a instanceof Array || Object.prototype.toString.call(a) == \"[object Array]\";\n  },\n      idgen = 0,\n      idprefix = \"M\" + (+new Date()).toString(36),\n      ID = function ID() {\n    return idprefix + (idgen++).toString(36);\n  },\n      diff = function diff(a, b, A, B) {\n    if (isArray(a)) {\n      res = [];\n\n      for (var i = 0, ii = a.length; i < ii; i++) {\n        res[i] = diff(a[i], b, A[i], B);\n      }\n\n      return res;\n    }\n\n    var dif = (A - a) / (B - b);\n    return function (bb) {\n      return a + dif * (bb - b);\n    };\n  },\n      timer = Date.now || function () {\n    return +new Date();\n  },\n      sta = function sta(val) {\n    var a = this;\n\n    if (val == null) {\n      return a.s;\n    }\n\n    var ds = a.s - val;\n    a.b += a.dur * ds;\n    a.B += a.dur * ds;\n    a.s = val;\n  },\n      speed = function speed(val) {\n    var a = this;\n\n    if (val == null) {\n      return a.spd;\n    }\n\n    a.spd = val;\n  },\n      duration = function duration(val) {\n    var a = this;\n\n    if (val == null) {\n      return a.dur;\n    }\n\n    a.s = a.s * val / a.dur;\n    a.dur = val;\n  },\n      stopit = function stopit() {\n    var a = this;\n    delete animations[a.id];\n    a.update();\n    eve(\"mina.stop.\" + a.id, a);\n  },\n      pause = function pause() {\n    var a = this;\n\n    if (a.pdif) {\n      return;\n    }\n\n    delete animations[a.id];\n    a.update();\n    a.pdif = a.get() - a.b;\n  },\n      resume = function resume() {\n    var a = this;\n\n    if (!a.pdif) {\n      return;\n    }\n\n    a.b = a.get() - a.pdif;\n    delete a.pdif;\n    animations[a.id] = a;\n    frame();\n  },\n      update = function update() {\n    var a = this,\n        res;\n\n    if (isArray(a.start)) {\n      res = [];\n\n      for (var j = 0, jj = a.start.length; j < jj; j++) {\n        res[j] = +a.start[j] + (a.end[j] - a.start[j]) * a.easing(a.s);\n      }\n    } else {\n      res = +a.start + (a.end - a.start) * a.easing(a.s);\n    }\n\n    a.set(res);\n  },\n      frame = function frame(timeStamp) {\n    // Manual invokation?\n    if (!timeStamp) {\n      // Frame loop stopped?\n      if (!requestID) {\n        // Start frame loop...\n        requestID = requestAnimFrame(frame);\n      }\n\n      return;\n    }\n\n    var len = 0;\n\n    for (var i in animations) {\n      if (animations.hasOwnProperty(i)) {\n        var a = animations[i],\n            b = a.get(),\n            res;\n        len++;\n        a.s = (b - a.b) / (a.dur / a.spd);\n\n        if (a.s >= 1) {\n          delete animations[i];\n          a.s = 1;\n          len--;\n\n          (function (a) {\n            setTimeout(function () {\n              eve(\"mina.finish.\" + a.id, a);\n            });\n          })(a);\n        }\n\n        a.update();\n      }\n    }\n\n    requestID = len ? requestAnimFrame(frame) : false;\n  },\n\n  /*\\\n   * mina\n   [ method ]\n   **\n   * Generic animation of numbers\n   **\n   - a (number) start _slave_ number\n   - A (number) end _slave_ number\n   - b (number) start _master_ number (start time in general case)\n   - B (number) end _master_ number (end time in general case)\n   - get (function) getter of _master_ number (see @mina.time)\n   - set (function) setter of _slave_ number\n   - easing (function) #optional easing function, default is @mina.linear\n   = (object) animation descriptor\n   o {\n   o         id (string) animation id,\n   o         start (number) start _slave_ number,\n   o         end (number) end _slave_ number,\n   o         b (number) start _master_ number,\n   o         s (number) animation status (0..1),\n   o         dur (number) animation duration,\n   o         spd (number) animation speed,\n   o         get (function) getter of _master_ number (see @mina.time),\n   o         set (function) setter of _slave_ number,\n   o         easing (function) easing function, default is @mina.linear,\n   o         status (function) status getter/setter,\n   o         speed (function) speed getter/setter,\n   o         duration (function) duration getter/setter,\n   o         stop (function) animation stopper\n   o         pause (function) pauses the animation\n   o         resume (function) resumes the animation\n   o         update (function) calles setter with the right value of the animation\n   o }\n  \\*/\n  mina = function mina(a, A, b, B, get, set, easing) {\n    var anim = {\n      id: ID(),\n      start: a,\n      end: A,\n      b: b,\n      s: 0,\n      dur: B - b,\n      spd: 1,\n      get: get,\n      set: set,\n      easing: easing || mina.linear,\n      status: sta,\n      speed: speed,\n      duration: duration,\n      stop: stopit,\n      pause: pause,\n      resume: resume,\n      update: update\n    };\n    animations[anim.id] = anim;\n    var len = 0,\n        i;\n\n    for (i in animations) {\n      if (animations.hasOwnProperty(i)) {\n        len++;\n\n        if (len == 2) {\n          break;\n        }\n      }\n    }\n\n    len == 1 && frame();\n    return anim;\n  };\n  /*\\\n   * mina.time\n   [ method ]\n   **\n   * Returns the current time. Equivalent to:\n   | function () {\n   |     return (new Date).getTime();\n   | }\n  \\*/\n\n\n  mina.time = timer;\n  /*\\\n   * mina.getById\n   [ method ]\n   **\n   * Returns an animation by its id\n   - id (string) animation's id\n   = (object) See @mina\n  \\*/\n\n  mina.getById = function (id) {\n    return animations[id] || null;\n  };\n  /*\\\n   * mina.linear\n   [ method ]\n   **\n   * Default linear easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.linear = function (n) {\n    return n;\n  };\n  /*\\\n   * mina.easeout\n   [ method ]\n   **\n   * Easeout easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.easeout = function (n) {\n    return Math.pow(n, 1.7);\n  };\n  /*\\\n   * mina.easein\n   [ method ]\n   **\n   * Easein easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.easein = function (n) {\n    return Math.pow(n, .48);\n  };\n  /*\\\n   * mina.easeinout\n   [ method ]\n   **\n   * Easeinout easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.easeinout = function (n) {\n    if (n == 1) {\n      return 1;\n    }\n\n    if (n == 0) {\n      return 0;\n    }\n\n    var q = .48 - n / 1.04,\n        Q = Math.sqrt(.1734 + q * q),\n        x = Q - q,\n        X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n        y = -Q - q,\n        Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n        t = X + Y + .5;\n    return (1 - t) * 3 * t * t + t * t * t;\n  };\n  /*\\\n   * mina.backin\n   [ method ]\n   **\n   * Backin easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.backin = function (n) {\n    if (n == 1) {\n      return 1;\n    }\n\n    var s = 1.70158;\n    return n * n * ((s + 1) * n - s);\n  };\n  /*\\\n   * mina.backout\n   [ method ]\n   **\n   * Backout easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.backout = function (n) {\n    if (n == 0) {\n      return 0;\n    }\n\n    n = n - 1;\n    var s = 1.70158;\n    return n * n * ((s + 1) * n + s) + 1;\n  };\n  /*\\\n   * mina.elastic\n   [ method ]\n   **\n   * Elastic easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.elastic = function (n) {\n    if (n == !!n) {\n      return n;\n    }\n\n    return Math.pow(2, -10 * n) * Math.sin((n - .075) * (2 * Math.PI) / .3) + 1;\n  };\n  /*\\\n   * mina.bounce\n   [ method ]\n   **\n   * Bounce easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.bounce = function (n) {\n    var s = 7.5625,\n        p = 2.75,\n        l;\n\n    if (n < 1 / p) {\n      l = s * n * n;\n    } else {\n      if (n < 2 / p) {\n        n -= 1.5 / p;\n        l = s * n * n + .75;\n      } else {\n        if (n < 2.5 / p) {\n          n -= 2.25 / p;\n          l = s * n * n + .9375;\n        } else {\n          n -= 2.625 / p;\n          l = s * n * n + .984375;\n        }\n      }\n    }\n\n    return l;\n  };\n\n  window.mina = mina;\n  return mina;\n}(typeof eve == \"undefined\" ? function () {} : eve); // Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nvar Snap = function (root) {\n  Snap.version = \"0.5.1\";\n  /*\\\n   * Snap\n   [ method ]\n   **\n   * Creates a drawing surface or wraps existing SVG element.\n   **\n   - width (number|string) width of surface\n   - height (number|string) height of surface\n   * or\n   - DOM (SVGElement) element to be wrapped into Snap structure\n   * or\n   - array (array) array of elements (will return set of elements)\n   * or\n   - query (string) CSS query selector\n   = (object) @Element\n  \\*/\n\n  function Snap(w, h) {\n    if (w) {\n      if (w.nodeType) {\n        return wrap(w);\n      }\n\n      if (is(w, \"array\") && Snap.set) {\n        return Snap.set.apply(Snap, w);\n      }\n\n      if (w instanceof Element) {\n        return w;\n      }\n\n      if (h == null) {\n        try {\n          w = glob.doc.querySelector(String(w));\n          return wrap(w);\n        } catch (e) {\n          return null;\n        }\n      }\n    }\n\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n  }\n\n  Snap.toString = function () {\n    return \"Snap v\" + this.version;\n  };\n\n  Snap._ = {};\n  var glob = {\n    win: root.window,\n    doc: root.window.document\n  };\n  Snap._.glob = glob;\n\n  var has = \"hasOwnProperty\",\n      Str = String,\n      toFloat = parseFloat,\n      toInt = parseInt,\n      math = Math,\n      mmax = math.max,\n      mmin = math.min,\n      abs = math.abs,\n      pow = math.pow,\n      PI = math.PI,\n      round = math.round,\n      E = \"\",\n      S = \" \",\n      objectToString = Object.prototype.toString,\n      ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n      colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n      bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n      separator = Snap._.separator = /[,\\s]+/,\n      whitespace = /[\\s]/g,\n      commaSpaces = /[\\s]*,[\\s]*/,\n      hsrg = {\n    hs: 1,\n    rg: 1\n  },\n      pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n      tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n      pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n      idgen = 0,\n      idprefix = \"S\" + (+new Date()).toString(36),\n      ID = function ID(el) {\n    return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n  },\n      xlink = \"http://www.w3.org/1999/xlink\",\n      xmlns = \"http://www.w3.org/2000/svg\",\n      hub = {},\n\n  /*\\\n   * Snap.url\n   [ method ]\n   **\n   * Wraps path into `\"url('<path>')\"`.\n   - value (string) path\n   = (string) wrapped path\n  \\*/\n  URL = Snap.url = function (url) {\n    return \"url('#\" + url + \"')\";\n  };\n\n  function $(el, attr) {\n    if (attr) {\n      if (el == \"#text\") {\n        el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n      }\n\n      if (el == \"#comment\") {\n        el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n      }\n\n      if (typeof el == \"string\") {\n        el = $(el);\n      }\n\n      if (typeof attr == \"string\") {\n        if (el.nodeType == 1) {\n          if (attr.substring(0, 6) == \"xlink:\") {\n            return el.getAttributeNS(xlink, attr.substring(6));\n          }\n\n          if (attr.substring(0, 4) == \"xml:\") {\n            return el.getAttributeNS(xmlns, attr.substring(4));\n          }\n\n          return el.getAttribute(attr);\n        } else if (attr == \"text\") {\n          return el.nodeValue;\n        } else {\n          return null;\n        }\n      }\n\n      if (el.nodeType == 1) {\n        for (var key in attr) {\n          if (attr[has](key)) {\n            var val = Str(attr[key]);\n\n            if (val) {\n              if (key.substring(0, 6) == \"xlink:\") {\n                el.setAttributeNS(xlink, key.substring(6), val);\n              } else if (key.substring(0, 4) == \"xml:\") {\n                el.setAttributeNS(xmlns, key.substring(4), val);\n              } else {\n                el.setAttribute(key, val);\n              }\n            } else {\n              el.removeAttribute(key);\n            }\n          }\n        }\n      } else if (\"text\" in attr) {\n        el.nodeValue = attr.text;\n      }\n    } else {\n      el = glob.doc.createElementNS(xmlns, el);\n    }\n\n    return el;\n  }\n\n  Snap._.$ = $;\n  Snap._.id = ID;\n\n  function getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n\n    for (var i = 0; i < attrs.length; i++) {\n      if (attrs[i].namespaceURI == xlink) {\n        name = \"xlink:\";\n      } else {\n        name = \"\";\n      }\n\n      name += attrs[i].name;\n      out[name] = attrs[i].textContent;\n    }\n\n    return out;\n  }\n\n  function is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n\n    if (type == \"finite\") {\n      return isFinite(o);\n    }\n\n    if (type == \"array\" && (o instanceof Array || Array.isArray && Array.isArray(o))) {\n      return true;\n    }\n\n    return type == \"null\" && o === null || type == typeof o && o !== null || type == \"object\" && o === Object(o) || objectToString.call(o).slice(8, -1).toLowerCase() == type;\n  }\n  /*\\\n   * Snap.format\n   [ method ]\n   **\n   * Replaces construction of type `{<name>}` to the corresponding argument\n   **\n   - token (string) string to format\n   - json (object) object which properties are used as a replacement\n   = (string) formatted string\n   > Usage\n   | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n   | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n   |     x: 10,\n   |     y: 20,\n   |     dim: {\n   |         width: 40,\n   |         height: 50,\n   |         \"negative width\": -40\n   |     }\n   | }));\n  \\*/\n\n\n  Snap.format = function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,\n        // matches .xxxxx or [\"xxxxx\"] to run over object properties\n    replacer = function replacer(all, key, obj) {\n      var res = obj;\n      key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n        name = name || quotedName;\n\n        if (res) {\n          if (name in res) {\n            res = res[name];\n          }\n\n          typeof res == \"function\" && isFunc && (res = res());\n        }\n      });\n      res = (res == null || res == obj ? all : res) + \"\";\n      return res;\n    };\n\n    return function (str, obj) {\n      return Str(str).replace(tokenRegex, function (all, key) {\n        return replacer(all, key, obj);\n      });\n    };\n  }();\n\n  function clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n      return obj;\n    }\n\n    var res = new obj.constructor();\n\n    for (var key in obj) {\n      if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n      }\n    }\n\n    return res;\n  }\n\n  Snap._.clone = clone;\n\n  function repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) {\n      if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n      }\n    }\n  }\n\n  function cacher(f, scope, postprocessor) {\n    function newf() {\n      var arg = Array.prototype.slice.call(arguments, 0),\n          args = arg.join(\"\\u2400\"),\n          cache = newf.cache = newf.cache || {},\n          count = newf.count = newf.count || [];\n\n      if (cache[has](args)) {\n        repush(count, args);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n      }\n\n      count.length >= 1e3 && delete cache[count.shift()];\n      count.push(args);\n      cache[args] = f.apply(scope, arg);\n      return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n\n    return newf;\n  }\n\n  Snap._.cacher = cacher;\n\n  function angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n      var x = x1 - x2,\n          y = y1 - y2;\n\n      if (!x && !y) {\n        return 0;\n      }\n\n      return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n      return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n  }\n\n  function rad(deg) {\n    return deg % 360 * PI / 180;\n  }\n\n  function deg(rad) {\n    return rad * 180 / PI % 360;\n  }\n\n  function x_y() {\n    return this.x + S + this.y;\n  }\n\n  function x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n  }\n  /*\\\n   * Snap.rad\n   [ method ]\n   **\n   * Transform angle to radians\n   - deg (number) angle in degrees\n   = (number) angle in radians\n  \\*/\n\n\n  Snap.rad = rad;\n  /*\\\n   * Snap.deg\n   [ method ]\n   **\n   * Transform angle to degrees\n   - rad (number) angle in radians\n   = (number) angle in degrees\n  \\*/\n\n  Snap.deg = deg;\n  /*\\\n   * Snap.sin\n   [ method ]\n   **\n   * Equivalent to `Math.sin()` only works with degrees, not radians.\n   - angle (number) angle in degrees\n   = (number) sin\n  \\*/\n\n  Snap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n  };\n  /*\\\n   * Snap.tan\n   [ method ]\n   **\n   * Equivalent to `Math.tan()` only works with degrees, not radians.\n   - angle (number) angle in degrees\n   = (number) tan\n  \\*/\n\n\n  Snap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n  };\n  /*\\\n   * Snap.cos\n   [ method ]\n   **\n   * Equivalent to `Math.cos()` only works with degrees, not radians.\n   - angle (number) angle in degrees\n   = (number) cos\n  \\*/\n\n\n  Snap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n  };\n  /*\\\n   * Snap.asin\n   [ method ]\n   **\n   * Equivalent to `Math.asin()` only works with degrees, not radians.\n   - num (number) value\n   = (number) asin in degrees\n  \\*/\n\n\n  Snap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n  };\n  /*\\\n   * Snap.acos\n   [ method ]\n   **\n   * Equivalent to `Math.acos()` only works with degrees, not radians.\n   - num (number) value\n   = (number) acos in degrees\n  \\*/\n\n\n  Snap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n  };\n  /*\\\n   * Snap.atan\n   [ method ]\n   **\n   * Equivalent to `Math.atan()` only works with degrees, not radians.\n   - num (number) value\n   = (number) atan in degrees\n  \\*/\n\n\n  Snap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n  };\n  /*\\\n   * Snap.atan2\n   [ method ]\n   **\n   * Equivalent to `Math.atan2()` only works with degrees, not radians.\n   - num (number) value\n   = (number) atan2 in degrees\n  \\*/\n\n\n  Snap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n  };\n  /*\\\n   * Snap.angle\n   [ method ]\n   **\n   * Returns an angle between two or three points\n   - x1 (number) x coord of first point\n   - y1 (number) y coord of first point\n   - x2 (number) x coord of second point\n   - y2 (number) y coord of second point\n   - x3 (number) #optional x coord of third point\n   - y3 (number) #optional y coord of third point\n   = (number) angle in degrees\n  \\*/\n\n\n  Snap.angle = angle;\n  /*\\\n   * Snap.len\n   [ method ]\n   **\n   * Returns distance between two points\n   - x1 (number) x coord of first point\n   - y1 (number) y coord of first point\n   - x2 (number) x coord of second point\n   - y2 (number) y coord of second point\n   = (number) distance\n  \\*/\n\n  Snap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n  };\n  /*\\\n   * Snap.len2\n   [ method ]\n   **\n   * Returns squared distance between two points\n   - x1 (number) x coord of first point\n   - y1 (number) y coord of first point\n   - x2 (number) x coord of second point\n   - y2 (number) y coord of second point\n   = (number) distance\n  \\*/\n\n\n  Snap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n  };\n  /*\\\n   * Snap.closestPoint\n   [ method ]\n   **\n   * Returns closest point to a given one on a given path.\n   - path (Element) path element\n   - x (number) x coord of a point\n   - y (number) y coord of a point\n   = (object) in format\n   {\n      x (number) x coord of the point on the path\n      y (number) y coord of the point on the path\n      length (number) length of the path to the point\n      distance (number) distance from the given point to the path\n   }\n  \\*/\n  // Copied from http://bl.ocks.org/mbostock/8027637\n\n\n  Snap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n      var dx = p.x - x,\n          dy = p.y - y;\n      return dx * dx + dy * dy;\n    }\n\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity; // linear scan for coarse approximation\n\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n      if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n        best = scan;\n        bestLength = scanLength;\n        bestDistance = scanDistance;\n      }\n    } // binary search for precise estimate\n\n\n    precision *= .5;\n\n    while (precision > .5) {\n      var before, after, beforeLength, afterLength, beforeDistance, afterDistance;\n\n      if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n        best = before;\n        bestLength = beforeLength;\n        bestDistance = beforeDistance;\n      } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n        best = after;\n        bestLength = afterLength;\n        bestDistance = afterDistance;\n      } else {\n        precision *= .5;\n      }\n    }\n\n    best = {\n      x: best.x,\n      y: best.y,\n      length: bestLength,\n      distance: Math.sqrt(bestDistance)\n    };\n    return best;\n  };\n  /*\\\n   * Snap.is\n   [ method ]\n   **\n   * Handy replacement for the `typeof` operator\n   - o (…) any object or primitive\n   - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n   = (boolean) `true` if given value is of given type\n  \\*/\n\n\n  Snap.is = is;\n  /*\\\n   * Snap.snapTo\n   [ method ]\n   **\n   * Snaps given value to given grid\n   - values (array|number) given array of values or step of the grid\n   - value (number) value to adjust\n   - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n   = (number) adjusted value\n  \\*/\n\n  Snap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n\n    if (is(values, \"array\")) {\n      var i = values.length;\n\n      while (i--) {\n        if (abs(values[i] - value) <= tolerance) {\n          return values[i];\n        }\n      }\n    } else {\n      values = +values;\n      var rem = value % values;\n\n      if (rem < tolerance) {\n        return value - rem;\n      }\n\n      if (rem > values - tolerance) {\n        return value - rem + values;\n      }\n    }\n\n    return value;\n  }; // Colour\n\n  /*\\\n   * Snap.getRGB\n   [ method ]\n   **\n   * Parses color string as RGB object\n   - color (string) color string in one of the following formats:\n   # <ul>\n   #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n   #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n   #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n   #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n   #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n   #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n   #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n   #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n   #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n   #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n   #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n   #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n   #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n   #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n   #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n   # </ul>\n   * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n   = (object) RGB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••,\n   o     error (boolean) true if string can't be parsed\n   o }\n  \\*/\n\n\n  Snap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        error: 1,\n        toString: rgbtoString\n      };\n    }\n\n    if (colour == \"none\") {\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        toString: rgbtoString\n      };\n    }\n\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = _toHex(colour));\n\n    if (!colour) {\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        error: 1,\n        toString: rgbtoString\n      };\n    }\n\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n\n    if (rgb) {\n      if (rgb[2]) {\n        blue = toInt(rgb[2].substring(5), 16);\n        green = toInt(rgb[2].substring(3, 5), 16);\n        red = toInt(rgb[2].substring(1, 3), 16);\n      }\n\n      if (rgb[3]) {\n        blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n        green = toInt((t = rgb[3].charAt(2)) + t, 16);\n        red = toInt((t = rgb[3].charAt(1)) + t, 16);\n      }\n\n      if (rgb[4]) {\n        values = rgb[4].split(commaSpaces);\n        red = toFloat(values[0]);\n        values[0].slice(-1) == \"%\" && (red *= 2.55);\n        green = toFloat(values[1]);\n        values[1].slice(-1) == \"%\" && (green *= 2.55);\n        blue = toFloat(values[2]);\n        values[2].slice(-1) == \"%\" && (blue *= 2.55);\n        rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n        values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n      }\n\n      if (rgb[5]) {\n        values = rgb[5].split(commaSpaces);\n        red = toFloat(values[0]);\n        values[0].slice(-1) == \"%\" && (red /= 100);\n        green = toFloat(values[1]);\n        values[1].slice(-1) == \"%\" && (green /= 100);\n        blue = toFloat(values[2]);\n        values[2].slice(-1) == \"%\" && (blue /= 100);\n        (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n        rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n        values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        return Snap.hsb2rgb(red, green, blue, opacity);\n      }\n\n      if (rgb[6]) {\n        values = rgb[6].split(commaSpaces);\n        red = toFloat(values[0]);\n        values[0].slice(-1) == \"%\" && (red /= 100);\n        green = toFloat(values[1]);\n        values[1].slice(-1) == \"%\" && (green /= 100);\n        blue = toFloat(values[2]);\n        values[2].slice(-1) == \"%\" && (blue /= 100);\n        (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n        rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n        values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        return Snap.hsl2rgb(red, green, blue, opacity);\n      }\n\n      red = mmin(math.round(red), 255);\n      green = mmin(math.round(green), 255);\n      blue = mmin(math.round(blue), 255);\n      opacity = mmin(mmax(opacity, 0), 1);\n      rgb = {\n        r: red,\n        g: green,\n        b: blue,\n        toString: rgbtoString\n      };\n      rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n      rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n      return rgb;\n    }\n\n    return {\n      r: -1,\n      g: -1,\n      b: -1,\n      hex: \"none\",\n      error: 1,\n      toString: rgbtoString\n    };\n  }, Snap);\n  /*\\\n   * Snap.hsb\n   [ method ]\n   **\n   * Converts HSB values to a hex representation of the color\n   - h (number) hue\n   - s (number) saturation\n   - b (number) value or brightness\n   = (string) hex representation of the color\n  \\*/\n\n  Snap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n  });\n  /*\\\n   * Snap.hsl\n   [ method ]\n   **\n   * Converts HSL values to a hex representation of the color\n   - h (number) hue\n   - s (number) saturation\n   - l (number) luminosity\n   = (string) hex representation of the color\n  \\*/\n\n  Snap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n  });\n  /*\\\n   * Snap.rgb\n   [ method ]\n   **\n   * Converts RGB values to a hex representation of the color\n   - r (number) red\n   - g (number) green\n   - b (number) blue\n   = (string) hex representation of the color\n  \\*/\n\n  Snap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n      var round = math.round;\n      return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n  });\n\n  var _toHex = function toHex(color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    _toHex = cacher(function (color) {\n      if (color.toLowerCase() == \"red\") {\n        return red;\n      }\n\n      i.style.color = red;\n      i.style.color = color;\n      var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n      return out == red ? null : out;\n    });\n    return _toHex(color);\n  },\n      hsbtoString = function hsbtoString() {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n  },\n      hsltoString = function hsltoString() {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n  },\n      rgbtoString = function rgbtoString() {\n    return this.opacity == 1 || this.opacity == null ? this.hex : \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n  },\n      prepareRGB = function prepareRGB(r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n      b = r.b;\n      g = r.g;\n      r = r.r;\n    }\n\n    if (g == null && is(r, string)) {\n      var clr = Snap.getRGB(r);\n      r = clr.r;\n      g = clr.g;\n      b = clr.b;\n    }\n\n    if (r > 1 || g > 1 || b > 1) {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n    }\n\n    return [r, g, b];\n  },\n      packageRGB = function packageRGB(r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n      r: r,\n      g: g,\n      b: b,\n      opacity: is(o, \"finite\") ? o : 1,\n      hex: Snap.rgb(r, g, b),\n      toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n  };\n  /*\\\n   * Snap.color\n   [ method ]\n   **\n   * Parses the color string and returns an object featuring the color's component values\n   - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n   = (object) Combined RGB/HSB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••,\n   o     error (boolean) `true` if string can't be parsed,\n   o     h (number) hue,\n   o     s (number) saturation,\n   o     v (number) value (brightness),\n   o     l (number) lightness\n   o }\n  \\*/\n\n\n  Snap.color = function (clr) {\n    var rgb;\n\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n      rgb = Snap.hsb2rgb(clr);\n      clr.r = rgb.r;\n      clr.g = rgb.g;\n      clr.b = rgb.b;\n      clr.opacity = 1;\n      clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n      rgb = Snap.hsl2rgb(clr);\n      clr.r = rgb.r;\n      clr.g = rgb.g;\n      clr.b = rgb.b;\n      clr.opacity = 1;\n      clr.hex = rgb.hex;\n    } else {\n      if (is(clr, \"string\")) {\n        clr = Snap.getRGB(clr);\n      }\n\n      if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n        rgb = Snap.rgb2hsl(clr);\n        clr.h = rgb.h;\n        clr.s = rgb.s;\n        clr.l = rgb.l;\n        rgb = Snap.rgb2hsb(clr);\n        clr.v = rgb.b;\n      } else {\n        clr = {\n          hex: \"none\"\n        };\n        clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n        clr.error = 1;\n      }\n    }\n\n    clr.toString = rgbtoString;\n    return clr;\n  };\n  /*\\\n   * Snap.hsb2rgb\n   [ method ]\n   **\n   * Converts HSB values to an RGB object\n   - h (number) hue\n   - s (number) saturation\n   - v (number) value or brightness\n   = (object) RGB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••\n   o }\n  \\*/\n\n\n  Snap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n      v = h.b;\n      s = h.s;\n      o = h.o;\n      h = h.h;\n    }\n\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n  };\n  /*\\\n   * Snap.hsl2rgb\n   [ method ]\n   **\n   * Converts HSL values to an RGB object\n   - h (number) hue\n   - s (number) saturation\n   - l (number) luminosity\n   = (object) RGB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••\n   o }\n  \\*/\n\n\n  Snap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n      l = h.l;\n      s = h.s;\n      h = h.h;\n    }\n\n    if (h > 1 || s > 1 || l > 1) {\n      h /= 360;\n      s /= 100;\n      l /= 100;\n    }\n\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n  };\n  /*\\\n   * Snap.rgb2hsb\n   [ method ]\n   **\n   * Converts RGB values to an HSB object\n   - r (number) red\n   - g (number) green\n   - b (number) blue\n   = (object) HSB object in the following format:\n   o {\n   o     h (number) hue,\n   o     s (number) saturation,\n   o     b (number) brightness\n   o }\n  \\*/\n\n\n  Snap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null : V == r ? (g - b) / C : V == g ? (b - r) / C + 2 : (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {\n      h: H,\n      s: S,\n      b: V,\n      toString: hsbtoString\n    };\n  };\n  /*\\\n   * Snap.rgb2hsl\n   [ method ]\n   **\n   * Converts RGB values to an HSL object\n   - r (number) red\n   - g (number) green\n   - b (number) blue\n   = (object) HSL object in the following format:\n   o {\n   o     h (number) hue,\n   o     s (number) saturation,\n   o     l (number) luminosity\n   o }\n  \\*/\n\n\n  Snap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null : M == r ? (g - b) / C : M == g ? (b - r) / C + 2 : (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 : L < .5 ? C / (2 * L) : C / (2 - 2 * L);\n    return {\n      h: H,\n      s: S,\n      l: L,\n      toString: hsltoString\n    };\n  }; // Transformations\n\n  /*\\\n   * Snap.parsePathString\n   [ method ]\n   **\n   * Utility method\n   **\n   * Parses given path string into an array of arrays of path segments\n   - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n   = (array) array of segments\n  \\*/\n\n\n  Snap.parsePathString = function (pathString) {\n    if (!pathString) {\n      return null;\n    }\n\n    var pth = Snap.path(pathString);\n\n    if (pth.arr) {\n      return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {\n      a: 7,\n      c: 6,\n      o: 2,\n      h: 1,\n      l: 2,\n      m: 2,\n      r: 4,\n      q: 4,\n      s: 4,\n      t: 2,\n      v: 1,\n      u: 3,\n      z: 0\n    },\n        data = [];\n\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) {\n      // rough assumption\n      data = Snap.path.clone(pathString);\n    }\n\n    if (!data.length) {\n      Str(pathString).replace(pathCommand, function (a, b, c) {\n        var params = [],\n            name = b.toLowerCase();\n        c.replace(pathValues, function (a, b) {\n          b && params.push(+b);\n        });\n\n        if (name == \"m\" && params.length > 2) {\n          data.push([b].concat(params.splice(0, 2)));\n          name = \"l\";\n          b = b == \"m\" ? \"l\" : \"L\";\n        }\n\n        if (name == \"o\" && params.length == 1) {\n          data.push([b, params[0]]);\n        }\n\n        if (name == \"r\") {\n          data.push([b].concat(params));\n        } else while (params.length >= paramCounts[name]) {\n          data.push([b].concat(params.splice(0, paramCounts[name])));\n\n          if (!paramCounts[name]) {\n            break;\n          }\n        }\n      });\n    }\n\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n  };\n  /*\\\n   * Snap.parseTransformString\n   [ method ]\n   **\n   * Utility method\n   **\n   * Parses given transform string into an array of transformations\n   - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n   = (array) array of transformations\n  \\*/\n\n\n  var parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n      return null;\n    }\n\n    var paramCounts = {\n      r: 3,\n      s: 4,\n      t: 2,\n      m: 6\n    },\n        data = [];\n\n    if (is(TString, \"array\") && is(TString[0], \"array\")) {\n      // rough assumption\n      data = Snap.path.clone(TString);\n    }\n\n    if (!data.length) {\n      Str(TString).replace(tCommand, function (a, b, c) {\n        var params = [],\n            name = b.toLowerCase();\n        c.replace(pathValues, function (a, b) {\n          b && params.push(+b);\n        });\n        data.push([b].concat(params));\n      });\n    }\n\n    data.toString = Snap.path.toString;\n    return data;\n  };\n\n  function svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n      params = params.split(/\\s*,\\s*|\\s+/);\n\n      if (name == \"rotate\" && params.length == 1) {\n        params.push(0, 0);\n      }\n\n      if (name == \"scale\") {\n        if (params.length > 2) {\n          params = params.slice(0, 2);\n        } else if (params.length == 2) {\n          params.push(0, 0);\n        }\n\n        if (params.length == 1) {\n          params.push(params[0], 0, 0);\n        }\n      }\n\n      if (name == \"skewX\") {\n        res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n      } else if (name == \"skewY\") {\n        res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n      } else {\n        res.push([name.charAt(0)].concat(params));\n      }\n\n      return all;\n    });\n    return res;\n  }\n\n  Snap._.svgTransform2string = svgTransform2string;\n  Snap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\n\n  function transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix();\n\n    if (tdata) {\n      for (var i = 0, ii = tdata.length; i < ii; i++) {\n        var t = tdata[i],\n            tlen = t.length,\n            command = Str(t[0]).toLowerCase(),\n            absolute = t[0] != command,\n            inver = absolute ? m.invert() : 0,\n            x1,\n            y1,\n            x2,\n            y2,\n            bb;\n\n        if (command == \"t\" && tlen == 2) {\n          m.translate(t[1], 0);\n        } else if (command == \"t\" && tlen == 3) {\n          if (absolute) {\n            x1 = inver.x(0, 0);\n            y1 = inver.y(0, 0);\n            x2 = inver.x(t[1], t[2]);\n            y2 = inver.y(t[1], t[2]);\n            m.translate(x2 - x1, y2 - y1);\n          } else {\n            m.translate(t[1], t[2]);\n          }\n        } else if (command == \"r\") {\n          if (tlen == 2) {\n            bb = bb || bbox;\n            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n          } else if (tlen == 4) {\n            if (absolute) {\n              x2 = inver.x(t[2], t[3]);\n              y2 = inver.y(t[2], t[3]);\n              m.rotate(t[1], x2, y2);\n            } else {\n              m.rotate(t[1], t[2], t[3]);\n            }\n          }\n        } else if (command == \"s\") {\n          if (tlen == 2 || tlen == 3) {\n            bb = bb || bbox;\n            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n          } else if (tlen == 4) {\n            if (absolute) {\n              x2 = inver.x(t[2], t[3]);\n              y2 = inver.y(t[2], t[3]);\n              m.scale(t[1], t[1], x2, y2);\n            } else {\n              m.scale(t[1], t[1], t[2], t[3]);\n            }\n          } else if (tlen == 5) {\n            if (absolute) {\n              x2 = inver.x(t[3], t[4]);\n              y2 = inver.y(t[3], t[4]);\n              m.scale(t[1], t[2], x2, y2);\n            } else {\n              m.scale(t[1], t[2], t[3], t[4]);\n            }\n          }\n        } else if (command == \"m\" && tlen == 7) {\n          m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n        }\n      }\n    }\n\n    return m;\n  }\n\n  Snap._.transform2matrix = transform2matrix;\n  Snap._unit2px = unit2px;\n  var contains = glob.doc.contains || glob.doc.compareDocumentPosition ? function (a, b) {\n    var adown = a.nodeType == 9 ? a.documentElement : a,\n        bup = b && b.parentNode;\n    return a == bup || !!(bup && bup.nodeType == 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n  } : function (a, b) {\n    if (b) {\n      while (b) {\n        b = b.parentNode;\n\n        if (b == a) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  function getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || el.node.parentNode && wrap(el.node.parentNode) || Snap.select(\"svg\") || Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs = pdefs == null ? false : pdefs.node;\n\n    if (!defs) {\n      defs = make(\"defs\", p.node).node;\n    }\n\n    return defs;\n  }\n\n  function getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n  }\n\n  Snap._.getSomeDefs = getSomeDefs;\n  Snap._.getSomeSVG = getSomeSVG;\n\n  function unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n\n    if (!mgr) {\n      mgr = $(\"rect\");\n      $(mgr, {\n        x: -9e9,\n        y: -9e9,\n        width: 10,\n        height: 10,\n        \"class\": \"svg---mgr\",\n        fill: \"none\"\n      });\n      svg.appendChild(mgr);\n    }\n\n    function getW(val) {\n      if (val == null) {\n        return E;\n      }\n\n      if (val == +val) {\n        return val;\n      }\n\n      $(mgr, {\n        width: val\n      });\n\n      try {\n        return mgr.getBBox().width;\n      } catch (e) {\n        return 0;\n      }\n    }\n\n    function getH(val) {\n      if (val == null) {\n        return E;\n      }\n\n      if (val == +val) {\n        return val;\n      }\n\n      $(mgr, {\n        height: val\n      });\n\n      try {\n        return mgr.getBBox().height;\n      } catch (e) {\n        return 0;\n      }\n    }\n\n    function set(nam, f) {\n      if (name == null) {\n        out[nam] = f(el.attr(nam) || 0);\n      } else if (nam == name) {\n        out = f(value == null ? el.attr(nam) || 0 : value);\n      }\n    }\n\n    switch (el.type) {\n      case \"rect\":\n        set(\"rx\", getW);\n        set(\"ry\", getH);\n\n      case \"image\":\n        set(\"width\", getW);\n        set(\"height\", getH);\n\n      case \"text\":\n        set(\"x\", getW);\n        set(\"y\", getH);\n        break;\n\n      case \"circle\":\n        set(\"cx\", getW);\n        set(\"cy\", getH);\n        set(\"r\", getW);\n        break;\n\n      case \"ellipse\":\n        set(\"cx\", getW);\n        set(\"cy\", getH);\n        set(\"rx\", getW);\n        set(\"ry\", getH);\n        break;\n\n      case \"line\":\n        set(\"x1\", getW);\n        set(\"x2\", getW);\n        set(\"y1\", getH);\n        set(\"y2\", getH);\n        break;\n\n      case \"marker\":\n        set(\"refX\", getW);\n        set(\"markerWidth\", getW);\n        set(\"refY\", getH);\n        set(\"markerHeight\", getH);\n        break;\n\n      case \"radialGradient\":\n        set(\"fx\", getW);\n        set(\"fy\", getH);\n        break;\n\n      case \"tspan\":\n        set(\"dx\", getW);\n        set(\"dy\", getH);\n        break;\n\n      default:\n        set(name, getW);\n    }\n\n    svg.removeChild(mgr);\n    return out;\n  }\n  /*\\\n   * Snap.select\n   [ method ]\n   **\n   * Wraps a DOM element specified by CSS selector as @Element\n   - query (string) CSS selector of the element\n   = (Element) the current element\n  \\*/\n\n\n  Snap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n  };\n  /*\\\n   * Snap.selectAll\n   [ method ]\n   **\n   * Wraps DOM elements specified by CSS selector as set or array of @Element\n   - query (string) CSS selector of the element\n   = (Element) the current element\n  \\*/\n\n\n  Snap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n\n    for (var i = 0; i < nodelist.length; i++) {\n      set.push(wrap(nodelist[i]));\n    }\n\n    return set;\n  };\n\n  function add2group(list) {\n    if (!is(list, \"array\")) {\n      list = Array.prototype.slice.call(arguments, 0);\n    }\n\n    var i = 0,\n        j = 0,\n        node = this.node;\n\n    while (this[i]) {\n      delete this[i++];\n    }\n\n    for (i = 0; i < list.length; i++) {\n      if (list[i].type == \"set\") {\n        list[i].forEach(function (el) {\n          node.appendChild(el.node);\n        });\n      } else {\n        node.appendChild(list[i].node);\n      }\n    }\n\n    var children = node.childNodes;\n\n    for (i = 0; i < children.length; i++) {\n      this[j++] = wrap(children[i]);\n    }\n\n    return this;\n  } // Hub garbage collector every 10s\n\n\n  setInterval(function () {\n    for (var key in hub) {\n      if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n          delete hub[key];\n        }\n      }\n    }\n  }, 1e4);\n\n  function Element(el) {\n    if (el.snap in hub) {\n      return hub[el.snap];\n    }\n\n    var svg;\n\n    try {\n      svg = el.ownerSVGElement;\n    } catch (e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n\n\n    this.node = el;\n\n    if (svg) {\n      this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n\n\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n      transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n\n    if (this.type == \"g\") {\n      this.add = add2group;\n    }\n\n    if (this.type in {\n      g: 1,\n      mask: 1,\n      pattern: 1,\n      symbol: 1\n    }) {\n      for (var method in Paper.prototype) {\n        if (Paper.prototype[has](method)) {\n          this[method] = Paper.prototype[method];\n        }\n      }\n    }\n  }\n  /*\\\n    * Element.attr\n    [ method ]\n    **\n    * Gets or sets given attributes of the element.\n    **\n    - params (object) contains key-value pairs of attributes you want to set\n    * or\n    - param (string) name of the attribute\n    = (Element) the current element\n    * or\n    = (string) value of attribute\n    > Usage\n    | el.attr({\n    |     fill: \"#fc0\",\n    |     stroke: \"#000\",\n    |     strokeWidth: 2, // CamelCase...\n    |     \"fill-opacity\": 0.5, // or dash-separated names\n    |     width: \"*=2\" // prefixed values\n    | });\n    | console.log(el.attr(\"fill\")); // #fc0\n    * Prefixed values in format `\"+=10\"` supported. All four operations\n    * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n    * and `-`: `\"+=2em\"`.\n   \\*/\n\n\n  Element.prototype.attr = function (params, value) {\n    var el = this,\n        node = el.node;\n\n    if (!params) {\n      if (node.nodeType != 1) {\n        return {\n          text: node.nodeValue\n        };\n      }\n\n      var attr = node.attributes,\n          out = {};\n\n      for (var i = 0, ii = attr.length; i < ii; i++) {\n        out[attr[i].nodeName] = attr[i].nodeValue;\n      }\n\n      return out;\n    }\n\n    if (is(params, \"string\")) {\n      if (arguments.length > 1) {\n        var json = {};\n        json[params] = value;\n        params = json;\n      } else {\n        return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n      }\n    }\n\n    for (var att in params) {\n      if (params[has](att)) {\n        eve(\"snap.util.attr.\" + att, el, params[att]);\n      }\n    }\n\n    return el;\n  };\n  /*\\\n   * Snap.parse\n   [ method ]\n   **\n   * Parses SVG fragment and converts it into a @Fragment\n   **\n   - svg (string) SVG string\n   = (Fragment) the @Fragment\n  \\*/\n\n\n  Snap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n      svg = \"<svg>\" + svg + \"</svg>\";\n      full = false;\n    }\n\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n\n    if (svg) {\n      if (full) {\n        f = svg;\n      } else {\n        while (svg.firstChild) {\n          f.appendChild(svg.firstChild);\n        }\n      }\n    }\n\n    return new Fragment(f);\n  };\n\n  function Fragment(frag) {\n    this.node = frag;\n  }\n  /*\\\n   * Snap.fragment\n   [ method ]\n   **\n   * Creates a DOM fragment from a given list of elements or strings\n   **\n   - varargs (…) SVG string\n   = (Fragment) the @Fragment\n  \\*/\n\n\n  Snap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n\n    for (var i = 0, ii = args.length; i < ii; i++) {\n      var item = args[i];\n\n      if (item.node && item.node.nodeType) {\n        f.appendChild(item.node);\n      }\n\n      if (item.nodeType) {\n        f.appendChild(item);\n      }\n\n      if (typeof item == \"string\") {\n        f.appendChild(Snap.parse(item).node);\n      }\n    }\n\n    return new Fragment(f);\n  };\n\n  function make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n  }\n\n  function Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n      if (w.snap in hub) {\n        return hub[w.snap];\n      }\n\n      var doc = w.ownerDocument;\n      res = new Element(w);\n      desc = w.getElementsByTagName(\"desc\")[0];\n      defs = w.getElementsByTagName(\"defs\")[0];\n\n      if (!desc) {\n        desc = $(\"desc\");\n        desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n        res.node.appendChild(desc);\n      }\n\n      if (!defs) {\n        defs = $(\"defs\");\n        res.node.appendChild(defs);\n      }\n\n      res.defs = defs;\n\n      for (var key in proto) {\n        if (proto[has](key)) {\n          res[key] = proto[key];\n        }\n      }\n\n      res.paper = res.root = res;\n    } else {\n      res = make(\"svg\", glob.doc.body);\n      $(res.node, {\n        height: h,\n        version: 1.1,\n        width: w,\n        xmlns: xmlns\n      });\n    }\n\n    return res;\n  }\n\n  function wrap(dom) {\n    if (!dom) {\n      return dom;\n    }\n\n    if (dom instanceof Element || dom instanceof Fragment) {\n      return dom;\n    }\n\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n      return new Paper(dom);\n    }\n\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n      return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n\n    return new Element(dom);\n  }\n\n  Snap._.make = make;\n  Snap._.wrap = wrap;\n  /*\\\n   * Paper.el\n   [ method ]\n   **\n   * Creates an element on paper with a given name and no attributes\n   **\n   - name (string) tag name\n   - attr (object) attributes\n   = (Element) the current element\n   > Usage\n   | var c = paper.circle(10, 10, 10); // is the same as...\n   | var c = paper.el(\"circle\").attr({\n   |     cx: 10,\n   |     cy: 10,\n   |     r: 10\n   | });\n   | // and the same as\n   | var c = paper.el(\"circle\", {\n   |     cx: 10,\n   |     cy: 10,\n   |     r: 10\n   | });\n  \\*/\n\n  Paper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n  };\n  /*\\\n   * Element.children\n   [ method ]\n   **\n   * Returns array of all the children of the element.\n   = (array) array of Elements\n  \\*/\n\n\n  Element.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n      out[i] = Snap(ch[i]);\n    }\n\n    return out;\n  };\n\n  function jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n      var item = {\n        type: root[i].type,\n        attr: root[i].attr()\n      },\n          children = root[i].children();\n      o.push(item);\n\n      if (children.length) {\n        jsonFiller(children, item.childNodes = []);\n      }\n    }\n  }\n  /*\\\n   * Element.toJSON\n   [ method ]\n   **\n   * Returns object representation of the given element and all its children.\n   = (object) in format\n   o {\n   o     type (string) this.type,\n   o     attr (object) attributes map,\n   o     childNodes (array) optional array of children in the same format\n   o }\n  \\*/\n\n\n  Element.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n  }; // default\n\n\n  eve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n      return \"-\" + letter.toLowerCase();\n    });\n\n    if (cssAttr[has](css)) {\n      return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n      return $(this.node, att);\n    }\n  });\n  var cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n  };\n  eve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n      return letter.toUpperCase();\n    }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n      return \"-\" + letter.toLowerCase();\n    });\n\n    if (cssAttr[has](css)) {\n      this.node.style[style] = value == null ? E : value;\n    } else {\n      $(this.node, attr);\n    }\n  });\n\n  (function (proto) {})(Paper.prototype); // simple ajax\n\n  /*\\\n   * Snap.ajax\n   [ method ]\n   **\n   * Simple implementation of Ajax\n   **\n   - url (string) URL\n   - postData (object|string) data for post request\n   - callback (function) callback\n   - scope (object) #optional scope of callback\n   * or\n   - url (string) URL\n   - callback (function) callback\n   - scope (object) #optional scope of callback\n   = (XMLHttpRequest) the XMLHttpRequest object, just in case\n  \\*/\n\n\n  Snap.ajax = function (url, postData, callback, scope) {\n    var req = new XMLHttpRequest(),\n        id = ID();\n\n    if (req) {\n      if (is(postData, \"function\")) {\n        scope = callback;\n        callback = postData;\n        postData = null;\n      } else if (is(postData, \"object\")) {\n        var pd = [];\n\n        for (var key in postData) {\n          if (postData.hasOwnProperty(key)) {\n            pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n          }\n        }\n\n        postData = pd.join(\"&\");\n      }\n\n      req.open(postData ? \"POST\" : \"GET\", url, true);\n\n      if (postData) {\n        req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n      }\n\n      if (callback) {\n        eve.once(\"snap.ajax.\" + id + \".0\", callback);\n        eve.once(\"snap.ajax.\" + id + \".200\", callback);\n        eve.once(\"snap.ajax.\" + id + \".304\", callback);\n      }\n\n      req.onreadystatechange = function () {\n        if (req.readyState != 4) return;\n        eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n      };\n\n      if (req.readyState == 4) {\n        return req;\n      }\n\n      req.send(postData);\n      return req;\n    }\n  };\n  /*\\\n   * Snap.load\n   [ method ]\n   **\n   * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n   **\n   - url (string) URL\n   - callback (function) callback\n   - scope (object) #optional scope of callback\n  \\*/\n\n\n  Snap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n      var f = Snap.parse(req.responseText);\n      scope ? callback.call(scope, f) : callback(f);\n    });\n  };\n\n  var getOffset = function getOffset(elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0,\n        clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top = box.top + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n      y: top,\n      x: left\n    };\n  };\n  /*\\\n   * Snap.getElementByPoint\n   [ method ]\n   **\n   * Returns you topmost element under given point.\n   **\n   = (object) Snap element object\n   - x (number) x coordinate from the top left corner of the window\n   - y (number) y coordinate from the top left corner of the window\n   > Usage\n   | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n  \\*/\n\n\n  Snap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n\n    if (glob.win.opera && target.tagName == \"svg\") {\n      var so = getOffset(target),\n          sr = target.createSVGRect();\n      sr.x = x - so.x;\n      sr.y = y - so.y;\n      sr.width = sr.height = 1;\n      var hits = target.getIntersectionList(sr, null);\n\n      if (hits.length) {\n        target = hits[hits.length - 1];\n      }\n    }\n\n    if (!target) {\n      return null;\n    }\n\n    return wrap(target);\n  };\n  /*\\\n   * Snap.plugin\n   [ method ]\n   **\n   * Let you write plugins. You pass in a function with five arguments, like this:\n   | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n   |     Snap.newmethod = function () {};\n   |     Element.prototype.newmethod = function () {};\n   |     Paper.prototype.newmethod = function () {};\n   | });\n   * Inside the function you have access to all main objects (and their\n   * prototypes). This allow you to extend anything you want.\n   **\n   - f (function) your plugin body\n  \\*/\n\n\n  Snap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n  };\n\n  glob.win.Snap = Snap;\n  return Snap;\n}(window || this); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var elproto = Element.prototype,\n      is = Snap.is,\n      Str = String,\n      unit2px = Snap._unit2px,\n      $ = Snap._.$,\n      make = Snap._.make,\n      getSomeDefs = Snap._.getSomeDefs,\n      has = \"hasOwnProperty\",\n      wrap = Snap._.wrap;\n  /*\\\n   * Element.getBBox\n   [ method ]\n   **\n   * Returns the bounding box descriptor for the given element\n   **\n   = (object) bounding box descriptor:\n   o {\n   o     cx: (number) x of the center,\n   o     cy: (number) x of the center,\n   o     h: (number) height,\n   o     height: (number) height,\n   o     path: (string) path command for the box,\n   o     r0: (number) radius of a circle that fully encloses the box,\n   o     r1: (number) radius of the smallest circle that can be enclosed,\n   o     r2: (number) radius of the largest circle that can be enclosed,\n   o     vb: (string) box as a viewbox command,\n   o     w: (number) width,\n   o     width: (number) width,\n   o     x2: (number) x of the right side,\n   o     x: (number) x of the left side,\n   o     y2: (number) y of the bottom edge,\n   o     y: (number) y of the top edge\n   o }\n  \\*/\n\n  elproto.getBBox = function (isWithoutTransform) {\n    if (this.type == \"tspan\") {\n      return Snap._.box(this.node.getClientRects().item(0));\n    }\n\n    if (!Snap.Matrix || !Snap.path) {\n      return this.node.getBBox();\n    }\n\n    var el = this,\n        m = new Snap.Matrix();\n\n    if (el.removed) {\n      return Snap._.box();\n    }\n\n    while (el.type == \"use\") {\n      if (!isWithoutTransform) {\n        m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n      }\n\n      if (el.original) {\n        el = el.original;\n      } else {\n        var href = el.attr(\"xlink:href\");\n        el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n      }\n    }\n\n    var _ = el._,\n        pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n\n    try {\n      if (isWithoutTransform) {\n        _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n        return Snap._.box(_.bboxwt);\n      } else {\n        el.realPath = pathfinder(el);\n        el.matrix = el.transform().localMatrix;\n        _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n        return Snap._.box(_.bbox);\n      }\n    } catch (e) {\n      // Firefox doesn’t give you bbox of hidden element\n      return Snap._.box();\n    }\n  };\n\n  var propString = function propString() {\n    return this.string;\n  };\n\n  function extractTransform(el, tstr) {\n    if (tstr == null) {\n      var doReturn = true;\n\n      if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n        tstr = el.node.getAttribute(\"gradientTransform\");\n      } else if (el.type == \"pattern\") {\n        tstr = el.node.getAttribute(\"patternTransform\");\n      } else {\n        tstr = el.node.getAttribute(\"transform\");\n      }\n\n      if (!tstr) {\n        return new Snap.Matrix();\n      }\n\n      tstr = Snap._.svgTransform2string(tstr);\n    } else {\n      if (!Snap._.rgTransform.test(tstr)) {\n        tstr = Snap._.svgTransform2string(tstr);\n      } else {\n        tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n      }\n\n      if (is(tstr, \"array\")) {\n        tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n      }\n\n      el._.transform = tstr;\n    }\n\n    var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n\n    if (doReturn) {\n      return m;\n    } else {\n      el.matrix = m;\n    }\n  }\n  /*\\\n   * Element.transform\n   [ method ]\n   **\n   * Gets or sets transformation of the element\n   **\n   - tstr (string) transform string in Snap or SVG format\n   = (Element) the current element\n   * or\n   = (object) transformation descriptor:\n   o {\n   o     string (string) transform string,\n   o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n   o     localMatrix (Matrix) matrix of transformations applied only to the element,\n   o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n   o     global (string) global transformation as string,\n   o     local (string) local transformation as string,\n   o     toString (function) returns `string` property\n   o }\n  \\*/\n\n\n  elproto.transform = function (tstr) {\n    var _ = this._;\n\n    if (tstr == null) {\n      var papa = this,\n          global = new Snap.Matrix(this.node.getCTM()),\n          local = extractTransform(this),\n          ms = [local],\n          m = new Snap.Matrix(),\n          i,\n          localString = local.toTransformString(),\n          string = Str(local) == Str(this.matrix) ? Str(_.transform) : localString;\n\n      while (papa.type != \"svg\" && (papa = papa.parent())) {\n        ms.push(extractTransform(papa));\n      }\n\n      i = ms.length;\n\n      while (i--) {\n        m.add(ms[i]);\n      }\n\n      return {\n        string: string,\n        globalMatrix: global,\n        totalMatrix: m,\n        localMatrix: local,\n        diffMatrix: global.clone().add(local.invert()),\n        global: global.toTransformString(),\n        total: m.toTransformString(),\n        local: localString,\n        toString: propString\n      };\n    }\n\n    if (tstr instanceof Snap.Matrix) {\n      this.matrix = tstr;\n      this._.transform = tstr.toTransformString();\n    } else {\n      extractTransform(this, tstr);\n    }\n\n    if (this.node) {\n      if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n        $(this.node, {\n          gradientTransform: this.matrix\n        });\n      } else if (this.type == \"pattern\") {\n        $(this.node, {\n          patternTransform: this.matrix\n        });\n      } else {\n        $(this.node, {\n          transform: this.matrix\n        });\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.parent\n   [ method ]\n   **\n   * Returns the element's parent\n   **\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.parent = function () {\n    return wrap(this.node.parentNode);\n  };\n  /*\\\n   * Element.append\n   [ method ]\n   **\n   * Appends the given element to current one\n   **\n   - el (Element|Set) element to append\n   = (Element) the parent element\n  \\*/\n\n  /*\\\n   * Element.add\n   [ method ]\n   **\n   * See @Element.append\n  \\*/\n\n\n  elproto.append = elproto.add = function (el) {\n    if (el) {\n      if (el.type == \"set\") {\n        var it = this;\n        el.forEach(function (el) {\n          it.add(el);\n        });\n        return this;\n      }\n\n      el = wrap(el);\n      this.node.appendChild(el.node);\n      el.paper = this.paper;\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.appendTo\n   [ method ]\n   **\n   * Appends the current element to the given one\n   **\n   - el (Element) parent element to append to\n   = (Element) the child element\n  \\*/\n\n\n  elproto.appendTo = function (el) {\n    if (el) {\n      el = wrap(el);\n      el.append(this);\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.prepend\n   [ method ]\n   **\n   * Prepends the given element to the current one\n   **\n   - el (Element) element to prepend\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.prepend = function (el) {\n    if (el) {\n      if (el.type == \"set\") {\n        var it = this,\n            first;\n        el.forEach(function (el) {\n          if (first) {\n            first.after(el);\n          } else {\n            it.prepend(el);\n          }\n\n          first = el;\n        });\n        return this;\n      }\n\n      el = wrap(el);\n      var parent = el.parent();\n      this.node.insertBefore(el.node, this.node.firstChild);\n      this.add && this.add();\n      el.paper = this.paper;\n      this.parent() && this.parent().add();\n      parent && parent.add();\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.prependTo\n   [ method ]\n   **\n   * Prepends the current element to the given one\n   **\n   - el (Element) parent element to prepend to\n   = (Element) the child element\n  \\*/\n\n\n  elproto.prependTo = function (el) {\n    el = wrap(el);\n    el.prepend(this);\n    return this;\n  };\n  /*\\\n   * Element.before\n   [ method ]\n   **\n   * Inserts given element before the current one\n   **\n   - el (Element) element to insert\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.before = function (el) {\n    if (el.type == \"set\") {\n      var it = this;\n      el.forEach(function (el) {\n        var parent = el.parent();\n        it.node.parentNode.insertBefore(el.node, it.node);\n        parent && parent.add();\n      });\n      this.parent().add();\n      return this;\n    }\n\n    el = wrap(el);\n    var parent = el.parent();\n    this.node.parentNode.insertBefore(el.node, this.node);\n    this.parent() && this.parent().add();\n    parent && parent.add();\n    el.paper = this.paper;\n    return this;\n  };\n  /*\\\n   * Element.after\n   [ method ]\n   **\n   * Inserts given element after the current one\n   **\n   - el (Element) element to insert\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.after = function (el) {\n    el = wrap(el);\n    var parent = el.parent();\n\n    if (this.node.nextSibling) {\n      this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n    } else {\n      this.node.parentNode.appendChild(el.node);\n    }\n\n    this.parent() && this.parent().add();\n    parent && parent.add();\n    el.paper = this.paper;\n    return this;\n  };\n  /*\\\n   * Element.insertBefore\n   [ method ]\n   **\n   * Inserts the element after the given one\n   **\n   - el (Element) element next to whom insert to\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.insertBefore = function (el) {\n    el = wrap(el);\n    var parent = this.parent();\n    el.node.parentNode.insertBefore(this.node, el.node);\n    this.paper = el.paper;\n    parent && parent.add();\n    el.parent() && el.parent().add();\n    return this;\n  };\n  /*\\\n   * Element.insertAfter\n   [ method ]\n   **\n   * Inserts the element after the given one\n   **\n   - el (Element) element next to whom insert to\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.insertAfter = function (el) {\n    el = wrap(el);\n    var parent = this.parent();\n    el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n    this.paper = el.paper;\n    parent && parent.add();\n    el.parent() && el.parent().add();\n    return this;\n  };\n  /*\\\n   * Element.remove\n   [ method ]\n   **\n   * Removes element from the DOM\n   = (Element) the detached element\n  \\*/\n\n\n  elproto.remove = function () {\n    var parent = this.parent();\n    this.node.parentNode && this.node.parentNode.removeChild(this.node);\n    delete this.paper;\n    this.removed = true;\n    parent && parent.add();\n    return this;\n  };\n  /*\\\n   * Element.select\n   [ method ]\n   **\n   * Gathers the nested @Element matching the given set of CSS selectors\n   **\n   - query (string) CSS selector\n   = (Element) result of query selection\n  \\*/\n\n\n  elproto.select = function (query) {\n    return wrap(this.node.querySelector(query));\n  };\n  /*\\\n   * Element.selectAll\n   [ method ]\n   **\n   * Gathers nested @Element objects matching the given set of CSS selectors\n   **\n   - query (string) CSS selector\n   = (Set|array) result of query selection\n  \\*/\n\n\n  elproto.selectAll = function (query) {\n    var nodelist = this.node.querySelectorAll(query),\n        set = (Snap.set || Array)();\n\n    for (var i = 0; i < nodelist.length; i++) {\n      set.push(wrap(nodelist[i]));\n    }\n\n    return set;\n  };\n  /*\\\n   * Element.asPX\n   [ method ]\n   **\n   * Returns given attribute of the element as a `px` value (not %, em, etc.)\n   **\n   - attr (string) attribute name\n   - value (string) #optional attribute value\n   = (Element) result of query selection\n  \\*/\n\n\n  elproto.asPX = function (attr, value) {\n    if (value == null) {\n      value = this.attr(attr);\n    }\n\n    return +unit2px(this, attr, value);\n  }; // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n\n  /*\\\n   * Element.use\n   [ method ]\n   **\n   * Creates a `<use>` element linked to the current element\n   **\n   = (Element) the `<use>` element\n  \\*/\n\n\n  elproto.use = function () {\n    var use,\n        id = this.node.id;\n\n    if (!id) {\n      id = this.id;\n      $(this.node, {\n        id: id\n      });\n    }\n\n    if (this.type == \"linearGradient\" || this.type == \"radialGradient\" || this.type == \"pattern\") {\n      use = make(this.type, this.node.parentNode);\n    } else {\n      use = make(\"use\", this.node.parentNode);\n    }\n\n    $(use.node, {\n      \"xlink:href\": \"#\" + id\n    });\n    use.original = this;\n    return use;\n  };\n\n  function fixids(el) {\n    var els = el.selectAll(\"*\"),\n        it,\n        url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n        ids = [],\n        uses = {};\n\n    function urltest(it, name) {\n      var val = $(it.node, name);\n      val = val && val.match(url);\n      val = val && val[2];\n\n      if (val && val.charAt() == \"#\") {\n        val = val.substring(1);\n      } else {\n        return;\n      }\n\n      if (val) {\n        uses[val] = (uses[val] || []).concat(function (id) {\n          var attr = {};\n          attr[name] = Snap.url(id);\n          $(it.node, attr);\n        });\n      }\n    }\n\n    function linktest(it) {\n      var val = $(it.node, \"xlink:href\");\n\n      if (val && val.charAt() == \"#\") {\n        val = val.substring(1);\n      } else {\n        return;\n      }\n\n      if (val) {\n        uses[val] = (uses[val] || []).concat(function (id) {\n          it.attr(\"xlink:href\", \"#\" + id);\n        });\n      }\n    }\n\n    for (var i = 0, ii = els.length; i < ii; i++) {\n      it = els[i];\n      urltest(it, \"fill\");\n      urltest(it, \"stroke\");\n      urltest(it, \"filter\");\n      urltest(it, \"mask\");\n      urltest(it, \"clip-path\");\n      linktest(it);\n      var oldid = $(it.node, \"id\");\n\n      if (oldid) {\n        $(it.node, {\n          id: it.id\n        });\n        ids.push({\n          old: oldid,\n          id: it.id\n        });\n      }\n    }\n\n    for (i = 0, ii = ids.length; i < ii; i++) {\n      var fs = uses[ids[i].old];\n\n      if (fs) {\n        for (var j = 0, jj = fs.length; j < jj; j++) {\n          fs[j](ids[i].id);\n        }\n      }\n    }\n  }\n  /*\\\n   * Element.clone\n   [ method ]\n   **\n   * Creates a clone of the element and inserts it after the element\n   **\n   = (Element) the clone\n  \\*/\n\n\n  elproto.clone = function () {\n    var clone = wrap(this.node.cloneNode(true));\n\n    if ($(clone.node, \"id\")) {\n      $(clone.node, {\n        id: clone.id\n      });\n    }\n\n    fixids(clone);\n    clone.insertAfter(this);\n    return clone;\n  };\n  /*\\\n   * Element.toDefs\n   [ method ]\n   **\n   * Moves element to the shared `<defs>` area\n   **\n   = (Element) the element\n  \\*/\n\n\n  elproto.toDefs = function () {\n    var defs = getSomeDefs(this);\n    defs.appendChild(this.node);\n    return this;\n  };\n  /*\\\n   * Element.toPattern\n   [ method ]\n   **\n   * Creates a `<pattern>` element from the current element\n   **\n   * To create a pattern you have to specify the pattern rect:\n   - x (string|number)\n   - y (string|number)\n   - width (string|number)\n   - height (string|number)\n   = (Element) the `<pattern>` element\n   * You can use pattern later on as an argument for `fill` attribute:\n   | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n   |         fill: \"none\",\n   |         stroke: \"#bada55\",\n   |         strokeWidth: 5\n   |     }).pattern(0, 0, 10, 10),\n   |     c = paper.circle(200, 200, 100);\n   | c.attr({\n   |     fill: p\n   | });\n  \\*/\n\n\n  elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n    var p = make(\"pattern\", getSomeDefs(this));\n\n    if (x == null) {\n      x = this.getBBox();\n    }\n\n    if (is(x, \"object\") && \"x\" in x) {\n      y = x.y;\n      width = x.width;\n      height = x.height;\n      x = x.x;\n    }\n\n    $(p.node, {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      patternUnits: \"userSpaceOnUse\",\n      id: p.id,\n      viewBox: [x, y, width, height].join(\" \")\n    });\n    p.node.appendChild(this.node);\n    return p;\n  }; // SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n  // SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n\n  /*\\\n   * Element.marker\n   [ method ]\n   **\n   * Creates a `<marker>` element from the current element\n   **\n   * To create a marker you have to specify the bounding rect and reference point:\n   - x (number)\n   - y (number)\n   - width (number)\n   - height (number)\n   - refX (number)\n   - refY (number)\n   = (Element) the `<marker>` element\n   * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n  \\*/\n  // TODO add usage for markers\n\n\n  elproto.marker = function (x, y, width, height, refX, refY) {\n    var p = make(\"marker\", getSomeDefs(this));\n\n    if (x == null) {\n      x = this.getBBox();\n    }\n\n    if (is(x, \"object\") && \"x\" in x) {\n      y = x.y;\n      width = x.width;\n      height = x.height;\n      refX = x.refX || x.cx;\n      refY = x.refY || x.cy;\n      x = x.x;\n    }\n\n    $(p.node, {\n      viewBox: [x, y, width, height].join(\" \"),\n      markerWidth: width,\n      markerHeight: height,\n      orient: \"auto\",\n      refX: refX || 0,\n      refY: refY || 0,\n      id: p.id\n    });\n    p.node.appendChild(this.node);\n    return p;\n  };\n\n  var eldata = {};\n  /*\\\n   * Element.data\n   [ method ]\n   **\n   * Adds or retrieves given value associated with given key. (Don’t confuse\n   * with `data-` attributes)\n   *\n   * See also @Element.removeData\n   - key (string) key to store data\n   - value (any) #optional value to store\n   = (object) @Element\n   * or, if value is not specified:\n   = (any) value\n   > Usage\n   | for (var i = 0, i < 5, i++) {\n   |     paper.circle(10 + 15 * i, 10, 10)\n   |          .attr({fill: \"#000\"})\n   |          .data(\"i\", i)\n   |          .click(function () {\n   |             alert(this.data(\"i\"));\n   |          });\n   | }\n  \\*/\n\n  elproto.data = function (key, value) {\n    var data = eldata[this.id] = eldata[this.id] || {};\n\n    if (arguments.length == 0) {\n      eve(\"snap.data.get.\" + this.id, this, data, null);\n      return data;\n    }\n\n    if (arguments.length == 1) {\n      if (Snap.is(key, \"object\")) {\n        for (var i in key) {\n          if (key[has](i)) {\n            this.data(i, key[i]);\n          }\n        }\n\n        return this;\n      }\n\n      eve(\"snap.data.get.\" + this.id, this, data[key], key);\n      return data[key];\n    }\n\n    data[key] = value;\n    eve(\"snap.data.set.\" + this.id, this, value, key);\n    return this;\n  };\n  /*\\\n   * Element.removeData\n   [ method ]\n   **\n   * Removes value associated with an element by given key.\n   * If key is not provided, removes all the data of the element.\n   - key (string) #optional key\n   = (object) @Element\n  \\*/\n\n\n  elproto.removeData = function (key) {\n    if (key == null) {\n      eldata[this.id] = {};\n    } else {\n      eldata[this.id] && delete eldata[this.id][key];\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.outerSVG\n   [ method ]\n   **\n   * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n   *\n   * See also @Element.innerSVG\n   = (string) SVG code for the element\n  \\*/\n\n  /*\\\n   * Element.toString\n   [ method ]\n   **\n   * See @Element.outerSVG\n  \\*/\n\n\n  elproto.outerSVG = elproto.toString = toString(1);\n  /*\\\n   * Element.innerSVG\n   [ method ]\n   **\n   * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n   = (string) SVG code for the element\n  \\*/\n\n  elproto.innerSVG = toString();\n\n  function toString(type) {\n    return function () {\n      var res = type ? \"<\" + this.type : \"\",\n          attr = this.node.attributes,\n          chld = this.node.childNodes;\n\n      if (type) {\n        for (var i = 0, ii = attr.length; i < ii; i++) {\n          res += \" \" + attr[i].name + '=\"' + attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n        }\n      }\n\n      if (chld.length) {\n        type && (res += \">\");\n\n        for (i = 0, ii = chld.length; i < ii; i++) {\n          if (chld[i].nodeType == 3) {\n            res += chld[i].nodeValue;\n          } else if (chld[i].nodeType == 1) {\n            res += wrap(chld[i]).toString();\n          }\n        }\n\n        type && (res += \"</\" + this.type + \">\");\n      } else {\n        type && (res += \"/>\");\n      }\n\n      return res;\n    };\n  }\n\n  elproto.toDataURL = function () {\n    if (window && window.btoa) {\n      var bb = this.getBBox(),\n          svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n        x: +bb.x.toFixed(3),\n        y: +bb.y.toFixed(3),\n        width: +bb.width.toFixed(3),\n        height: +bb.height.toFixed(3),\n        contents: this.outerSVG()\n      });\n      return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n    }\n  };\n  /*\\\n   * Fragment.select\n   [ method ]\n   **\n   * See @Element.select\n  \\*/\n\n\n  Fragment.prototype.select = elproto.select;\n  /*\\\n   * Fragment.selectAll\n   [ method ]\n   **\n   * See @Element.selectAll\n  \\*/\n\n  Fragment.prototype.selectAll = elproto.selectAll;\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var objectToString = Object.prototype.toString,\n      Str = String,\n      math = Math,\n      E = \"\";\n\n  function Matrix(a, b, c, d, e, f) {\n    if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n      this.a = a.a;\n      this.b = a.b;\n      this.c = a.c;\n      this.d = a.d;\n      this.e = a.e;\n      this.f = a.f;\n      return;\n    }\n\n    if (a != null) {\n      this.a = +a;\n      this.b = +b;\n      this.c = +c;\n      this.d = +d;\n      this.e = +e;\n      this.f = +f;\n    } else {\n      this.a = 1;\n      this.b = 0;\n      this.c = 0;\n      this.d = 1;\n      this.e = 0;\n      this.f = 0;\n    }\n  }\n\n  (function (matrixproto) {\n    /*\\\n     * Matrix.add\n     [ method ]\n     **\n     * Adds the given matrix to existing one\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - matrix (object) @Matrix\n    \\*/\n    matrixproto.add = function (a, b, c, d, e, f) {\n      if (a && a instanceof Matrix) {\n        return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n      }\n\n      var aNew = a * this.a + b * this.c,\n          bNew = a * this.b + b * this.d;\n      this.e += e * this.a + f * this.c;\n      this.f += e * this.b + f * this.d;\n      this.c = c * this.a + d * this.c;\n      this.d = c * this.b + d * this.d;\n      this.a = aNew;\n      this.b = bNew;\n      return this;\n    };\n    /*\\\n     * Matrix.multLeft\n     [ method ]\n     **\n     * Multiplies a passed affine transform to the left: M * this.\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - matrix (object) @Matrix\n    \\*/\n\n\n    Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n      if (a && a instanceof Matrix) {\n        return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n      }\n\n      var aNew = a * this.a + c * this.b,\n          cNew = a * this.c + c * this.d,\n          eNew = a * this.e + c * this.f + e;\n      this.b = b * this.a + d * this.b;\n      this.d = b * this.c + d * this.d;\n      this.f = b * this.e + d * this.f + f;\n      this.a = aNew;\n      this.c = cNew;\n      this.e = eNew;\n      return this;\n    };\n    /*\\\n     * Matrix.invert\n     [ method ]\n     **\n     * Returns an inverted version of the matrix\n     = (object) @Matrix\n    \\*/\n\n\n    matrixproto.invert = function () {\n      var me = this,\n          x = me.a * me.d - me.b * me.c;\n      return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n    };\n    /*\\\n     * Matrix.clone\n     [ method ]\n     **\n     * Returns a copy of the matrix\n     = (object) @Matrix\n    \\*/\n\n\n    matrixproto.clone = function () {\n      return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n    };\n    /*\\\n     * Matrix.translate\n     [ method ]\n     **\n     * Translate the matrix\n     - x (number) horizontal offset distance\n     - y (number) vertical offset distance\n    \\*/\n\n\n    matrixproto.translate = function (x, y) {\n      this.e += x * this.a + y * this.c;\n      this.f += x * this.b + y * this.d;\n      return this;\n    };\n    /*\\\n     * Matrix.scale\n     [ method ]\n     **\n     * Scales the matrix\n     - x (number) amount to be scaled, with `1` resulting in no change\n     - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n     - cx (number) #optional horizontal origin point from which to scale\n     - cy (number) #optional vertical origin point from which to scale\n     * Default cx, cy is the middle point of the element.\n    \\*/\n\n\n    matrixproto.scale = function (x, y, cx, cy) {\n      y == null && (y = x);\n      (cx || cy) && this.translate(cx, cy);\n      this.a *= x;\n      this.b *= x;\n      this.c *= y;\n      this.d *= y;\n      (cx || cy) && this.translate(-cx, -cy);\n      return this;\n    };\n    /*\\\n     * Matrix.rotate\n     [ method ]\n     **\n     * Rotates the matrix\n     - a (number) angle of rotation, in degrees\n     - x (number) horizontal origin point from which to rotate\n     - y (number) vertical origin point from which to rotate\n    \\*/\n\n\n    matrixproto.rotate = function (a, x, y) {\n      a = Snap.rad(a);\n      x = x || 0;\n      y = y || 0;\n      var cos = +math.cos(a).toFixed(9),\n          sin = +math.sin(a).toFixed(9);\n      this.add(cos, sin, -sin, cos, x, y);\n      return this.add(1, 0, 0, 1, -x, -y);\n    };\n    /*\\\n     * Matrix.skewX\n     [ method ]\n     **\n     * Skews the matrix along the x-axis\n     - x (number) Angle to skew along the x-axis (in degrees).\n    \\*/\n\n\n    matrixproto.skewX = function (x) {\n      return this.skew(x, 0);\n    };\n    /*\\\n     * Matrix.skewY\n     [ method ]\n     **\n     * Skews the matrix along the y-axis\n     - y (number) Angle to skew along the y-axis (in degrees).\n    \\*/\n\n\n    matrixproto.skewY = function (y) {\n      return this.skew(0, y);\n    };\n    /*\\\n     * Matrix.skew\n     [ method ]\n     **\n     * Skews the matrix\n     - y (number) Angle to skew along the y-axis (in degrees).\n     - x (number) Angle to skew along the x-axis (in degrees).\n    \\*/\n\n\n    matrixproto.skew = function (x, y) {\n      x = x || 0;\n      y = y || 0;\n      x = Snap.rad(x);\n      y = Snap.rad(y);\n      var c = math.tan(x).toFixed(9);\n      var b = math.tan(y).toFixed(9);\n      return this.add(1, b, c, 1, 0, 0);\n    };\n    /*\\\n     * Matrix.x\n     [ method ]\n     **\n     * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n     - x (number)\n     - y (number)\n     = (number) x\n    \\*/\n\n\n    matrixproto.x = function (x, y) {\n      return x * this.a + y * this.c + this.e;\n    };\n    /*\\\n     * Matrix.y\n     [ method ]\n     **\n     * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n     - x (number)\n     - y (number)\n     = (number) y\n    \\*/\n\n\n    matrixproto.y = function (x, y) {\n      return x * this.b + y * this.d + this.f;\n    };\n\n    matrixproto.get = function (i) {\n      return +this[Str.fromCharCode(97 + i)].toFixed(4);\n    };\n\n    matrixproto.toString = function () {\n      return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n    };\n\n    matrixproto.offset = function () {\n      return [this.e.toFixed(4), this.f.toFixed(4)];\n    };\n\n    function norm(a) {\n      return a[0] * a[0] + a[1] * a[1];\n    }\n\n    function normalize(a) {\n      var mag = math.sqrt(norm(a));\n      a[0] && (a[0] /= mag);\n      a[1] && (a[1] /= mag);\n    }\n    /*\\\n     * Matrix.determinant\n     [ method ]\n     **\n     * Finds determinant of the given matrix.\n     = (number) determinant\n    \\*/\n\n\n    matrixproto.determinant = function () {\n      return this.a * this.d - this.b * this.c;\n    };\n    /*\\\n     * Matrix.split\n     [ method ]\n     **\n     * Splits matrix into primitive transformations\n     = (object) in format:\n     o dx (number) translation by x\n     o dy (number) translation by y\n     o scalex (number) scale by x\n     o scaley (number) scale by y\n     o shear (number) shear\n     o rotate (number) rotation in deg\n     o isSimple (boolean) could it be represented via simple transformations\n    \\*/\n\n\n    matrixproto.split = function () {\n      var out = {}; // translation\n\n      out.dx = this.e;\n      out.dy = this.f; // scale and shear\n\n      var row = [[this.a, this.b], [this.c, this.d]];\n      out.scalex = math.sqrt(norm(row[0]));\n      normalize(row[0]);\n      out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n      row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n      out.scaley = math.sqrt(norm(row[1]));\n      normalize(row[1]);\n      out.shear /= out.scaley;\n\n      if (this.determinant() < 0) {\n        out.scalex = -out.scalex;\n      } // rotation\n\n\n      var sin = row[0][1],\n          cos = row[1][1];\n\n      if (cos < 0) {\n        out.rotate = Snap.deg(math.acos(cos));\n\n        if (sin < 0) {\n          out.rotate = 360 - out.rotate;\n        }\n      } else {\n        out.rotate = Snap.deg(math.asin(sin));\n      }\n\n      out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n      out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n      out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n      return out;\n    };\n    /*\\\n     * Matrix.toTransformString\n     [ method ]\n     **\n     * Returns transform string that represents given matrix\n     = (string) transform string\n    \\*/\n\n\n    matrixproto.toTransformString = function (shorter) {\n      var s = shorter || this.split();\n\n      if (!+s.shear.toFixed(9)) {\n        s.scalex = +s.scalex.toFixed(4);\n        s.scaley = +s.scaley.toFixed(4);\n        s.rotate = +s.rotate.toFixed(4);\n        return (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) + (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) + (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n      } else {\n        return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n      }\n    };\n  })(Matrix.prototype);\n  /*\\\n   * Snap.Matrix\n   [ method ]\n   **\n   * Matrix constructor, extend on your own risk.\n   * To create matrices use @Snap.matrix.\n  \\*/\n\n\n  Snap.Matrix = Matrix;\n  /*\\\n   * Snap.matrix\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns a matrix based on the given parameters\n   - a (number)\n   - b (number)\n   - c (number)\n   - d (number)\n   - e (number)\n   - f (number)\n   * or\n   - svgMatrix (SVGMatrix)\n   = (object) @Matrix\n  \\*/\n\n  Snap.matrix = function (a, b, c, d, e, f) {\n    return new Matrix(a, b, c, d, e, f);\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var has = \"hasOwnProperty\",\n      make = Snap._.make,\n      wrap = Snap._.wrap,\n      is = Snap.is,\n      getSomeDefs = Snap._.getSomeDefs,\n      reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n      $ = Snap._.$,\n      URL = Snap.url,\n      Str = String,\n      separator = Snap._.separator,\n      E = \"\";\n  /*\\\n   * Snap.deurl\n   [ method ]\n   **\n   * Unwraps path from `\"url(<path>)\"`.\n   - value (string) url path\n   = (string) unwrapped path\n  \\*/\n\n  Snap.deurl = function (value) {\n    var res = String(value).match(reURLValue);\n    return res ? res[2] : value;\n  }; // Attributes event handlers\n\n\n  eve.on(\"snap.util.attr.mask\", function (value) {\n    if (value instanceof Element || value instanceof Fragment) {\n      eve.stop();\n\n      if (value instanceof Fragment && value.node.childNodes.length == 1) {\n        value = value.node.firstChild;\n        getSomeDefs(this).appendChild(value);\n        value = wrap(value);\n      }\n\n      if (value.type == \"mask\") {\n        var mask = value;\n      } else {\n        mask = make(\"mask\", getSomeDefs(this));\n        mask.node.appendChild(value.node);\n      }\n\n      !mask.node.id && $(mask.node, {\n        id: mask.id\n      });\n      $(this.node, {\n        mask: URL(mask.id)\n      });\n    }\n  });\n\n  (function (clipIt) {\n    eve.on(\"snap.util.attr.clip\", clipIt);\n    eve.on(\"snap.util.attr.clip-path\", clipIt);\n    eve.on(\"snap.util.attr.clipPath\", clipIt);\n  })(function (value) {\n    if (value instanceof Element || value instanceof Fragment) {\n      eve.stop();\n      var clip,\n          node = value.node;\n\n      while (node) {\n        if (node.nodeName === \"clipPath\") {\n          clip = new Element(node);\n          break;\n        }\n\n        if (node.nodeName === \"svg\") {\n          clip = undefined;\n          break;\n        }\n\n        node = node.parentNode;\n      }\n\n      if (!clip) {\n        clip = make(\"clipPath\", getSomeDefs(this));\n        clip.node.appendChild(value.node);\n        !clip.node.id && $(clip.node, {\n          id: clip.id\n        });\n      }\n\n      $(this.node, {\n        \"clip-path\": URL(clip.node.id || clip.id)\n      });\n    }\n  });\n\n  function fillStroke(name) {\n    return function (value) {\n      eve.stop();\n\n      if (value instanceof Fragment && value.node.childNodes.length == 1 && (value.node.firstChild.tagName == \"radialGradient\" || value.node.firstChild.tagName == \"linearGradient\" || value.node.firstChild.tagName == \"pattern\")) {\n        value = value.node.firstChild;\n        getSomeDefs(this).appendChild(value);\n        value = wrap(value);\n      }\n\n      if (value instanceof Element) {\n        if (value.type == \"radialGradient\" || value.type == \"linearGradient\" || value.type == \"pattern\") {\n          if (!value.node.id) {\n            $(value.node, {\n              id: value.id\n            });\n          }\n\n          var fill = URL(value.node.id);\n        } else {\n          fill = value.attr(name);\n        }\n      } else {\n        fill = Snap.color(value);\n\n        if (fill.error) {\n          var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n\n          if (grad) {\n            if (!grad.node.id) {\n              $(grad.node, {\n                id: grad.id\n              });\n            }\n\n            fill = URL(grad.node.id);\n          } else {\n            fill = value;\n          }\n        } else {\n          fill = Str(fill);\n        }\n      }\n\n      var attrs = {};\n      attrs[name] = fill;\n      $(this.node, attrs);\n      this.node.style[name] = E;\n    };\n  }\n\n  eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n  eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n  var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n  eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n    string = Str(string);\n    var tokens = string.match(gradrg);\n\n    if (!tokens) {\n      return null;\n    }\n\n    var type = tokens[1],\n        params = tokens[2],\n        stops = tokens[3];\n    params = params.split(/\\s*,\\s*/).map(function (el) {\n      return +el == el ? +el : el;\n    });\n\n    if (params.length == 1 && params[0] == 0) {\n      params = [];\n    }\n\n    stops = stops.split(\"-\");\n    stops = stops.map(function (el) {\n      el = el.split(\":\");\n      var out = {\n        color: el[0]\n      };\n\n      if (el[1]) {\n        out.offset = parseFloat(el[1]);\n      }\n\n      return out;\n    });\n    var len = stops.length,\n        start = 0,\n        j = 0;\n\n    function seed(i, end) {\n      var step = (end - start) / (i - j);\n\n      for (var k = j; k < i; k++) {\n        stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n      }\n\n      j = i;\n      start = end;\n    }\n\n    len--;\n\n    for (var i = 0; i < len; i++) {\n      if (\"offset\" in stops[i]) {\n        seed(i, stops[i].offset);\n      }\n    }\n\n    stops[len].offset = stops[len].offset || 100;\n    seed(len, stops[len].offset);\n    return {\n      type: type,\n      params: params,\n      stops: stops\n    };\n  });\n  eve.on(\"snap.util.attr.d\", function (value) {\n    eve.stop();\n\n    if (is(value, \"array\") && is(value[0], \"array\")) {\n      value = Snap.path.toString.call(value);\n    }\n\n    value = Str(value);\n\n    if (value.match(/[ruo]/i)) {\n      value = Snap.path.toAbsolute(value);\n    }\n\n    $(this.node, {\n      d: value\n    });\n  })(-1);\n  eve.on(\"snap.util.attr.#text\", function (value) {\n    eve.stop();\n    value = Str(value);\n    var txt = glob.doc.createTextNode(value);\n\n    while (this.node.firstChild) {\n      this.node.removeChild(this.node.firstChild);\n    }\n\n    this.node.appendChild(txt);\n  })(-1);\n  eve.on(\"snap.util.attr.path\", function (value) {\n    eve.stop();\n    this.attr({\n      d: value\n    });\n  })(-1);\n  eve.on(\"snap.util.attr.class\", function (value) {\n    eve.stop();\n    this.node.className.baseVal = value;\n  })(-1);\n  eve.on(\"snap.util.attr.viewBox\", function (value) {\n    var vb;\n\n    if (is(value, \"object\") && \"x\" in value) {\n      vb = [value.x, value.y, value.width, value.height].join(\" \");\n    } else if (is(value, \"array\")) {\n      vb = value.join(\" \");\n    } else {\n      vb = value;\n    }\n\n    $(this.node, {\n      viewBox: vb\n    });\n    eve.stop();\n  })(-1);\n  eve.on(\"snap.util.attr.transform\", function (value) {\n    this.transform(value);\n    eve.stop();\n  })(-1);\n  eve.on(\"snap.util.attr.r\", function (value) {\n    if (this.type == \"rect\") {\n      eve.stop();\n      $(this.node, {\n        rx: value,\n        ry: value\n      });\n    }\n  })(-1);\n  eve.on(\"snap.util.attr.textpath\", function (value) {\n    eve.stop();\n\n    if (this.type == \"text\") {\n      var id, tp, node;\n\n      if (!value && this.textPath) {\n        tp = this.textPath;\n\n        while (tp.node.firstChild) {\n          this.node.appendChild(tp.node.firstChild);\n        }\n\n        tp.remove();\n        delete this.textPath;\n        return;\n      }\n\n      if (is(value, \"string\")) {\n        var defs = getSomeDefs(this),\n            path = wrap(defs.parentNode).path(value);\n        defs.appendChild(path.node);\n        id = path.id;\n        path.attr({\n          id: id\n        });\n      } else {\n        value = wrap(value);\n\n        if (value instanceof Element) {\n          id = value.attr(\"id\");\n\n          if (!id) {\n            id = value.id;\n            value.attr({\n              id: id\n            });\n          }\n        }\n      }\n\n      if (id) {\n        tp = this.textPath;\n        node = this.node;\n\n        if (tp) {\n          tp.attr({\n            \"xlink:href\": \"#\" + id\n          });\n        } else {\n          tp = $(\"textPath\", {\n            \"xlink:href\": \"#\" + id\n          });\n\n          while (node.firstChild) {\n            tp.appendChild(node.firstChild);\n          }\n\n          node.appendChild(tp);\n          this.textPath = wrap(tp);\n        }\n      }\n    }\n  })(-1);\n  eve.on(\"snap.util.attr.text\", function (value) {\n    if (this.type == \"text\") {\n      var i = 0,\n          node = this.node,\n          tuner = function tuner(chunk) {\n        var out = $(\"tspan\");\n\n        if (is(chunk, \"array\")) {\n          for (var i = 0; i < chunk.length; i++) {\n            out.appendChild(tuner(chunk[i]));\n          }\n        } else {\n          out.appendChild(glob.doc.createTextNode(chunk));\n        }\n\n        out.normalize && out.normalize();\n        return out;\n      };\n\n      while (node.firstChild) {\n        node.removeChild(node.firstChild);\n      }\n\n      var tuned = tuner(value);\n\n      while (tuned.firstChild) {\n        node.appendChild(tuned.firstChild);\n      }\n    }\n\n    eve.stop();\n  })(-1);\n\n  function setFontSize(value) {\n    eve.stop();\n\n    if (value == +value) {\n      value += \"px\";\n    }\n\n    this.node.style.fontSize = value;\n  }\n\n  eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n  eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n  eve.on(\"snap.util.getattr.transform\", function () {\n    eve.stop();\n    return this.transform();\n  })(-1);\n  eve.on(\"snap.util.getattr.textpath\", function () {\n    eve.stop();\n    return this.textPath;\n  })(-1); // Markers\n\n  (function () {\n    function getter(end) {\n      return function () {\n        eve.stop();\n        var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n\n        if (style == \"none\") {\n          return style;\n        } else {\n          return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n        }\n      };\n    }\n\n    function setter(end) {\n      return function (value) {\n        eve.stop();\n        var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n\n        if (value == \"\" || !value) {\n          this.node.style[name] = \"none\";\n          return;\n        }\n\n        if (value.type == \"marker\") {\n          var id = value.node.id;\n\n          if (!id) {\n            $(value.node, {\n              id: value.id\n            });\n          }\n\n          this.node.style[name] = URL(id);\n          return;\n        }\n      };\n    }\n\n    eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n    eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n    eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n    eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n    eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n    eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n    eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n    eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n    eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n    eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n    eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n    eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n  })();\n\n  eve.on(\"snap.util.getattr.r\", function () {\n    if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n      eve.stop();\n      return $(this.node, \"rx\");\n    }\n  })(-1);\n\n  function textExtract(node) {\n    var out = [];\n    var children = node.childNodes;\n\n    for (var i = 0, ii = children.length; i < ii; i++) {\n      var chi = children[i];\n\n      if (chi.nodeType == 3) {\n        out.push(chi.nodeValue);\n      }\n\n      if (chi.tagName == \"tspan\") {\n        if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n          out.push(chi.firstChild.nodeValue);\n        } else {\n          out.push(textExtract(chi));\n        }\n      }\n    }\n\n    return out;\n  }\n\n  eve.on(\"snap.util.getattr.text\", function () {\n    if (this.type == \"text\" || this.type == \"tspan\") {\n      eve.stop();\n      var out = textExtract(this.node);\n      return out.length == 1 ? out[0] : out;\n    }\n  })(-1);\n  eve.on(\"snap.util.getattr.#text\", function () {\n    return this.node.textContent;\n  })(-1);\n  eve.on(\"snap.util.getattr.fill\", function (internal) {\n    if (internal) {\n      return;\n    }\n\n    eve.stop();\n    var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n    return Snap(Snap.deurl(value)) || value;\n  })(-1);\n  eve.on(\"snap.util.getattr.stroke\", function (internal) {\n    if (internal) {\n      return;\n    }\n\n    eve.stop();\n    var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n    return Snap(Snap.deurl(value)) || value;\n  })(-1);\n  eve.on(\"snap.util.getattr.viewBox\", function () {\n    eve.stop();\n    var vb = $(this.node, \"viewBox\");\n\n    if (vb) {\n      vb = vb.split(separator);\n      return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n    } else {\n      return;\n    }\n  })(-1);\n  eve.on(\"snap.util.getattr.points\", function () {\n    var p = $(this.node, \"points\");\n    eve.stop();\n\n    if (p) {\n      return p.split(separator);\n    } else {\n      return;\n    }\n  })(-1);\n  eve.on(\"snap.util.getattr.path\", function () {\n    var p = $(this.node, \"d\");\n    eve.stop();\n    return p;\n  })(-1);\n  eve.on(\"snap.util.getattr.class\", function () {\n    return this.node.className.baseVal;\n  })(-1);\n\n  function getFontSize() {\n    eve.stop();\n    return this.node.style.fontSize;\n  }\n\n  eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n  eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n}); // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var rgNotSpace = /\\S+/g,\n      rgBadSpace = /[\\t\\r\\n\\f]/g,\n      rgTrim = /(^\\s+|\\s+$)/g,\n      Str = String,\n      elproto = Element.prototype;\n  /*\\\n   * Element.addClass\n   [ method ]\n   **\n   * Adds given class name or list of class names to the element.\n   - value (string) class name or space separated list of class names\n   **\n   = (Element) original element.\n  \\*/\n\n  elproto.addClass = function (value) {\n    var classes = Str(value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n\n    if (classes.length) {\n      j = 0;\n\n      while (clazz = classes[j++]) {\n        pos = curClasses.indexOf(clazz);\n\n        if (!~pos) {\n          curClasses.push(clazz);\n        }\n      }\n\n      finalValue = curClasses.join(\" \");\n\n      if (className != finalValue) {\n        elem.className.baseVal = finalValue;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.removeClass\n   [ method ]\n   **\n   * Removes given class name or list of class names from the element.\n   - value (string) class name or space separated list of class names\n   **\n   = (Element) original element.\n  \\*/\n\n\n  elproto.removeClass = function (value) {\n    var classes = Str(value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n\n    if (curClasses.length) {\n      j = 0;\n\n      while (clazz = classes[j++]) {\n        pos = curClasses.indexOf(clazz);\n\n        if (~pos) {\n          curClasses.splice(pos, 1);\n        }\n      }\n\n      finalValue = curClasses.join(\" \");\n\n      if (className != finalValue) {\n        elem.className.baseVal = finalValue;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.hasClass\n   [ method ]\n   **\n   * Checks if the element has a given class name in the list of class names applied to it.\n   - value (string) class name\n   **\n   = (boolean) `true` if the element has given class\n  \\*/\n\n\n  elproto.hasClass = function (value) {\n    var elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [];\n    return !!~curClasses.indexOf(value);\n  };\n  /*\\\n   * Element.toggleClass\n   [ method ]\n   **\n   * Add or remove one or more classes from the element, depending on either\n   * the class’s presence or the value of the `flag` argument.\n   - value (string) class name or space separated list of class names\n   - flag (boolean) value to determine whether the class should be added or removed\n   **\n   = (Element) original element.\n  \\*/\n\n\n  elproto.toggleClass = function (value, flag) {\n    if (flag != null) {\n      if (flag) {\n        return this.addClass(value);\n      } else {\n        return this.removeClass(value);\n      }\n    }\n\n    var classes = (value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n    j = 0;\n\n    while (clazz = classes[j++]) {\n      pos = curClasses.indexOf(clazz);\n\n      if (~pos) {\n        curClasses.splice(pos, 1);\n      } else {\n        curClasses.push(clazz);\n      }\n    }\n\n    finalValue = curClasses.join(\" \");\n\n    if (className != finalValue) {\n      elem.className.baseVal = finalValue;\n    }\n\n    return this;\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var operators = {\n    \"+\": function _(x, y) {\n      return x + y;\n    },\n    \"-\": function _(x, y) {\n      return x - y;\n    },\n    \"/\": function _(x, y) {\n      return x / y;\n    },\n    \"*\": function _(x, y) {\n      return x * y;\n    }\n  },\n      Str = String,\n      reUnit = /[a-z]+$/i,\n      reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n\n  function getNumber(val) {\n    return val;\n  }\n\n  function getUnit(unit) {\n    return function (val) {\n      return +val.toFixed(3) + unit;\n    };\n  }\n\n  eve.on(\"snap.util.attr\", function (val) {\n    var plus = Str(val).match(reAddon);\n\n    if (plus) {\n      var evnt = eve.nt(),\n          name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n          a = this.attr(name),\n          atr = {};\n      eve.stop();\n      var unit = plus[3] || \"\",\n          aUnit = a.match(reUnit),\n          op = operators[plus[1]];\n\n      if (aUnit && aUnit == unit) {\n        val = op(parseFloat(a), +plus[2]);\n      } else {\n        a = this.asPX(name);\n        val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n      }\n\n      if (isNaN(a) || isNaN(val)) {\n        return;\n      }\n\n      atr[name] = val;\n      this.attr(atr);\n    }\n  })(-10);\n  eve.on(\"snap.util.equal\", function (name, b) {\n    var A,\n        B,\n        a = Str(this.attr(name) || \"\"),\n        el = this,\n        bplus = Str(b).match(reAddon);\n\n    if (bplus) {\n      eve.stop();\n      var unit = bplus[3] || \"\",\n          aUnit = a.match(reUnit),\n          op = operators[bplus[1]];\n\n      if (aUnit && aUnit == unit) {\n        return {\n          from: parseFloat(a),\n          to: op(parseFloat(a), +bplus[2]),\n          f: getUnit(aUnit)\n        };\n      } else {\n        a = this.asPX(name);\n        return {\n          from: a,\n          to: op(a, this.asPX(name, bplus[2] + unit)),\n          f: getNumber\n        };\n      }\n    }\n  })(-10);\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var proto = Paper.prototype,\n      is = Snap.is;\n  /*\\\n   * Paper.rect\n   [ method ]\n   *\n   * Draws a rectangle\n   **\n   - x (number) x coordinate of the top left corner\n   - y (number) y coordinate of the top left corner\n   - width (number) width\n   - height (number) height\n   - rx (number) #optional horizontal radius for rounded corners, default is 0\n   - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n   = (object) the `rect` element\n   **\n   > Usage\n   | // regular rectangle\n   | var c = paper.rect(10, 10, 50, 50);\n   | // rectangle with rounded corners\n   | var c = paper.rect(40, 40, 50, 50, 10);\n  \\*/\n\n  proto.rect = function (x, y, w, h, rx, ry) {\n    var attr;\n\n    if (ry == null) {\n      ry = rx;\n    }\n\n    if (is(x, \"object\") && x == \"[object Object]\") {\n      attr = x;\n    } else if (x != null) {\n      attr = {\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      };\n\n      if (rx != null) {\n        attr.rx = rx;\n        attr.ry = ry;\n      }\n    }\n\n    return this.el(\"rect\", attr);\n  };\n  /*\\\n   * Paper.circle\n   [ method ]\n   **\n   * Draws a circle\n   **\n   - x (number) x coordinate of the centre\n   - y (number) y coordinate of the centre\n   - r (number) radius\n   = (object) the `circle` element\n   **\n   > Usage\n   | var c = paper.circle(50, 50, 40);\n  \\*/\n\n\n  proto.circle = function (cx, cy, r) {\n    var attr;\n\n    if (is(cx, \"object\") && cx == \"[object Object]\") {\n      attr = cx;\n    } else if (cx != null) {\n      attr = {\n        cx: cx,\n        cy: cy,\n        r: r\n      };\n    }\n\n    return this.el(\"circle\", attr);\n  };\n\n  var preload = function () {\n    function onerror() {\n      this.parentNode.removeChild(this);\n    }\n\n    return function (src, f) {\n      var img = glob.doc.createElement(\"img\"),\n          body = glob.doc.body;\n      img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\n      img.onload = function () {\n        f.call(img);\n        img.onload = img.onerror = null;\n        body.removeChild(img);\n      };\n\n      img.onerror = onerror;\n      body.appendChild(img);\n      img.src = src;\n    };\n  }();\n  /*\\\n   * Paper.image\n   [ method ]\n   **\n   * Places an image on the surface\n   **\n   - src (string) URI of the source image\n   - x (number) x offset position\n   - y (number) y offset position\n   - width (number) width of the image\n   - height (number) height of the image\n   = (object) the `image` element\n   * or\n   = (object) Snap element object with type `image`\n   **\n   > Usage\n   | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n  \\*/\n\n\n  proto.image = function (src, x, y, width, height) {\n    var el = this.el(\"image\");\n\n    if (is(src, \"object\") && \"src\" in src) {\n      el.attr(src);\n    } else if (src != null) {\n      var set = {\n        \"xlink:href\": src,\n        preserveAspectRatio: \"none\"\n      };\n\n      if (x != null && y != null) {\n        set.x = x;\n        set.y = y;\n      }\n\n      if (width != null && height != null) {\n        set.width = width;\n        set.height = height;\n      } else {\n        preload(src, function () {\n          Snap._.$(el.node, {\n            width: this.offsetWidth,\n            height: this.offsetHeight\n          });\n        });\n      }\n\n      Snap._.$(el.node, set);\n    }\n\n    return el;\n  };\n  /*\\\n   * Paper.ellipse\n   [ method ]\n   **\n   * Draws an ellipse\n   **\n   - x (number) x coordinate of the centre\n   - y (number) y coordinate of the centre\n   - rx (number) horizontal radius\n   - ry (number) vertical radius\n   = (object) the `ellipse` element\n   **\n   > Usage\n   | var c = paper.ellipse(50, 50, 40, 20);\n  \\*/\n\n\n  proto.ellipse = function (cx, cy, rx, ry) {\n    var attr;\n\n    if (is(cx, \"object\") && cx == \"[object Object]\") {\n      attr = cx;\n    } else if (cx != null) {\n      attr = {\n        cx: cx,\n        cy: cy,\n        rx: rx,\n        ry: ry\n      };\n    }\n\n    return this.el(\"ellipse\", attr);\n  }; // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n\n  /*\\\n   * Paper.path\n   [ method ]\n   **\n   * Creates a `<path>` element using the given string as the path's definition\n   - pathString (string) #optional path string in SVG format\n   * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n   | \"M10,20L30,40\"\n   * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n   *\n   # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n   # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n   # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n   # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n   # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n   # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n   # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n   # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n   # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n   # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n   # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n   # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n   # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n   * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n   * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n   > Usage\n   | var c = paper.path(\"M10 10L90 90\");\n   | // draw a diagonal line:\n   | // move to 10,10, line to 90,90\n  \\*/\n\n\n  proto.path = function (d) {\n    var attr;\n\n    if (is(d, \"object\") && !is(d, \"array\")) {\n      attr = d;\n    } else if (d) {\n      attr = {\n        d: d\n      };\n    }\n\n    return this.el(\"path\", attr);\n  };\n  /*\\\n   * Paper.g\n   [ method ]\n   **\n   * Creates a group element\n   **\n   - varargs (…) #optional elements to nest within the group\n   = (object) the `g` element\n   **\n   > Usage\n   | var c1 = paper.circle(),\n   |     c2 = paper.rect(),\n   |     g = paper.g(c2, c1); // note that the order of elements is different\n   * or\n   | var c1 = paper.circle(),\n   |     c2 = paper.rect(),\n   |     g = paper.g();\n   | g.add(c2, c1);\n  \\*/\n\n  /*\\\n   * Paper.group\n   [ method ]\n   **\n   * See @Paper.g\n  \\*/\n\n\n  proto.group = proto.g = function (first) {\n    var attr,\n        el = this.el(\"g\");\n\n    if (arguments.length == 1 && first && !first.type) {\n      el.attr(first);\n    } else if (arguments.length) {\n      el.add(Array.prototype.slice.call(arguments, 0));\n    }\n\n    return el;\n  };\n  /*\\\n   * Paper.svg\n   [ method ]\n   **\n   * Creates a nested SVG element.\n   - x (number) @optional X of the element\n   - y (number) @optional Y of the element\n   - width (number) @optional width of the element\n   - height (number) @optional height of the element\n   - vbx (number) @optional viewbox X\n   - vby (number) @optional viewbox Y\n   - vbw (number) @optional viewbox width\n   - vbh (number) @optional viewbox height\n   **\n   = (object) the `svg` element\n   **\n  \\*/\n\n\n  proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n    var attrs = {};\n\n    if (is(x, \"object\") && y == null) {\n      attrs = x;\n    } else {\n      if (x != null) {\n        attrs.x = x;\n      }\n\n      if (y != null) {\n        attrs.y = y;\n      }\n\n      if (width != null) {\n        attrs.width = width;\n      }\n\n      if (height != null) {\n        attrs.height = height;\n      }\n\n      if (vbx != null && vby != null && vbw != null && vbh != null) {\n        attrs.viewBox = [vbx, vby, vbw, vbh];\n      }\n    }\n\n    return this.el(\"svg\", attrs);\n  };\n  /*\\\n   * Paper.mask\n   [ method ]\n   **\n   * Equivalent in behaviour to @Paper.g, except it’s a mask.\n   **\n   = (object) the `mask` element\n   **\n  \\*/\n\n\n  proto.mask = function (first) {\n    var attr,\n        el = this.el(\"mask\");\n\n    if (arguments.length == 1 && first && !first.type) {\n      el.attr(first);\n    } else if (arguments.length) {\n      el.add(Array.prototype.slice.call(arguments, 0));\n    }\n\n    return el;\n  };\n  /*\\\n   * Paper.ptrn\n   [ method ]\n   **\n   * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n   - x (number) @optional X of the element\n   - y (number) @optional Y of the element\n   - width (number) @optional width of the element\n   - height (number) @optional height of the element\n   - vbx (number) @optional viewbox X\n   - vby (number) @optional viewbox Y\n   - vbw (number) @optional viewbox width\n   - vbh (number) @optional viewbox height\n   **\n   = (object) the `pattern` element\n   **\n  \\*/\n\n\n  proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n    if (is(x, \"object\")) {\n      var attr = x;\n    } else {\n      attr = {\n        patternUnits: \"userSpaceOnUse\"\n      };\n\n      if (x) {\n        attr.x = x;\n      }\n\n      if (y) {\n        attr.y = y;\n      }\n\n      if (width != null) {\n        attr.width = width;\n      }\n\n      if (height != null) {\n        attr.height = height;\n      }\n\n      if (vx != null && vy != null && vw != null && vh != null) {\n        attr.viewBox = [vx, vy, vw, vh];\n      } else {\n        attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n      }\n    }\n\n    return this.el(\"pattern\", attr);\n  };\n  /*\\\n   * Paper.use\n   [ method ]\n   **\n   * Creates a <use> element.\n   - id (string) @optional id of element to link\n   * or\n   - id (Element) @optional element to link\n   **\n   = (object) the `use` element\n   **\n  \\*/\n\n\n  proto.use = function (id) {\n    if (id != null) {\n      if (id instanceof Element) {\n        if (!id.attr(\"id\")) {\n          id.attr({\n            id: Snap._.id(id)\n          });\n        }\n\n        id = id.attr(\"id\");\n      }\n\n      if (String(id).charAt() == \"#\") {\n        id = id.substring(1);\n      }\n\n      return this.el(\"use\", {\n        \"xlink:href\": \"#\" + id\n      });\n    } else {\n      return Element.prototype.use.call(this);\n    }\n  };\n  /*\\\n   * Paper.symbol\n   [ method ]\n   **\n   * Creates a <symbol> element.\n   - vbx (number) @optional viewbox X\n   - vby (number) @optional viewbox Y\n   - vbw (number) @optional viewbox width\n   - vbh (number) @optional viewbox height\n   = (object) the `symbol` element\n   **\n  \\*/\n\n\n  proto.symbol = function (vx, vy, vw, vh) {\n    var attr = {};\n\n    if (vx != null && vy != null && vw != null && vh != null) {\n      attr.viewBox = [vx, vy, vw, vh];\n    }\n\n    return this.el(\"symbol\", attr);\n  };\n  /*\\\n   * Paper.text\n   [ method ]\n   **\n   * Draws a text string\n   **\n   - x (number) x coordinate position\n   - y (number) y coordinate position\n   - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n   = (object) the `text` element\n   **\n   > Usage\n   | var t1 = paper.text(50, 50, \"Snap\");\n   | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n   | // Text path usage\n   | t1.attr({textpath: \"M10,10L100,100\"});\n   | // or\n   | var pth = paper.path(\"M10,10L100,100\");\n   | t1.attr({textpath: pth});\n  \\*/\n\n\n  proto.text = function (x, y, text) {\n    var attr = {};\n\n    if (is(x, \"object\")) {\n      attr = x;\n    } else if (x != null) {\n      attr = {\n        x: x,\n        y: y,\n        text: text || \"\"\n      };\n    }\n\n    return this.el(\"text\", attr);\n  };\n  /*\\\n   * Paper.line\n   [ method ]\n   **\n   * Draws a line\n   **\n   - x1 (number) x coordinate position of the start\n   - y1 (number) y coordinate position of the start\n   - x2 (number) x coordinate position of the end\n   - y2 (number) y coordinate position of the end\n   = (object) the `line` element\n   **\n   > Usage\n   | var t1 = paper.line(50, 50, 100, 100);\n  \\*/\n\n\n  proto.line = function (x1, y1, x2, y2) {\n    var attr = {};\n\n    if (is(x1, \"object\")) {\n      attr = x1;\n    } else if (x1 != null) {\n      attr = {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    }\n\n    return this.el(\"line\", attr);\n  };\n  /*\\\n   * Paper.polyline\n   [ method ]\n   **\n   * Draws a polyline\n   **\n   - points (array) array of points\n   * or\n   - varargs (…) points\n   = (object) the `polyline` element\n   **\n   > Usage\n   | var p1 = paper.polyline([10, 10, 100, 100]);\n   | var p2 = paper.polyline(10, 10, 100, 100);\n  \\*/\n\n\n  proto.polyline = function (points) {\n    if (arguments.length > 1) {\n      points = Array.prototype.slice.call(arguments, 0);\n    }\n\n    var attr = {};\n\n    if (is(points, \"object\") && !is(points, \"array\")) {\n      attr = points;\n    } else if (points != null) {\n      attr = {\n        points: points\n      };\n    }\n\n    return this.el(\"polyline\", attr);\n  };\n  /*\\\n   * Paper.polygon\n   [ method ]\n   **\n   * Draws a polygon. See @Paper.polyline\n  \\*/\n\n\n  proto.polygon = function (points) {\n    if (arguments.length > 1) {\n      points = Array.prototype.slice.call(arguments, 0);\n    }\n\n    var attr = {};\n\n    if (is(points, \"object\") && !is(points, \"array\")) {\n      attr = points;\n    } else if (points != null) {\n      attr = {\n        points: points\n      };\n    }\n\n    return this.el(\"polygon\", attr);\n  }; // gradients\n\n\n  (function () {\n    var $ = Snap._.$; // gradients' helpers\n\n    /*\\\n     * Element.stops\n     [ method ]\n     **\n     * Only for gradients!\n     * Returns array of gradient stops elements.\n     = (array) the stops array.\n    \\*/\n\n    function Gstops() {\n      return this.selectAll(\"stop\");\n    }\n    /*\\\n     * Element.addStop\n     [ method ]\n     **\n     * Only for gradients!\n     * Adds another stop to the gradient.\n     - color (string) stops color\n     - offset (number) stops offset 0..100\n     = (object) gradient element\n    \\*/\n\n\n    function GaddStop(color, offset) {\n      var stop = $(\"stop\"),\n          attr = {\n        offset: +offset + \"%\"\n      };\n      color = Snap.color(color);\n      attr[\"stop-color\"] = color.hex;\n\n      if (color.opacity < 1) {\n        attr[\"stop-opacity\"] = color.opacity;\n      }\n\n      $(stop, attr);\n      var stops = this.stops(),\n          inserted;\n\n      for (var i = 0; i < stops.length; i++) {\n        var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n\n        if (stopOffset > offset) {\n          this.node.insertBefore(stop, stops[i].node);\n          inserted = true;\n          break;\n        }\n      }\n\n      if (!inserted) {\n        this.node.appendChild(stop);\n      }\n\n      return this;\n    }\n\n    function GgetBBox() {\n      if (this.type == \"linearGradient\") {\n        var x1 = $(this.node, \"x1\") || 0,\n            x2 = $(this.node, \"x2\") || 1,\n            y1 = $(this.node, \"y1\") || 0,\n            y2 = $(this.node, \"y2\") || 0;\n        return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n      } else {\n        var cx = this.node.cx || .5,\n            cy = this.node.cy || .5,\n            r = this.node.r || 0;\n        return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n      }\n    }\n    /*\\\n     * Element.setStops\n     [ method ]\n     **\n     * Only for gradients!\n     * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n     - str (string) gradient descriptor part after `()`.\n     = (object) gradient element\n     | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n     | g.setStops(\"#fff-#000-#f00-#fc0\");\n    \\*/\n\n\n    function GsetStops(str) {\n      var grad = str,\n          stops = this.stops();\n\n      if (typeof str == \"string\") {\n        grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n      }\n\n      if (!Snap.is(grad, \"array\")) {\n        return;\n      }\n\n      for (var i = 0; i < stops.length; i++) {\n        if (grad[i]) {\n          var color = Snap.color(grad[i].color),\n              attr = {\n            \"offset\": grad[i].offset + \"%\"\n          };\n          attr[\"stop-color\"] = color.hex;\n\n          if (color.opacity < 1) {\n            attr[\"stop-opacity\"] = color.opacity;\n          }\n\n          stops[i].attr(attr);\n        } else {\n          stops[i].remove();\n        }\n      }\n\n      for (i = stops.length; i < grad.length; i++) {\n        this.addStop(grad[i].color, grad[i].offset);\n      }\n\n      return this;\n    }\n\n    function gradient(defs, str) {\n      var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n          el;\n\n      if (!grad) {\n        return null;\n      }\n\n      grad.params.unshift(defs);\n\n      if (grad.type.toLowerCase() == \"l\") {\n        el = gradientLinear.apply(0, grad.params);\n      } else {\n        el = gradientRadial.apply(0, grad.params);\n      }\n\n      if (grad.type != grad.type.toLowerCase()) {\n        $(el.node, {\n          gradientUnits: \"userSpaceOnUse\"\n        });\n      }\n\n      var stops = grad.stops,\n          len = stops.length;\n\n      for (var i = 0; i < len; i++) {\n        var stop = stops[i];\n        el.addStop(stop.color, stop.offset);\n      }\n\n      return el;\n    }\n\n    function gradientLinear(defs, x1, y1, x2, y2) {\n      var el = Snap._.make(\"linearGradient\", defs);\n\n      el.stops = Gstops;\n      el.addStop = GaddStop;\n      el.getBBox = GgetBBox;\n      el.setStops = GsetStops;\n\n      if (x1 != null) {\n        $(el.node, {\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2\n        });\n      }\n\n      return el;\n    }\n\n    function gradientRadial(defs, cx, cy, r, fx, fy) {\n      var el = Snap._.make(\"radialGradient\", defs);\n\n      el.stops = Gstops;\n      el.addStop = GaddStop;\n      el.getBBox = GgetBBox;\n\n      if (cx != null) {\n        $(el.node, {\n          cx: cx,\n          cy: cy,\n          r: r\n        });\n      }\n\n      if (fx != null && fy != null) {\n        $(el.node, {\n          fx: fx,\n          fy: fy\n        });\n      }\n\n      return el;\n    }\n    /*\\\n     * Paper.gradient\n     [ method ]\n     **\n     * Creates a gradient element\n     **\n     - gradient (string) gradient descriptor\n     > Gradient Descriptor\n     * The gradient descriptor is an expression formatted as\n     * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n     * either linear or radial.  The uppercase `L` or `R` letters\n     * indicate absolute coordinates offset from the SVG surface.\n     * Lowercase `l` or `r` letters indicate coordinates\n     * calculated relative to the element to which the gradient is\n     * applied.  Coordinates specify a linear gradient vector as\n     * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n     * `r` and optional `fx`, `fy` specifying a focal point away\n     * from the center of the circle. Specify `<colors>` as a list\n     * of dash-separated CSS color values.  Each color may be\n     * followed by a custom offset value, separated with a colon\n     * character.\n     > Examples\n     * Linear gradient, relative from top-left corner to bottom-right\n     * corner, from black through red to white:\n     | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n     * Linear gradient, absolute from (0, 0) to (100, 100), from black\n     * through red at 25% to white:\n     | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n     * Radial gradient, relative from the center of the element with radius\n     * half the width, from black to white:\n     | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n     * To apply the gradient:\n     | paper.circle(50, 50, 40).attr({\n     |     fill: g\n     | });\n     = (object) the `gradient` element\n    \\*/\n\n\n    proto.gradient = function (str) {\n      return gradient(this.defs, str);\n    };\n\n    proto.gradientLinear = function (x1, y1, x2, y2) {\n      return gradientLinear(this.defs, x1, y1, x2, y2);\n    };\n\n    proto.gradientRadial = function (cx, cy, r, fx, fy) {\n      return gradientRadial(this.defs, cx, cy, r, fx, fy);\n    };\n    /*\\\n     * Paper.toString\n     [ method ]\n     **\n     * Returns SVG code for the @Paper\n     = (string) SVG code for the @Paper\n    \\*/\n\n\n    proto.toString = function () {\n      var doc = this.node.ownerDocument,\n          f = doc.createDocumentFragment(),\n          d = doc.createElement(\"div\"),\n          svg = this.node.cloneNode(true),\n          res;\n      f.appendChild(d);\n      d.appendChild(svg);\n\n      Snap._.$(svg, {\n        xmlns: \"http://www.w3.org/2000/svg\"\n      });\n\n      res = d.innerHTML;\n      f.removeChild(f.firstChild);\n      return res;\n    };\n    /*\\\n     * Paper.toDataURL\n     [ method ]\n     **\n     * Returns SVG code for the @Paper as Data URI string.\n     = (string) Data URI string\n    \\*/\n\n\n    proto.toDataURL = function () {\n      if (window && window.btoa) {\n        return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n      }\n    };\n    /*\\\n     * Paper.clear\n     [ method ]\n     **\n     * Removes all child nodes of the paper, except <defs>.\n    \\*/\n\n\n    proto.clear = function () {\n      var node = this.node.firstChild,\n          next;\n\n      while (node) {\n        next = node.nextSibling;\n\n        if (node.tagName != \"defs\") {\n          node.parentNode.removeChild(node);\n        } else {\n          proto.clear.call({\n            node: node\n          });\n        }\n\n        node = next;\n      }\n    };\n  })();\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var elproto = Element.prototype,\n      is = Snap.is,\n      clone = Snap._.clone,\n      has = \"hasOwnProperty\",\n      p2s = /,?([a-z]),?/gi,\n      toFloat = parseFloat,\n      math = Math,\n      PI = math.PI,\n      mmin = math.min,\n      mmax = math.max,\n      pow = math.pow,\n      abs = math.abs;\n\n  function paths(ps) {\n    var p = paths.ps = paths.ps || {};\n\n    if (p[ps]) {\n      p[ps].sleep = 100;\n    } else {\n      p[ps] = {\n        sleep: 100\n      };\n    }\n\n    setTimeout(function () {\n      for (var key in p) {\n        if (p[has](key) && key != ps) {\n          p[key].sleep--;\n          !p[key].sleep && delete p[key];\n        }\n      }\n    });\n    return p[ps];\n  }\n\n  function box(x, y, width, height) {\n    if (x == null) {\n      x = y = width = height = 0;\n    }\n\n    if (y == null) {\n      y = x.y;\n      width = x.width;\n      height = x.height;\n      x = x.x;\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      w: width,\n      height: height,\n      h: height,\n      x2: x + width,\n      y2: y + height,\n      cx: x + width / 2,\n      cy: y + height / 2,\n      r1: math.min(width, height) / 2,\n      r2: math.max(width, height) / 2,\n      r0: math.sqrt(width * width + height * height) / 2,\n      path: rectPath(x, y, width, height),\n      vb: [x, y, width, height].join(\" \")\n    };\n  }\n\n  function toString() {\n    return this.join(\",\").replace(p2s, \"$1\");\n  }\n\n  function pathClone(pathArray) {\n    var res = clone(pathArray);\n    res.toString = toString;\n    return res;\n  }\n\n  function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n    if (length == null) {\n      return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n    } else {\n      return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n    }\n  }\n\n  function getLengthFactory(istotal, subpath) {\n    function O(val) {\n      return +(+val).toFixed(3);\n    }\n\n    return Snap._.cacher(function (path, length, onlystart) {\n      if (path instanceof Element) {\n        path = path.attr(\"d\");\n      }\n\n      path = path2curve(path);\n      var x,\n          y,\n          p,\n          l,\n          sp = \"\",\n          subpaths = {},\n          point,\n          len = 0;\n\n      for (var i = 0, ii = path.length; i < ii; i++) {\n        p = path[i];\n\n        if (p[0] == \"M\") {\n          x = +p[1];\n          y = +p[2];\n        } else {\n          l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\n          if (len + l > length) {\n            if (subpath && !subpaths.start) {\n              point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n              sp += [\"C\" + O(point.start.x), O(point.start.y), O(point.m.x), O(point.m.y), O(point.x), O(point.y)];\n\n              if (onlystart) {\n                return sp;\n              }\n\n              subpaths.start = sp;\n              sp = [\"M\" + O(point.x), O(point.y) + \"C\" + O(point.n.x), O(point.n.y), O(point.end.x), O(point.end.y), O(p[5]), O(p[6])].join();\n              len += l;\n              x = +p[5];\n              y = +p[6];\n              continue;\n            }\n\n            if (!istotal && !subpath) {\n              point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n              return point;\n            }\n          }\n\n          len += l;\n          x = +p[5];\n          y = +p[6];\n        }\n\n        sp += p.shift() + p;\n      }\n\n      subpaths.end = sp;\n      point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n      return point;\n    }, null, Snap._.clone);\n  }\n\n  var getTotalLength = getLengthFactory(1),\n      getPointAtLength = getLengthFactory(),\n      getSubpathsAtLength = getLengthFactory(0, 1);\n\n  function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n    var t1 = 1 - t,\n        t13 = pow(t1, 3),\n        t12 = pow(t1, 2),\n        t2 = t * t,\n        t3 = t2 * t,\n        x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n        y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n        mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n        my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n        nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n        ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n        ax = t1 * p1x + t * c1x,\n        ay = t1 * p1y + t * c1y,\n        cx = t1 * c2x + t * p2x,\n        cy = t1 * c2y + t * p2y,\n        alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI; // (mx > nx || my < ny) && (alpha += 180);\n\n    return {\n      x: x,\n      y: y,\n      m: {\n        x: mx,\n        y: my\n      },\n      n: {\n        x: nx,\n        y: ny\n      },\n      start: {\n        x: ax,\n        y: ay\n      },\n      end: {\n        x: cx,\n        y: cy\n      },\n      alpha: alpha\n    };\n  }\n\n  function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n    if (!Snap.is(p1x, \"array\")) {\n      p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n    }\n\n    var bbox = curveDim.apply(null, p1x);\n    return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n  }\n\n  function isPointInsideBBox(bbox, x, y) {\n    return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n  }\n\n  function isBBoxIntersect(bbox1, bbox2) {\n    bbox1 = box(bbox1);\n    bbox2 = box(bbox2);\n    return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n  }\n\n  function base3(t, p1, p2, p3, p4) {\n    var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n        t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n    return t * t2 - 3 * p1 + 3 * p2;\n  }\n\n  function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n    if (z == null) {\n      z = 1;\n    }\n\n    z = z > 1 ? 1 : z < 0 ? 0 : z;\n    var z2 = z / 2,\n        n = 12,\n        Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816],\n        Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\n        sum = 0;\n\n    for (var i = 0; i < n; i++) {\n      var ct = z2 * Tvalues[i] + z2,\n          xbase = base3(ct, x1, x2, x3, x4),\n          ybase = base3(ct, y1, y2, y3, y4),\n          comb = xbase * xbase + ybase * ybase;\n      sum += Cvalues[i] * math.sqrt(comb);\n    }\n\n    return z2 * sum;\n  }\n\n  function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n    if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n      return;\n    }\n\n    var t = 1,\n        step = t / 2,\n        t2 = t - step,\n        l,\n        e = .01;\n    l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\n    while (abs(l - ll) > e) {\n      step /= 2;\n      t2 += (l < ll ? 1 : -1) * step;\n      l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n    }\n\n    return t2;\n  }\n\n  function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n    if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {\n      return;\n    }\n\n    var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n        ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n        denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n    if (!denominator) {\n      return;\n    }\n\n    var px = nx / denominator,\n        py = ny / denominator,\n        px2 = +px.toFixed(2),\n        py2 = +py.toFixed(2);\n\n    if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {\n      return;\n    }\n\n    return {\n      x: px,\n      y: py\n    };\n  }\n\n  function inter(bez1, bez2) {\n    return interHelper(bez1, bez2);\n  }\n\n  function interCount(bez1, bez2) {\n    return interHelper(bez1, bez2, 1);\n  }\n\n  function interHelper(bez1, bez2, justCount) {\n    var bbox1 = bezierBBox(bez1),\n        bbox2 = bezierBBox(bez2);\n\n    if (!isBBoxIntersect(bbox1, bbox2)) {\n      return justCount ? 0 : [];\n    }\n\n    var l1 = bezlen.apply(0, bez1),\n        l2 = bezlen.apply(0, bez2),\n        n1 = ~~(l1 / 8),\n        n2 = ~~(l2 / 8),\n        dots1 = [],\n        dots2 = [],\n        xy = {},\n        res = justCount ? 0 : [];\n\n    for (var i = 0; i < n1 + 1; i++) {\n      var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n      dots1.push({\n        x: p.x,\n        y: p.y,\n        t: i / n1\n      });\n    }\n\n    for (i = 0; i < n2 + 1; i++) {\n      p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n      dots2.push({\n        x: p.x,\n        y: p.y,\n        t: i / n2\n      });\n    }\n\n    for (i = 0; i < n1; i++) {\n      for (var j = 0; j < n2; j++) {\n        var di = dots1[i],\n            di1 = dots1[i + 1],\n            dj = dots2[j],\n            dj1 = dots2[j + 1],\n            ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n            cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n            is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n        if (is) {\n          if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n            continue;\n          }\n\n          xy[is.x.toFixed(4)] = is.y.toFixed(4);\n          var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n              t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n          if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n            if (justCount) {\n              res++;\n            } else {\n              res.push({\n                x: is.x,\n                y: is.y,\n                t1: t1,\n                t2: t2\n              });\n            }\n          }\n        }\n      }\n    }\n\n    return res;\n  }\n\n  function pathIntersection(path1, path2) {\n    return interPathHelper(path1, path2);\n  }\n\n  function pathIntersectionNumber(path1, path2) {\n    return interPathHelper(path1, path2, 1);\n  }\n\n  function interPathHelper(path1, path2, justCount) {\n    path1 = path2curve(path1);\n    path2 = path2curve(path2);\n    var x1,\n        y1,\n        x2,\n        y2,\n        x1m,\n        y1m,\n        x2m,\n        y2m,\n        bez1,\n        bez2,\n        res = justCount ? 0 : [];\n\n    for (var i = 0, ii = path1.length; i < ii; i++) {\n      var pi = path1[i];\n\n      if (pi[0] == \"M\") {\n        x1 = x1m = pi[1];\n        y1 = y1m = pi[2];\n      } else {\n        if (pi[0] == \"C\") {\n          bez1 = [x1, y1].concat(pi.slice(1));\n          x1 = bez1[6];\n          y1 = bez1[7];\n        } else {\n          bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n          x1 = x1m;\n          y1 = y1m;\n        }\n\n        for (var j = 0, jj = path2.length; j < jj; j++) {\n          var pj = path2[j];\n\n          if (pj[0] == \"M\") {\n            x2 = x2m = pj[1];\n            y2 = y2m = pj[2];\n          } else {\n            if (pj[0] == \"C\") {\n              bez2 = [x2, y2].concat(pj.slice(1));\n              x2 = bez2[6];\n              y2 = bez2[7];\n            } else {\n              bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n              x2 = x2m;\n              y2 = y2m;\n            }\n\n            var intr = interHelper(bez1, bez2, justCount);\n\n            if (justCount) {\n              res += intr;\n            } else {\n              for (var k = 0, kk = intr.length; k < kk; k++) {\n                intr[k].segment1 = i;\n                intr[k].segment2 = j;\n                intr[k].bez1 = bez1;\n                intr[k].bez2 = bez2;\n              }\n\n              res = res.concat(intr);\n            }\n          }\n        }\n      }\n    }\n\n    return res;\n  }\n\n  function isPointInsidePath(path, x, y) {\n    var bbox = pathBBox(path);\n    return isPointInsideBBox(bbox, x, y) && interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n  }\n\n  function pathBBox(path) {\n    var pth = paths(path);\n\n    if (pth.bbox) {\n      return clone(pth.bbox);\n    }\n\n    if (!path) {\n      return box();\n    }\n\n    path = path2curve(path);\n    var x = 0,\n        y = 0,\n        X = [],\n        Y = [],\n        p;\n\n    for (var i = 0, ii = path.length; i < ii; i++) {\n      p = path[i];\n\n      if (p[0] == \"M\") {\n        x = p[1];\n        y = p[2];\n        X.push(x);\n        Y.push(y);\n      } else {\n        var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n        X = X.concat(dim.min.x, dim.max.x);\n        Y = Y.concat(dim.min.y, dim.max.y);\n        x = p[5];\n        y = p[6];\n      }\n    }\n\n    var xmin = mmin.apply(0, X),\n        ymin = mmin.apply(0, Y),\n        xmax = mmax.apply(0, X),\n        ymax = mmax.apply(0, Y),\n        bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n    pth.bbox = clone(bb);\n    return bb;\n  }\n\n  function rectPath(x, y, w, h, r) {\n    if (r) {\n      return [[\"M\", +x + +r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n    }\n\n    var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n    res.toString = toString;\n    return res;\n  }\n\n  function ellipsePath(x, y, rx, ry, a) {\n    if (a == null && ry == null) {\n      ry = rx;\n    }\n\n    x = +x;\n    y = +y;\n    rx = +rx;\n    ry = +ry;\n\n    if (a != null) {\n      var rad = Math.PI / 180,\n          x1 = x + rx * Math.cos(-ry * rad),\n          x2 = x + rx * Math.cos(-a * rad),\n          y1 = y + rx * Math.sin(-ry * rad),\n          y2 = y + rx * Math.sin(-a * rad),\n          res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n    } else {\n      res = [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n    }\n\n    res.toString = toString;\n    return res;\n  }\n\n  var unit2px = Snap._unit2px,\n      getPath = {\n    path: function path(el) {\n      return el.attr(\"path\");\n    },\n    circle: function circle(el) {\n      var attr = unit2px(el);\n      return ellipsePath(attr.cx, attr.cy, attr.r);\n    },\n    ellipse: function ellipse(el) {\n      var attr = unit2px(el);\n      return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n    },\n    rect: function rect(el) {\n      var attr = unit2px(el);\n      return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n    },\n    image: function image(el) {\n      var attr = unit2px(el);\n      return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n    },\n    line: function line(el) {\n      return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n    },\n    polyline: function polyline(el) {\n      return \"M\" + el.attr(\"points\");\n    },\n    polygon: function polygon(el) {\n      return \"M\" + el.attr(\"points\") + \"z\";\n    },\n    deflt: function deflt(el) {\n      var bbox = el.node.getBBox();\n      return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n    }\n  };\n\n  function pathToRelative(pathArray) {\n    var pth = paths(pathArray),\n        lowerCase = String.prototype.toLowerCase;\n\n    if (pth.rel) {\n      return pathClone(pth.rel);\n    }\n\n    if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n      pathArray = Snap.parsePathString(pathArray);\n    }\n\n    var res = [],\n        x = 0,\n        y = 0,\n        mx = 0,\n        my = 0,\n        start = 0;\n\n    if (pathArray[0][0] == \"M\") {\n      x = pathArray[0][1];\n      y = pathArray[0][2];\n      mx = x;\n      my = y;\n      start++;\n      res.push([\"M\", x, y]);\n    }\n\n    for (var i = start, ii = pathArray.length; i < ii; i++) {\n      var r = res[i] = [],\n          pa = pathArray[i];\n\n      if (pa[0] != lowerCase.call(pa[0])) {\n        r[0] = lowerCase.call(pa[0]);\n\n        switch (r[0]) {\n          case \"a\":\n            r[1] = pa[1];\n            r[2] = pa[2];\n            r[3] = pa[3];\n            r[4] = pa[4];\n            r[5] = pa[5];\n            r[6] = +(pa[6] - x).toFixed(3);\n            r[7] = +(pa[7] - y).toFixed(3);\n            break;\n\n          case \"v\":\n            r[1] = +(pa[1] - y).toFixed(3);\n            break;\n\n          case \"m\":\n            mx = pa[1];\n            my = pa[2];\n\n          default:\n            for (var j = 1, jj = pa.length; j < jj; j++) {\n              r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n            }\n\n        }\n      } else {\n        r = res[i] = [];\n\n        if (pa[0] == \"m\") {\n          mx = pa[1] + x;\n          my = pa[2] + y;\n        }\n\n        for (var k = 0, kk = pa.length; k < kk; k++) {\n          res[i][k] = pa[k];\n        }\n      }\n\n      var len = res[i].length;\n\n      switch (res[i][0]) {\n        case \"z\":\n          x = mx;\n          y = my;\n          break;\n\n        case \"h\":\n          x += +res[i][len - 1];\n          break;\n\n        case \"v\":\n          y += +res[i][len - 1];\n          break;\n\n        default:\n          x += +res[i][len - 2];\n          y += +res[i][len - 1];\n      }\n    }\n\n    res.toString = toString;\n    pth.rel = pathClone(res);\n    return res;\n  }\n\n  function pathToAbsolute(pathArray) {\n    var pth = paths(pathArray);\n\n    if (pth.abs) {\n      return pathClone(pth.abs);\n    }\n\n    if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) {\n      // rough assumption\n      pathArray = Snap.parsePathString(pathArray);\n    }\n\n    if (!pathArray || !pathArray.length) {\n      return [[\"M\", 0, 0]];\n    }\n\n    var res = [],\n        x = 0,\n        y = 0,\n        mx = 0,\n        my = 0,\n        start = 0,\n        pa0;\n\n    if (pathArray[0][0] == \"M\") {\n      x = +pathArray[0][1];\n      y = +pathArray[0][2];\n      mx = x;\n      my = y;\n      start++;\n      res[0] = [\"M\", x, y];\n    }\n\n    var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n\n    for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n      res.push(r = []);\n      pa = pathArray[i];\n      pa0 = pa[0];\n\n      if (pa0 != pa0.toUpperCase()) {\n        r[0] = pa0.toUpperCase();\n\n        switch (r[0]) {\n          case \"A\":\n            r[1] = pa[1];\n            r[2] = pa[2];\n            r[3] = pa[3];\n            r[4] = pa[4];\n            r[5] = pa[5];\n            r[6] = +pa[6] + x;\n            r[7] = +pa[7] + y;\n            break;\n\n          case \"V\":\n            r[1] = +pa[1] + y;\n            break;\n\n          case \"H\":\n            r[1] = +pa[1] + x;\n            break;\n\n          case \"R\":\n            var dots = [x, y].concat(pa.slice(1));\n\n            for (var j = 2, jj = dots.length; j < jj; j++) {\n              dots[j] = +dots[j] + x;\n              dots[++j] = +dots[j] + y;\n            }\n\n            res.pop();\n            res = res.concat(catmullRom2bezier(dots, crz));\n            break;\n\n          case \"O\":\n            res.pop();\n            dots = ellipsePath(x, y, pa[1], pa[2]);\n            dots.push(dots[0]);\n            res = res.concat(dots);\n            break;\n\n          case \"U\":\n            res.pop();\n            res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n            r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            break;\n\n          case \"M\":\n            mx = +pa[1] + x;\n            my = +pa[2] + y;\n\n          default:\n            for (j = 1, jj = pa.length; j < jj; j++) {\n              r[j] = +pa[j] + (j % 2 ? x : y);\n            }\n\n        }\n      } else if (pa0 == \"R\") {\n        dots = [x, y].concat(pa.slice(1));\n        res.pop();\n        res = res.concat(catmullRom2bezier(dots, crz));\n        r = [\"R\"].concat(pa.slice(-2));\n      } else if (pa0 == \"O\") {\n        res.pop();\n        dots = ellipsePath(x, y, pa[1], pa[2]);\n        dots.push(dots[0]);\n        res = res.concat(dots);\n      } else if (pa0 == \"U\") {\n        res.pop();\n        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n      } else {\n        for (var k = 0, kk = pa.length; k < kk; k++) {\n          r[k] = pa[k];\n        }\n      }\n\n      pa0 = pa0.toUpperCase();\n\n      if (pa0 != \"O\") {\n        switch (r[0]) {\n          case \"Z\":\n            x = +mx;\n            y = +my;\n            break;\n\n          case \"H\":\n            x = r[1];\n            break;\n\n          case \"V\":\n            y = r[1];\n            break;\n\n          case \"M\":\n            mx = r[r.length - 2];\n            my = r[r.length - 1];\n\n          default:\n            x = r[r.length - 2];\n            y = r[r.length - 1];\n        }\n      }\n    }\n\n    res.toString = toString;\n    pth.abs = pathClone(res);\n    return res;\n  }\n\n  function l2c(x1, y1, x2, y2) {\n    return [x1, y1, x2, y2, x2, y2];\n  }\n\n  function q2c(x1, y1, ax, ay, x2, y2) {\n    var _13 = 1 / 3,\n        _23 = 2 / 3;\n\n    return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n  }\n\n  function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n    // for more information of where this math came from visit:\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    var _120 = PI * 120 / 180,\n        rad = PI / 180 * (+angle || 0),\n        res = [],\n        xy,\n        rotate = Snap._.cacher(function (x, y, rad) {\n      var X = x * math.cos(rad) - y * math.sin(rad),\n          Y = x * math.sin(rad) + y * math.cos(rad);\n      return {\n        x: X,\n        y: Y\n      };\n    });\n\n    if (!rx || !ry) {\n      return [x1, y1, x2, y2, x2, y2];\n    }\n\n    if (!recursive) {\n      xy = rotate(x1, y1, -rad);\n      x1 = xy.x;\n      y1 = xy.y;\n      xy = rotate(x2, y2, -rad);\n      x2 = xy.x;\n      y2 = xy.y;\n      var cos = math.cos(PI / 180 * angle),\n          sin = math.sin(PI / 180 * angle),\n          x = (x1 - x2) / 2,\n          y = (y1 - y2) / 2;\n      var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n      if (h > 1) {\n        h = math.sqrt(h);\n        rx = h * rx;\n        ry = h * ry;\n      }\n\n      var rx2 = rx * rx,\n          ry2 = ry * ry,\n          k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n          cx = k * rx * y / ry + (x1 + x2) / 2,\n          cy = k * -ry * x / rx + (y1 + y2) / 2,\n          f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n          f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n      f1 = x1 < cx ? PI - f1 : f1;\n      f2 = x2 < cx ? PI - f2 : f2;\n      f1 < 0 && (f1 = PI * 2 + f1);\n      f2 < 0 && (f2 = PI * 2 + f2);\n\n      if (sweep_flag && f1 > f2) {\n        f1 = f1 - PI * 2;\n      }\n\n      if (!sweep_flag && f2 > f1) {\n        f2 = f2 - PI * 2;\n      }\n    } else {\n      f1 = recursive[0];\n      f2 = recursive[1];\n      cx = recursive[2];\n      cy = recursive[3];\n    }\n\n    var df = f2 - f1;\n\n    if (abs(df) > _120) {\n      var f2old = f2,\n          x2old = x2,\n          y2old = y2;\n      f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n      x2 = cx + rx * math.cos(f2);\n      y2 = cy + ry * math.sin(f2);\n      res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n    }\n\n    df = f2 - f1;\n    var c1 = math.cos(f1),\n        s1 = math.sin(f1),\n        c2 = math.cos(f2),\n        s2 = math.sin(f2),\n        t = math.tan(df / 4),\n        hx = 4 / 3 * rx * t,\n        hy = 4 / 3 * ry * t,\n        m1 = [x1, y1],\n        m2 = [x1 + hx * s1, y1 - hy * c1],\n        m3 = [x2 + hx * s2, y2 - hy * c2],\n        m4 = [x2, y2];\n    m2[0] = 2 * m1[0] - m2[0];\n    m2[1] = 2 * m1[1] - m2[1];\n\n    if (recursive) {\n      return [m2, m3, m4].concat(res);\n    } else {\n      res = [m2, m3, m4].concat(res).join().split(\",\");\n      var newres = [];\n\n      for (var i = 0, ii = res.length; i < ii; i++) {\n        newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n      }\n\n      return newres;\n    }\n  }\n\n  function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n    var t1 = 1 - t;\n    return {\n      x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n      y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n    };\n  } // Returns bounding box of cubic bezier curve.\n  // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n  // Original version: NISHIO Hirokazu\n  // Modifications: https://github.com/timo22345\n\n\n  function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var tvalues = [],\n        bounds = [[], []],\n        a,\n        b,\n        c,\n        t,\n        t1,\n        t2,\n        b2ac,\n        sqrtb2ac;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i == 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n\n        t = -c / b;\n\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n\n        continue;\n      }\n\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = math.sqrt(b2ac);\n\n      if (b2ac < 0) {\n        continue;\n      }\n\n      t1 = (-b + sqrtb2ac) / (2 * a);\n\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n\n      t2 = (-b - sqrtb2ac) / (2 * a);\n\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x,\n        y,\n        j = tvalues.length,\n        jlen = j,\n        mt;\n\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n      bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n    return {\n      min: {\n        x: mmin.apply(0, bounds[0]),\n        y: mmin.apply(0, bounds[1])\n      },\n      max: {\n        x: mmax.apply(0, bounds[0]),\n        y: mmax.apply(0, bounds[1])\n      }\n    };\n  }\n\n  function path2curve(path, path2) {\n    var pth = !path2 && paths(path);\n\n    if (!path2 && pth.curve) {\n      return pathClone(pth.curve);\n    }\n\n    var p = pathToAbsolute(path),\n        p2 = path2 && pathToAbsolute(path2),\n        attrs = {\n      x: 0,\n      y: 0,\n      bx: 0,\n      by: 0,\n      X: 0,\n      Y: 0,\n      qx: null,\n      qy: null\n    },\n        attrs2 = {\n      x: 0,\n      y: 0,\n      bx: 0,\n      by: 0,\n      X: 0,\n      Y: 0,\n      qx: null,\n      qy: null\n    },\n        processPath = function processPath(path, d, pcom) {\n      var nx, ny;\n\n      if (!path) {\n        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n      }\n\n      !(path[0] in {\n        T: 1,\n        Q: 1\n      }) && (d.qx = d.qy = null);\n\n      switch (path[0]) {\n        case \"M\":\n          d.X = path[1];\n          d.Y = path[2];\n          break;\n\n        case \"A\":\n          path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n          break;\n\n        case \"S\":\n          if (pcom == \"C\" || pcom == \"S\") {\n            // In \"S\" case we have to take into account, if the previous command is C/S.\n            nx = d.x * 2 - d.bx; // And reflect the previous\n\n            ny = d.y * 2 - d.by; // command's control point relative to the current point.\n          } else {\n            // or some else or nothing\n            nx = d.x;\n            ny = d.y;\n          }\n\n          path = [\"C\", nx, ny].concat(path.slice(1));\n          break;\n\n        case \"T\":\n          if (pcom == \"Q\" || pcom == \"T\") {\n            // In \"T\" case we have to take into account, if the previous command is Q/T.\n            d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n            d.qy = d.y * 2 - d.qy; // to case \"S\".\n          } else {\n            // or something else or nothing\n            d.qx = d.x;\n            d.qy = d.y;\n          }\n\n          path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n          break;\n\n        case \"Q\":\n          d.qx = path[1];\n          d.qy = path[2];\n          path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n          break;\n\n        case \"L\":\n          path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n          break;\n\n        case \"H\":\n          path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n          break;\n\n        case \"V\":\n          path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n          break;\n\n        case \"Z\":\n          path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n          break;\n      }\n\n      return path;\n    },\n        fixArc = function fixArc(pp, i) {\n      if (pp[i].length > 7) {\n        pp[i].shift();\n        var pi = pp[i];\n\n        while (pi.length) {\n          pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\n          p2 && (pcoms2[i] = \"A\"); // the same as above\n\n          pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n        }\n\n        pp.splice(i, 1);\n        ii = mmax(p.length, p2 && p2.length || 0);\n      }\n    },\n        fixM = function fixM(path1, path2, a1, a2, i) {\n      if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n        a1.bx = 0;\n        a1.by = 0;\n        a1.x = path1[i][1];\n        a1.y = path1[i][2];\n        ii = mmax(p.length, p2 && p2.length || 0);\n      }\n    },\n        pcoms1 = [],\n        // path commands of original path p\n    pcoms2 = [],\n        // path commands of original path p2\n    pfirst = \"\",\n        // temporary holder for original path command\n    pcom = \"\"; // holder for previous path command of original path\n\n\n    for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n      p[i] && (pfirst = p[i][0]); // save current path command\n\n      if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n        {\n          pcoms1[i] = pfirst; // Save current path command\n\n          i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n        }\n\n      p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n      if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n      // which may produce multiple C:s\n      // so we have to make sure that C is also C in original path\n\n      fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n      if (p2) {\n        // the same procedures is done to p2\n        p2[i] && (pfirst = p2[i][0]);\n\n        if (pfirst != \"C\") {\n          pcoms2[i] = pfirst;\n          i && (pcom = pcoms2[i - 1]);\n        }\n\n        p2[i] = processPath(p2[i], attrs2, pcom);\n\n        if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n          pcoms2[i] = \"C\";\n        }\n\n        fixArc(p2, i);\n      }\n\n      fixM(p, p2, attrs, attrs2, i);\n      fixM(p2, p, attrs2, attrs, i);\n      var seg = p[i],\n          seg2 = p2 && p2[i],\n          seglen = seg.length,\n          seg2len = p2 && seg2.length;\n      attrs.x = seg[seglen - 2];\n      attrs.y = seg[seglen - 1];\n      attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n      attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n      attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n      attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n      attrs2.x = p2 && seg2[seg2len - 2];\n      attrs2.y = p2 && seg2[seg2len - 1];\n    }\n\n    if (!p2) {\n      pth.curve = pathClone(p);\n    }\n\n    return p2 ? [p, p2] : p;\n  }\n\n  function mapPath(path, matrix) {\n    if (!matrix) {\n      return path;\n    }\n\n    var x, y, i, j, ii, jj, pathi;\n    path = path2curve(path);\n\n    for (i = 0, ii = path.length; i < ii; i++) {\n      pathi = path[i];\n\n      for (j = 1, jj = pathi.length; j < jj; j += 2) {\n        x = matrix.x(pathi[j], pathi[j + 1]);\n        y = matrix.y(pathi[j], pathi[j + 1]);\n        pathi[j] = x;\n        pathi[j + 1] = y;\n      }\n    }\n\n    return path;\n  } // http://schepers.cc/getting-to-the-point\n\n\n  function catmullRom2bezier(crp, z) {\n    var d = [];\n\n    for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n      var p = [{\n        x: +crp[i - 2],\n        y: +crp[i - 1]\n      }, {\n        x: +crp[i],\n        y: +crp[i + 1]\n      }, {\n        x: +crp[i + 2],\n        y: +crp[i + 3]\n      }, {\n        x: +crp[i + 4],\n        y: +crp[i + 5]\n      }];\n\n      if (z) {\n        if (!i) {\n          p[0] = {\n            x: +crp[iLen - 2],\n            y: +crp[iLen - 1]\n          };\n        } else if (iLen - 4 == i) {\n          p[3] = {\n            x: +crp[0],\n            y: +crp[1]\n          };\n        } else if (iLen - 2 == i) {\n          p[2] = {\n            x: +crp[0],\n            y: +crp[1]\n          };\n          p[3] = {\n            x: +crp[2],\n            y: +crp[3]\n          };\n        }\n      } else {\n        if (iLen - 4 == i) {\n          p[3] = p[2];\n        } else if (!i) {\n          p[0] = {\n            x: +crp[i],\n            y: +crp[i + 1]\n          };\n        }\n      }\n\n      d.push([\"C\", (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n    }\n\n    return d;\n  } // export\n\n\n  Snap.path = paths;\n  /*\\\n   * Snap.path.getTotalLength\n   [ method ]\n   **\n   * Returns the length of the given path in pixels\n   **\n   - path (string) SVG path string\n   **\n   = (number) length\n  \\*/\n\n  Snap.path.getTotalLength = getTotalLength;\n  /*\\\n   * Snap.path.getPointAtLength\n   [ method ]\n   **\n   * Returns the coordinates of the point located at the given length along the given path\n   **\n   - path (string) SVG path string\n   - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n   **\n   = (object) representation of the point:\n   o {\n   o     x: (number) x coordinate,\n   o     y: (number) y coordinate,\n   o     alpha: (number) angle of derivative\n   o }\n  \\*/\n\n  Snap.path.getPointAtLength = getPointAtLength;\n  /*\\\n   * Snap.path.getSubpath\n   [ method ]\n   **\n   * Returns the subpath of a given path between given start and end lengths\n   **\n   - path (string) SVG path string\n   - from (number) length, in pixels, from the start of the path to the start of the segment\n   - to (number) length, in pixels, from the start of the path to the end of the segment\n   **\n   = (string) path string definition for the segment\n  \\*/\n\n  Snap.path.getSubpath = function (path, from, to) {\n    if (this.getTotalLength(path) - to < 1e-6) {\n      return getSubpathsAtLength(path, from).end;\n    }\n\n    var a = getSubpathsAtLength(path, to, 1);\n    return from ? getSubpathsAtLength(a, from).end : a;\n  };\n  /*\\\n   * Element.getTotalLength\n   [ method ]\n   **\n   * Returns the length of the path in pixels (only works for `path` elements)\n   = (number) length\n  \\*/\n\n\n  elproto.getTotalLength = function () {\n    if (this.node.getTotalLength) {\n      return this.node.getTotalLength();\n    }\n  }; // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n\n  /*\\\n   * Element.getPointAtLength\n   [ method ]\n   **\n   * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n   **\n   - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n   **\n   = (object) representation of the point:\n   o {\n   o     x: (number) x coordinate,\n   o     y: (number) y coordinate,\n   o     alpha: (number) angle of derivative\n   o }\n  \\*/\n\n\n  elproto.getPointAtLength = function (length) {\n    return getPointAtLength(this.attr(\"d\"), length);\n  }; // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n\n  /*\\\n   * Element.getSubpath\n   [ method ]\n   **\n   * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n   **\n   - from (number) length, in pixels, from the start of the path to the start of the segment\n   - to (number) length, in pixels, from the start of the path to the end of the segment\n   **\n   = (string) path string definition for the segment\n  \\*/\n\n\n  elproto.getSubpath = function (from, to) {\n    return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n  };\n\n  Snap._.box = box;\n  /*\\\n   * Snap.path.findDotsAtSegment\n   [ method ]\n   **\n   * Utility method\n   **\n   * Finds dot coordinates on the given cubic beziér curve at the given t\n   - p1x (number) x of the first point of the curve\n   - p1y (number) y of the first point of the curve\n   - c1x (number) x of the first anchor of the curve\n   - c1y (number) y of the first anchor of the curve\n   - c2x (number) x of the second anchor of the curve\n   - c2y (number) y of the second anchor of the curve\n   - p2x (number) x of the second point of the curve\n   - p2y (number) y of the second point of the curve\n   - t (number) position on the curve (0..1)\n   = (object) point information in format:\n   o {\n   o     x: (number) x coordinate of the point,\n   o     y: (number) y coordinate of the point,\n   o     m: {\n   o         x: (number) x coordinate of the left anchor,\n   o         y: (number) y coordinate of the left anchor\n   o     },\n   o     n: {\n   o         x: (number) x coordinate of the right anchor,\n   o         y: (number) y coordinate of the right anchor\n   o     },\n   o     start: {\n   o         x: (number) x coordinate of the start of the curve,\n   o         y: (number) y coordinate of the start of the curve\n   o     },\n   o     end: {\n   o         x: (number) x coordinate of the end of the curve,\n   o         y: (number) y coordinate of the end of the curve\n   o     },\n   o     alpha: (number) angle of the curve derivative at the point\n   o }\n  \\*/\n\n  Snap.path.findDotsAtSegment = findDotsAtSegment;\n  /*\\\n   * Snap.path.bezierBBox\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns the bounding box of a given cubic beziér curve\n   - p1x (number) x of the first point of the curve\n   - p1y (number) y of the first point of the curve\n   - c1x (number) x of the first anchor of the curve\n   - c1y (number) y of the first anchor of the curve\n   - c2x (number) x of the second anchor of the curve\n   - c2y (number) y of the second anchor of the curve\n   - p2x (number) x of the second point of the curve\n   - p2y (number) y of the second point of the curve\n   * or\n   - bez (array) array of six points for beziér curve\n   = (object) bounding box\n   o {\n   o     x: (number) x coordinate of the left top point of the box,\n   o     y: (number) y coordinate of the left top point of the box,\n   o     x2: (number) x coordinate of the right bottom point of the box,\n   o     y2: (number) y coordinate of the right bottom point of the box,\n   o     width: (number) width of the box,\n   o     height: (number) height of the box\n   o }\n  \\*/\n\n  Snap.path.bezierBBox = bezierBBox;\n  /*\\\n   * Snap.path.isPointInsideBBox\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns `true` if given point is inside bounding box\n   - bbox (string) bounding box\n   - x (string) x coordinate of the point\n   - y (string) y coordinate of the point\n   = (boolean) `true` if point is inside\n  \\*/\n\n  Snap.path.isPointInsideBBox = isPointInsideBBox;\n\n  Snap.closest = function (x, y, X, Y) {\n    var r = 100,\n        b = box(x - r / 2, y - r / 2, r, r),\n        inside = [],\n        getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n      return {\n        x: X[i].x,\n        y: X[i].y\n      };\n    } : function (i) {\n      return {\n        x: X[i],\n        y: Y[i]\n      };\n    },\n        found = 0;\n\n    while (r <= 1e6 && !found) {\n      for (var i = 0, ii = X.length; i < ii; i++) {\n        var xy = getter(i);\n\n        if (isPointInsideBBox(b, xy.x, xy.y)) {\n          found++;\n          inside.push(xy);\n          break;\n        }\n      }\n\n      if (!found) {\n        r *= 2;\n        b = box(x - r / 2, y - r / 2, r, r);\n      }\n    }\n\n    if (r == 1e6) {\n      return;\n    }\n\n    var len = Infinity,\n        res;\n\n    for (i = 0, ii = inside.length; i < ii; i++) {\n      var l = Snap.len(x, y, inside[i].x, inside[i].y);\n\n      if (len > l) {\n        len = l;\n        inside[i].len = l;\n        res = inside[i];\n      }\n    }\n\n    return res;\n  };\n  /*\\\n   * Snap.path.isBBoxIntersect\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns `true` if two bounding boxes intersect\n   - bbox1 (string) first bounding box\n   - bbox2 (string) second bounding box\n   = (boolean) `true` if bounding boxes intersect\n  \\*/\n\n\n  Snap.path.isBBoxIntersect = isBBoxIntersect;\n  /*\\\n   * Snap.path.intersection\n   [ method ]\n   **\n   * Utility method\n   **\n   * Finds intersections of two paths\n   - path1 (string) path string\n   - path2 (string) path string\n   = (array) dots of intersection\n   o [\n   o     {\n   o         x: (number) x coordinate of the point,\n   o         y: (number) y coordinate of the point,\n   o         t1: (number) t value for segment of path1,\n   o         t2: (number) t value for segment of path2,\n   o         segment1: (number) order number for segment of path1,\n   o         segment2: (number) order number for segment of path2,\n   o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n   o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n   o     }\n   o ]\n  \\*/\n\n  Snap.path.intersection = pathIntersection;\n  Snap.path.intersectionNumber = pathIntersectionNumber;\n  /*\\\n   * Snap.path.isPointInside\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns `true` if given point is inside a given closed path.\n   *\n   * Note: fill mode doesn’t affect the result of this method.\n   - path (string) path string\n   - x (number) x of the point\n   - y (number) y of the point\n   = (boolean) `true` if point is inside the path\n  \\*/\n\n  Snap.path.isPointInside = isPointInsidePath;\n  /*\\\n   * Snap.path.getBBox\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns the bounding box of a given path\n   - path (string) path string\n   = (object) bounding box\n   o {\n   o     x: (number) x coordinate of the left top point of the box,\n   o     y: (number) y coordinate of the left top point of the box,\n   o     x2: (number) x coordinate of the right bottom point of the box,\n   o     y2: (number) y coordinate of the right bottom point of the box,\n   o     width: (number) width of the box,\n   o     height: (number) height of the box\n   o }\n  \\*/\n\n  Snap.path.getBBox = pathBBox;\n  Snap.path.get = getPath;\n  /*\\\n   * Snap.path.toRelative\n   [ method ]\n   **\n   * Utility method\n   **\n   * Converts path coordinates into relative values\n   - path (string) path string\n   = (array) path string\n  \\*/\n\n  Snap.path.toRelative = pathToRelative;\n  /*\\\n   * Snap.path.toAbsolute\n   [ method ]\n   **\n   * Utility method\n   **\n   * Converts path coordinates into absolute values\n   - path (string) path string\n   = (array) path string\n  \\*/\n\n  Snap.path.toAbsolute = pathToAbsolute;\n  /*\\\n   * Snap.path.toCubic\n   [ method ]\n   **\n   * Utility method\n   **\n   * Converts path to a new path where all segments are cubic beziér curves\n   - pathString (string|array) path string or array of segments\n   = (array) array of segments\n  \\*/\n\n  Snap.path.toCubic = path2curve;\n  /*\\\n   * Snap.path.map\n   [ method ]\n   **\n   * Transform the path string with the given matrix\n   - path (string) path string\n   - matrix (object) see @Matrix\n   = (string) transformed path string\n  \\*/\n\n  Snap.path.map = mapPath;\n  Snap.path.toString = toString;\n  Snap.path.clone = pathClone;\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var mmax = Math.max,\n      mmin = Math.min; // Set\n\n  var Set = function Set(items) {\n    this.items = [];\n    this.bindings = {};\n    this.length = 0;\n    this.type = \"set\";\n\n    if (items) {\n      for (var i = 0, ii = items.length; i < ii; i++) {\n        if (items[i]) {\n          this[this.items.length] = this.items[this.items.length] = items[i];\n          this.length++;\n        }\n      }\n    }\n  },\n      setproto = Set.prototype;\n  /*\\\n   * Set.push\n   [ method ]\n   **\n   * Adds each argument to the current set\n   = (object) original element\n  \\*/\n\n\n  setproto.push = function () {\n    var item, len;\n\n    for (var i = 0, ii = arguments.length; i < ii; i++) {\n      item = arguments[i];\n\n      if (item) {\n        len = this.items.length;\n        this[len] = this.items[len] = item;\n        this.length++;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.pop\n   [ method ]\n   **\n   * Removes last element and returns it\n   = (object) element\n  \\*/\n\n\n  setproto.pop = function () {\n    this.length && delete this[this.length--];\n    return this.items.pop();\n  };\n  /*\\\n   * Set.forEach\n   [ method ]\n   **\n   * Executes given function for each element in the set\n   *\n   * If the function returns `false`, the loop stops running.\n   **\n   - callback (function) function to run\n   - thisArg (object) context object for the callback\n   = (object) Set object\n  \\*/\n\n\n  setproto.forEach = function (callback, thisArg) {\n    for (var i = 0, ii = this.items.length; i < ii; i++) {\n      if (callback.call(thisArg, this.items[i], i) === false) {\n        return this;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.animate\n   [ method ]\n   **\n   * Animates each element in set in sync.\n   *\n   **\n   - attrs (object) key-value pairs of destination attributes\n   - duration (number) duration of the animation in milliseconds\n   - easing (function) #optional easing function from @mina or custom\n   - callback (function) #optional callback function that executes when the animation ends\n   * or\n   - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n   > Usage\n   | // animate all elements in set to radius 10\n   | set.animate({r: 10}, 500, mina.easein);\n   | // or\n   | // animate first element to radius 10, but second to radius 20 and in different time\n   | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n   = (Element) the current element\n  \\*/\n\n\n  setproto.animate = function (attrs, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    if (attrs instanceof Snap._.Animation) {\n      callback = attrs.callback;\n      easing = attrs.easing;\n      ms = easing.dur;\n      attrs = attrs.attr;\n    }\n\n    var args = arguments;\n\n    if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n      var each = true;\n    }\n\n    var begin,\n        handler = function handler() {\n      if (begin) {\n        this.b = begin;\n      } else {\n        begin = this.b;\n      }\n    },\n        cb = 0,\n        set = this,\n        callbacker = callback && function () {\n      if (++cb == set.length) {\n        callback.call(this);\n      }\n    };\n\n    return this.forEach(function (el, i) {\n      eve.once(\"snap.animcreated.\" + el.id, handler);\n\n      if (each) {\n        args[i] && el.animate.apply(el, args[i]);\n      } else {\n        el.animate(attrs, ms, easing, callbacker);\n      }\n    });\n  };\n  /*\\\n   * Set.remove\n   [ method ]\n   **\n   * Removes all children of the set.\n   *\n   = (object) Set object\n  \\*/\n\n\n  setproto.remove = function () {\n    while (this.length) {\n      this.pop().remove();\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.bind\n   [ method ]\n   **\n   * Specifies how to handle a specific attribute when applied\n   * to a set.\n   *\n   **\n   - attr (string) attribute name\n   - callback (function) function to run\n   * or\n   - attr (string) attribute name\n   - element (Element) specific element in the set to apply the attribute to\n   * or\n   - attr (string) attribute name\n   - element (Element) specific element in the set to apply the attribute to\n   - eattr (string) attribute on the element to bind the attribute to\n   = (object) Set object\n  \\*/\n\n\n  setproto.bind = function (attr, a, b) {\n    var data = {};\n\n    if (typeof a == \"function\") {\n      this.bindings[attr] = a;\n    } else {\n      var aname = b || attr;\n\n      this.bindings[attr] = function (v) {\n        data[aname] = v;\n        a.attr(data);\n      };\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.attr\n   [ method ]\n   **\n   * Equivalent of @Element.attr.\n   = (object) Set object\n  \\*/\n\n\n  setproto.attr = function (value) {\n    var unbound = {};\n\n    for (var k in value) {\n      if (this.bindings[k]) {\n        this.bindings[k](value[k]);\n      } else {\n        unbound[k] = value[k];\n      }\n    }\n\n    for (var i = 0, ii = this.items.length; i < ii; i++) {\n      this.items[i].attr(unbound);\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.clear\n   [ method ]\n   **\n   * Removes all elements from the set\n  \\*/\n\n\n  setproto.clear = function () {\n    while (this.length) {\n      this.pop();\n    }\n  };\n  /*\\\n   * Set.splice\n   [ method ]\n   **\n   * Removes range of elements from the set\n   **\n   - index (number) position of the deletion\n   - count (number) number of element to remove\n   - insertion… (object) #optional elements to insert\n   = (object) set elements that were deleted\n  \\*/\n\n\n  setproto.splice = function (index, count, insertion) {\n    index = index < 0 ? mmax(this.length + index, 0) : index;\n    count = mmax(0, mmin(this.length - index, count));\n    var tail = [],\n        todel = [],\n        args = [],\n        i;\n\n    for (i = 2; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    for (i = 0; i < count; i++) {\n      todel.push(this[index + i]);\n    }\n\n    for (; i < this.length - index; i++) {\n      tail.push(this[index + i]);\n    }\n\n    var arglen = args.length;\n\n    for (i = 0; i < arglen + tail.length; i++) {\n      this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n    }\n\n    i = this.items.length = this.length -= count - arglen;\n\n    while (this[i]) {\n      delete this[i++];\n    }\n\n    return new Set(todel);\n  };\n  /*\\\n   * Set.exclude\n   [ method ]\n   **\n   * Removes given element from the set\n   **\n   - element (object) element to remove\n   = (boolean) `true` if object was found and removed from the set\n  \\*/\n\n\n  setproto.exclude = function (el) {\n    for (var i = 0, ii = this.length; i < ii; i++) {\n      if (this[i] == el) {\n        this.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /*\\\n   * Set.insertAfter\n   [ method ]\n   **\n   * Inserts set elements after given element.\n   **\n   - element (object) set will be inserted after this element\n   = (object) Set object\n  \\*/\n\n\n  setproto.insertAfter = function (el) {\n    var i = this.items.length;\n\n    while (i--) {\n      this.items[i].insertAfter(el);\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.getBBox\n   [ method ]\n   **\n   * Union of all bboxes of the set. See @Element.getBBox.\n   = (object) bounding box descriptor. See @Element.getBBox.\n  \\*/\n\n\n  setproto.getBBox = function () {\n    var x = [],\n        y = [],\n        x2 = [],\n        y2 = [];\n\n    for (var i = this.items.length; i--;) {\n      if (!this.items[i].removed) {\n        var box = this.items[i].getBBox();\n        x.push(box.x);\n        y.push(box.y);\n        x2.push(box.x + box.width);\n        y2.push(box.y + box.height);\n      }\n    }\n\n    x = mmin.apply(0, x);\n    y = mmin.apply(0, y);\n    x2 = mmax.apply(0, x2);\n    y2 = mmax.apply(0, y2);\n    return {\n      x: x,\n      y: y,\n      x2: x2,\n      y2: y2,\n      width: x2 - x,\n      height: y2 - y,\n      cx: x + (x2 - x) / 2,\n      cy: y + (y2 - y) / 2\n    };\n  };\n  /*\\\n   * Set.insertAfter\n   [ method ]\n   **\n   * Creates a clone of the set.\n   **\n   = (object) New Set object\n  \\*/\n\n\n  setproto.clone = function (s) {\n    s = new Set();\n\n    for (var i = 0, ii = this.items.length; i < ii; i++) {\n      s.push(this.items[i].clone());\n    }\n\n    return s;\n  };\n\n  setproto.toString = function () {\n    return \"Snap\\u2018s set\";\n  };\n\n  setproto.type = \"set\"; // export\n\n  /*\\\n   * Snap.Set\n   [ property ]\n   **\n   * Set constructor.\n  \\*/\n\n  Snap.Set = Set;\n  /*\\\n   * Snap.set\n   [ method ]\n   **\n   * Creates a set and fills it with list of arguments.\n   **\n   = (object) New Set object\n   | var r = paper.rect(0, 0, 10, 10),\n   |     s1 = Snap.set(), // empty set\n   |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n  \\*/\n\n  Snap.set = function () {\n    var set = new Set();\n\n    if (arguments.length) {\n      set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n    }\n\n    return set;\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var names = {},\n      reUnit = /[%a-z]+$/i,\n      Str = String;\n  names.stroke = names.fill = \"colour\";\n\n  function getEmpty(item) {\n    var l = item[0];\n\n    switch (l.toLowerCase()) {\n      case \"t\":\n        return [l, 0, 0];\n\n      case \"m\":\n        return [l, 1, 0, 0, 1, 0, 0];\n\n      case \"r\":\n        if (item.length == 4) {\n          return [l, 0, item[2], item[3]];\n        } else {\n          return [l, 0];\n        }\n\n      case \"s\":\n        if (item.length == 5) {\n          return [l, 1, 1, item[3], item[4]];\n        } else if (item.length == 3) {\n          return [l, 1, 1];\n        } else {\n          return [l, 1];\n        }\n\n    }\n  }\n\n  function equaliseTransform(t1, t2, getBBox) {\n    t1 = t1 || new Snap.Matrix();\n    t2 = t2 || new Snap.Matrix();\n    t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n    t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n    var maxlength = Math.max(t1.length, t2.length),\n        from = [],\n        to = [],\n        i = 0,\n        j,\n        jj,\n        tt1,\n        tt2;\n\n    for (; i < maxlength; i++) {\n      tt1 = t1[i] || getEmpty(t2[i]);\n      tt2 = t2[i] || getEmpty(tt1);\n\n      if (tt1[0] != tt2[0] || tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) || tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])) {\n        t1 = Snap._.transform2matrix(t1, getBBox());\n        t2 = Snap._.transform2matrix(t2, getBBox());\n        from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n        to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n        break;\n      }\n\n      from[i] = [];\n      to[i] = [];\n\n      for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n        j in tt1 && (from[i][j] = tt1[j]);\n        j in tt2 && (to[i][j] = tt2[j]);\n      }\n    }\n\n    return {\n      from: path2array(from),\n      to: path2array(to),\n      f: getPath(from)\n    };\n  }\n\n  function getNumber(val) {\n    return val;\n  }\n\n  function getUnit(unit) {\n    return function (val) {\n      return +val.toFixed(3) + unit;\n    };\n  }\n\n  function getViewBox(val) {\n    return val.join(\" \");\n  }\n\n  function getColour(clr) {\n    return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n  }\n\n  function getPath(path) {\n    var k = 0,\n        i,\n        ii,\n        j,\n        jj,\n        out,\n        a,\n        b = [];\n\n    for (i = 0, ii = path.length; i < ii; i++) {\n      out = \"[\";\n      a = ['\"' + path[i][0] + '\"'];\n\n      for (j = 1, jj = path[i].length; j < jj; j++) {\n        a[j] = \"val[\" + k++ + \"]\";\n      }\n\n      out += a + \"]\";\n      b[i] = out;\n    }\n\n    return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n  }\n\n  function path2array(path) {\n    var out = [];\n\n    for (var i = 0, ii = path.length; i < ii; i++) {\n      for (var j = 1, jj = path[i].length; j < jj; j++) {\n        out.push(path[i][j]);\n      }\n    }\n\n    return out;\n  }\n\n  function isNumeric(obj) {\n    return isFinite(obj);\n  }\n\n  function arrayEqual(arr1, arr2) {\n    if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n      return false;\n    }\n\n    return arr1.toString() == arr2.toString();\n  }\n\n  Element.prototype.equal = function (name, b) {\n    return eve(\"snap.util.equal\", this, name, b).firstDefined();\n  };\n\n  eve.on(\"snap.util.equal\", function (name, b) {\n    var A,\n        B,\n        a = Str(this.attr(name) || \"\"),\n        el = this;\n\n    if (names[name] == \"colour\") {\n      A = Snap.color(a);\n      B = Snap.color(b);\n      return {\n        from: [A.r, A.g, A.b, A.opacity],\n        to: [B.r, B.g, B.b, B.opacity],\n        f: getColour\n      };\n    }\n\n    if (name == \"viewBox\") {\n      A = this.attr(name).vb.split(\" \").map(Number);\n      B = b.split(\" \").map(Number);\n      return {\n        from: A,\n        to: B,\n        f: getViewBox\n      };\n    }\n\n    if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n      if (typeof b == \"string\") {\n        b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n      }\n\n      a = this.matrix;\n\n      if (!Snap._.rgTransform.test(b)) {\n        b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n      } else {\n        b = Snap._.transform2matrix(b, this.getBBox());\n      }\n\n      return equaliseTransform(a, b, function () {\n        return el.getBBox(1);\n      });\n    }\n\n    if (name == \"d\" || name == \"path\") {\n      A = Snap.path.toCubic(a, b);\n      return {\n        from: path2array(A[0]),\n        to: path2array(A[1]),\n        f: getPath(A[0])\n      };\n    }\n\n    if (name == \"points\") {\n      A = Str(a).split(Snap._.separator);\n      B = Str(b).split(Snap._.separator);\n      return {\n        from: A,\n        to: B,\n        f: function f(val) {\n          return val;\n        }\n      };\n    }\n\n    if (isNumeric(a) && isNumeric(b)) {\n      return {\n        from: parseFloat(a),\n        to: parseFloat(b),\n        f: getNumber\n      };\n    }\n\n    var aUnit = a.match(reUnit),\n        bUnit = Str(b).match(reUnit);\n\n    if (aUnit && arrayEqual(aUnit, bUnit)) {\n      return {\n        from: parseFloat(a),\n        to: parseFloat(b),\n        f: getUnit(aUnit)\n      };\n    } else {\n      return {\n        from: this.asPX(name),\n        to: this.asPX(name, b),\n        f: getNumber\n      };\n    }\n  });\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var elproto = Element.prototype,\n      has = \"hasOwnProperty\",\n      supportsTouch = \"createTouch\" in glob.doc,\n      events = [\"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"],\n      touchMap = {\n    mousedown: \"touchstart\",\n    mousemove: \"touchmove\",\n    mouseup: \"touchend\"\n  },\n      getScroll = function getScroll(xy, el) {\n    var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n        doc = el && el.node ? el.node.ownerDocument : glob.doc;\n    return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n  },\n      preventDefault = function preventDefault() {\n    this.returnValue = false;\n  },\n      preventTouch = function preventTouch() {\n    return this.originalEvent.preventDefault();\n  },\n      stopPropagation = function stopPropagation() {\n    this.cancelBubble = true;\n  },\n      stopTouch = function stopTouch() {\n    return this.originalEvent.stopPropagation();\n  },\n      addEvent = function addEvent(obj, type, fn, element) {\n    var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n        f = function f(e) {\n      var scrollY = getScroll(\"y\", element),\n          scrollX = getScroll(\"x\", element);\n\n      if (supportsTouch && touchMap[has](type)) {\n        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n          if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n            var olde = e;\n            e = e.targetTouches[i];\n            e.originalEvent = olde;\n            e.preventDefault = preventTouch;\n            e.stopPropagation = stopTouch;\n            break;\n          }\n        }\n      }\n\n      var x = e.clientX + scrollX,\n          y = e.clientY + scrollY;\n      return fn.call(element, e, x, y);\n    };\n\n    if (type !== realName) {\n      obj.addEventListener(type, f, false);\n    }\n\n    obj.addEventListener(realName, f, false);\n    return function () {\n      if (type !== realName) {\n        obj.removeEventListener(type, f, false);\n      }\n\n      obj.removeEventListener(realName, f, false);\n      return true;\n    };\n  },\n      drag = [],\n      dragMove = function dragMove(e) {\n    var x = e.clientX,\n        y = e.clientY,\n        scrollY = getScroll(\"y\"),\n        scrollX = getScroll(\"x\"),\n        dragi,\n        j = drag.length;\n\n    while (j--) {\n      dragi = drag[j];\n\n      if (supportsTouch) {\n        var i = e.touches && e.touches.length,\n            touch;\n\n        while (i--) {\n          touch = e.touches[i];\n\n          if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n            x = touch.clientX;\n            y = touch.clientY;\n            (e.originalEvent ? e.originalEvent : e).preventDefault();\n            break;\n          }\n        }\n      } else {\n        e.preventDefault();\n      }\n\n      var node = dragi.el.node,\n          o,\n          next = node.nextSibling,\n          parent = node.parentNode,\n          display = node.style.display; // glob.win.opera && parent.removeChild(node);\n      // node.style.display = \"none\";\n      // o = dragi.el.paper.getElementByPoint(x, y);\n      // node.style.display = display;\n      // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n      // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n\n      x += scrollX;\n      y += scrollY;\n      eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n    }\n  },\n      dragUp = function dragUp(e) {\n    Snap.unmousemove(dragMove).unmouseup(dragUp);\n    var i = drag.length,\n        dragi;\n\n    while (i--) {\n      dragi = drag[i];\n      dragi.el._drag = {};\n      eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n      eve.off(\"snap.drag.*.\" + dragi.el.id);\n    }\n\n    drag = [];\n  };\n  /*\\\n   * Element.click\n   [ method ]\n   **\n   * Adds a click event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unclick\n   [ method ]\n   **\n   * Removes a click event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.dblclick\n   [ method ]\n   **\n   * Adds a double click event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.undblclick\n   [ method ]\n   **\n   * Removes a double click event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mousedown\n   [ method ]\n   **\n   * Adds a mousedown event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmousedown\n   [ method ]\n   **\n   * Removes a mousedown event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mousemove\n   [ method ]\n   **\n   * Adds a mousemove event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmousemove\n   [ method ]\n   **\n   * Removes a mousemove event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mouseout\n   [ method ]\n   **\n   * Adds a mouseout event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmouseout\n   [ method ]\n   **\n   * Removes a mouseout event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mouseover\n   [ method ]\n   **\n   * Adds a mouseover event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmouseover\n   [ method ]\n   **\n   * Removes a mouseover event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mouseup\n   [ method ]\n   **\n   * Adds a mouseup event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmouseup\n   [ method ]\n   **\n   * Removes a mouseup event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchstart\n   [ method ]\n   **\n   * Adds a touchstart event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchstart\n   [ method ]\n   **\n   * Removes a touchstart event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchmove\n   [ method ]\n   **\n   * Adds a touchmove event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchmove\n   [ method ]\n   **\n   * Removes a touchmove event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchend\n   [ method ]\n   **\n   * Adds a touchend event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchend\n   [ method ]\n   **\n   * Removes a touchend event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchcancel\n   [ method ]\n   **\n   * Adds a touchcancel event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchcancel\n   [ method ]\n   **\n   * Removes a touchcancel event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n\n  for (var i = events.length; i--;) {\n    (function (eventName) {\n      Snap[eventName] = elproto[eventName] = function (fn, scope) {\n        if (Snap.is(fn, \"function\")) {\n          this.events = this.events || [];\n          this.events.push({\n            name: eventName,\n            f: fn,\n            unbind: addEvent(this.node || document, eventName, fn, scope || this)\n          });\n        } else {\n          for (var i = 0, ii = this.events.length; i < ii; i++) {\n            if (this.events[i].name == eventName) {\n              try {\n                this.events[i].f.call(this);\n              } catch (e) {}\n            }\n          }\n        }\n\n        return this;\n      };\n\n      Snap[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n        var events = this.events || [],\n            l = events.length;\n\n        while (l--) {\n          if (events[l].name == eventName && (events[l].f == fn || !fn)) {\n            events[l].unbind();\n            events.splice(l, 1);\n            !events.length && delete this.events;\n            return this;\n          }\n        }\n\n        return this;\n      };\n    })(events[i]);\n  }\n  /*\\\n   * Element.hover\n   [ method ]\n   **\n   * Adds hover event handlers to the element\n   - f_in (function) handler for hover in\n   - f_out (function) handler for hover out\n   - icontext (object) #optional context for hover in handler\n   - ocontext (object) #optional context for hover out handler\n   = (object) @Element\n  \\*/\n\n\n  elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n    return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n  };\n  /*\\\n   * Element.unhover\n   [ method ]\n   **\n   * Removes hover event handlers from the element\n   - f_in (function) handler for hover in\n   - f_out (function) handler for hover out\n   = (object) @Element\n  \\*/\n\n\n  elproto.unhover = function (f_in, f_out) {\n    return this.unmouseover(f_in).unmouseout(f_out);\n  };\n\n  var draggable = []; // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n  // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n  // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n  // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n\n  /*\\\n   * Element.drag\n   [ method ]\n   **\n   * Adds event handlers for an element's drag gesture\n   **\n   - onmove (function) handler for moving\n   - onstart (function) handler for drag start\n   - onend (function) handler for drag end\n   - mcontext (object) #optional context for moving handler\n   - scontext (object) #optional context for drag start handler\n   - econtext (object) #optional context for drag end handler\n   * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n   * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n   * `drag.over.<id>` fires as well.\n   *\n   * Start event and start handler are called in specified context or in context of the element with following parameters:\n   o x (number) x position of the mouse\n   o y (number) y position of the mouse\n   o event (object) DOM event object\n   * Move event and move handler are called in specified context or in context of the element with following parameters:\n   o dx (number) shift by x from the start point\n   o dy (number) shift by y from the start point\n   o x (number) x position of the mouse\n   o y (number) y position of the mouse\n   o event (object) DOM event object\n   * End event and end handler are called in specified context or in context of the element with following parameters:\n   o event (object) DOM event object\n   = (object) @Element\n  \\*/\n\n  elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n    var el = this;\n\n    if (!arguments.length) {\n      var origTransform;\n      return el.drag(function (dx, dy) {\n        this.attr({\n          transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n        });\n      }, function () {\n        origTransform = this.transform().local;\n      });\n    }\n\n    function start(e, x, y) {\n      (e.originalEvent || e).preventDefault();\n      el._drag.x = x;\n      el._drag.y = y;\n      el._drag.id = e.identifier;\n      !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n      drag.push({\n        el: el,\n        move_scope: move_scope,\n        start_scope: start_scope,\n        end_scope: end_scope\n      });\n      onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n      onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n      onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n      eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n    }\n\n    function init(e, x, y) {\n      eve(\"snap.draginit.\" + el.id, el, e, x, y);\n    }\n\n    eve.on(\"snap.draginit.\" + el.id, start);\n    el._drag = {};\n    draggable.push({\n      el: el,\n      start: start,\n      init: init\n    });\n    el.mousedown(init);\n    return el;\n  };\n  /*\n   * Element.onDragOver\n   [ method ]\n   **\n   * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n   - f (function) handler for event, first argument would be the element you are dragging over\n  \\*/\n  // elproto.onDragOver = function (f) {\n  //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n  // };\n\n  /*\\\n   * Element.undrag\n   [ method ]\n   **\n   * Removes all drag event handlers from the given element\n  \\*/\n\n\n  elproto.undrag = function () {\n    var i = draggable.length;\n\n    while (i--) {\n      if (draggable[i].el == this) {\n        this.unmousedown(draggable[i].init);\n        draggable.splice(i, 1);\n        eve.unbind(\"snap.drag.*.\" + this.id);\n        eve.unbind(\"snap.draginit.\" + this.id);\n      }\n    }\n\n    !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n    return this;\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var elproto = Element.prototype,\n      pproto = Paper.prototype,\n      rgurl = /^\\s*url\\((.+)\\)/,\n      Str = String,\n      $ = Snap._.$;\n  Snap.filter = {};\n  /*\\\n   * Paper.filter\n   [ method ]\n   **\n   * Creates a `<filter>` element\n   **\n   - filstr (string) SVG fragment of filter provided as a string\n   = (object) @Element\n   * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n   > Usage\n   | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n   |     c = paper.circle(10, 10, 10).attr({\n   |         filter: f\n   |     });\n  \\*/\n\n  pproto.filter = function (filstr) {\n    var paper = this;\n\n    if (paper.type != \"svg\") {\n      paper = paper.paper;\n    }\n\n    var f = Snap.parse(Str(filstr)),\n        id = Snap._.id(),\n        width = paper.node.offsetWidth,\n        height = paper.node.offsetHeight,\n        filter = $(\"filter\");\n\n    $(filter, {\n      id: id,\n      filterUnits: \"userSpaceOnUse\"\n    });\n    filter.appendChild(f.node);\n    paper.defs.appendChild(filter);\n    return new Element(filter);\n  };\n\n  eve.on(\"snap.util.getattr.filter\", function () {\n    eve.stop();\n    var p = $(this.node, \"filter\");\n\n    if (p) {\n      var match = Str(p).match(rgurl);\n      return match && Snap.select(match[1]);\n    }\n  });\n  eve.on(\"snap.util.attr.filter\", function (value) {\n    if (value instanceof Element && value.type == \"filter\") {\n      eve.stop();\n      var id = value.node.id;\n\n      if (!id) {\n        $(value.node, {\n          id: value.id\n        });\n        id = value.id;\n      }\n\n      $(this.node, {\n        filter: Snap.url(id)\n      });\n    }\n\n    if (!value || value == \"none\") {\n      eve.stop();\n      this.node.removeAttribute(\"filter\");\n    }\n  });\n  /*\\\n   * Snap.filter.blur\n   [ method ]\n   **\n   * Returns an SVG markup string for the blur filter\n   **\n   - x (number) amount of horizontal blur, in pixels\n   - y (number) #optional amount of vertical blur, in pixels\n   = (string) filter representation\n   > Usage\n   | var f = paper.filter(Snap.filter.blur(5, 10)),\n   |     c = paper.circle(10, 10, 10).attr({\n   |         filter: f\n   |     });\n  \\*/\n\n  Snap.filter.blur = function (x, y) {\n    if (x == null) {\n      x = 2;\n    }\n\n    var def = y == null ? x : [x, y];\n    return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n      def: def\n    });\n  };\n\n  Snap.filter.blur.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.shadow\n   [ method ]\n   **\n   * Returns an SVG markup string for the shadow filter\n   **\n   - dx (number) #optional horizontal shift of the shadow, in pixels\n   - dy (number) #optional vertical shift of the shadow, in pixels\n   - blur (number) #optional amount of blur\n   - color (string) #optional color of the shadow\n   - opacity (number) #optional `0..1` opacity of the shadow\n   * or\n   - dx (number) #optional horizontal shift of the shadow, in pixels\n   - dy (number) #optional vertical shift of the shadow, in pixels\n   - color (string) #optional color of the shadow\n   - opacity (number) #optional `0..1` opacity of the shadow\n   * which makes blur default to `4`. Or\n   - dx (number) #optional horizontal shift of the shadow, in pixels\n   - dy (number) #optional vertical shift of the shadow, in pixels\n   - opacity (number) #optional `0..1` opacity of the shadow\n   = (string) filter representation\n   > Usage\n   | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n   |     c = paper.circle(10, 10, 10).attr({\n   |         filter: f\n   |     });\n  \\*/\n\n\n  Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n    if (opacity == null) {\n      if (color == null) {\n        opacity = blur;\n        blur = 4;\n        color = \"#000\";\n      } else {\n        opacity = color;\n        color = blur;\n        blur = 4;\n      }\n    }\n\n    if (blur == null) {\n      blur = 4;\n    }\n\n    if (opacity == null) {\n      opacity = 1;\n    }\n\n    if (dx == null) {\n      dx = 0;\n      dy = 2;\n    }\n\n    if (dy == null) {\n      dy = dx;\n    }\n\n    color = Snap.color(color);\n    return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n      color: color,\n      dx: dx,\n      dy: dy,\n      blur: blur,\n      opacity: opacity\n    });\n  };\n\n  Snap.filter.shadow.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.grayscale\n   [ method ]\n   **\n   * Returns an SVG markup string for the grayscale filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.grayscale = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n      a: 0.2126 + 0.7874 * (1 - amount),\n      b: 0.7152 - 0.7152 * (1 - amount),\n      c: 0.0722 - 0.0722 * (1 - amount),\n      d: 0.2126 - 0.2126 * (1 - amount),\n      e: 0.7152 + 0.2848 * (1 - amount),\n      f: 0.0722 - 0.0722 * (1 - amount),\n      g: 0.2126 - 0.2126 * (1 - amount),\n      h: 0.0722 + 0.9278 * (1 - amount)\n    });\n  };\n\n  Snap.filter.grayscale.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.sepia\n   [ method ]\n   **\n   * Returns an SVG markup string for the sepia filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.sepia = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n      a: 0.393 + 0.607 * (1 - amount),\n      b: 0.769 - 0.769 * (1 - amount),\n      c: 0.189 - 0.189 * (1 - amount),\n      d: 0.349 - 0.349 * (1 - amount),\n      e: 0.686 + 0.314 * (1 - amount),\n      f: 0.168 - 0.168 * (1 - amount),\n      g: 0.272 - 0.272 * (1 - amount),\n      h: 0.534 - 0.534 * (1 - amount),\n      i: 0.131 + 0.869 * (1 - amount)\n    });\n  };\n\n  Snap.filter.sepia.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.saturate\n   [ method ]\n   **\n   * Returns an SVG markup string for the saturate filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.saturate = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n      amount: 1 - amount\n    });\n  };\n\n  Snap.filter.saturate.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.hueRotate\n   [ method ]\n   **\n   * Returns an SVG markup string for the hue-rotate filter\n   **\n   - angle (number) angle of rotation\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.hueRotate = function (angle) {\n    angle = angle || 0;\n    return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n      angle: angle\n    });\n  };\n\n  Snap.filter.hueRotate.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.invert\n   [ method ]\n   **\n   * Returns an SVG markup string for the invert filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.invert = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    } //        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n\n\n    return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n      amount: amount,\n      amount2: 1 - amount\n    });\n  };\n\n  Snap.filter.invert.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.brightness\n   [ method ]\n   **\n   * Returns an SVG markup string for the brightness filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.brightness = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n      amount: amount\n    });\n  };\n\n  Snap.filter.brightness.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.contrast\n   [ method ]\n   **\n   * Returns an SVG markup string for the contrast filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.contrast = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n      amount: amount,\n      amount2: .5 - amount / 2\n    });\n  };\n\n  Snap.filter.contrast.toString = function () {\n    return this();\n  };\n}); // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var box = Snap._.box,\n      is = Snap.is,\n      firstLetter = /^[^a-z]*([tbmlrc])/i,\n      toString = function toString() {\n    return \"T\" + this.dx + \",\" + this.dy;\n  };\n  /*\\\n   * Element.getAlign\n   [ method ]\n   **\n   * Returns shift needed to align the element relatively to given element.\n   * If no elements specified, parent `<svg>` container will be used.\n   - el (object) @optional alignment element\n   - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n   = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n   > Usage\n   | el.transform(el.getAlign(el2, \"top\"));\n   * or\n   | var dy = el.getAlign(el2, \"top\").dy;\n  \\*/\n\n\n  Element.prototype.getAlign = function (el, way) {\n    if (way == null && is(el, \"string\")) {\n      way = el;\n      el = null;\n    }\n\n    el = el || this.paper;\n    var bx = el.getBBox ? el.getBBox() : box(el),\n        bb = this.getBBox(),\n        out = {};\n    way = way && way.match(firstLetter);\n    way = way ? way[1].toLowerCase() : \"c\";\n\n    switch (way) {\n      case \"t\":\n        out.dx = 0;\n        out.dy = bx.y - bb.y;\n        break;\n\n      case \"b\":\n        out.dx = 0;\n        out.dy = bx.y2 - bb.y2;\n        break;\n\n      case \"m\":\n        out.dx = 0;\n        out.dy = bx.cy - bb.cy;\n        break;\n\n      case \"l\":\n        out.dx = bx.x - bb.x;\n        out.dy = 0;\n        break;\n\n      case \"r\":\n        out.dx = bx.x2 - bb.x2;\n        out.dy = 0;\n        break;\n\n      default:\n        out.dx = bx.cx - bb.cx;\n        out.dy = 0;\n        break;\n    }\n\n    out.toString = toString;\n    return out;\n  };\n  /*\\\n   * Element.align\n   [ method ]\n   **\n   * Aligns the element relatively to given one via transformation.\n   * If no elements specified, parent `<svg>` container will be used.\n   - el (object) @optional alignment element\n   - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n   = (object) this element\n   > Usage\n   | el.align(el2, \"top\");\n   * or\n   | el.align(\"middle\");\n  \\*/\n\n\n  Element.prototype.align = function (el, way) {\n    return this.transform(\"...\" + this.getAlign(el, way));\n  };\n}); // Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var elproto = Element.prototype,\n      is = Snap.is,\n      Str = String,\n      has = \"hasOwnProperty\";\n\n  function slice(from, to, f) {\n    return function (arr) {\n      var res = arr.slice(from, to);\n\n      if (res.length == 1) {\n        res = res[0];\n      }\n\n      return f ? f(res) : res;\n    };\n  }\n\n  var Animation = function Animation(attr, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    this.attr = attr;\n    this.dur = ms;\n    easing && (this.easing = easing);\n    callback && (this.callback = callback);\n  };\n\n  Snap._.Animation = Animation;\n  /*\\\n   * Snap.animation\n   [ method ]\n   **\n   * Creates an animation object\n   **\n   - attr (object) attributes of final destination\n   - duration (number) duration of the animation, in milliseconds\n   - easing (function) #optional one of easing functions of @mina or custom one\n   - callback (function) #optional callback function that fires when animation ends\n   = (object) animation object\n  \\*/\n\n  Snap.animation = function (attr, ms, easing, callback) {\n    return new Animation(attr, ms, easing, callback);\n  };\n  /*\\\n   * Element.inAnim\n   [ method ]\n   **\n   * Returns a set of animations that may be able to manipulate the current element\n   **\n   = (object) in format:\n   o {\n   o     anim (object) animation object,\n   o     mina (object) @mina object,\n   o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n   o     status (function) gets or sets the status of the animation,\n   o     stop (function) stops the animation\n   o }\n  \\*/\n\n\n  elproto.inAnim = function () {\n    var el = this,\n        res = [];\n\n    for (var id in el.anims) {\n      if (el.anims[has](id)) {\n        (function (a) {\n          res.push({\n            anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n            mina: a,\n            curStatus: a.status(),\n            status: function status(val) {\n              return a.status(val);\n            },\n            stop: function stop() {\n              a.stop();\n            }\n          });\n        })(el.anims[id]);\n      }\n    }\n\n    return res;\n  };\n  /*\\\n   * Snap.animate\n   [ method ]\n   **\n   * Runs generic animation of one number into another with a caring function\n   **\n   - from (number|array) number or array of numbers\n   - to (number|array) number or array of numbers\n   - setter (function) caring function that accepts one number argument\n   - duration (number) duration, in milliseconds\n   - easing (function) #optional easing function from @mina or custom\n   - callback (function) #optional callback function to execute when animation ends\n   = (object) animation object in @mina format\n   o {\n   o     id (string) animation id, consider it read-only,\n   o     duration (function) gets or sets the duration of the animation,\n   o     easing (function) easing,\n   o     speed (function) gets or sets the speed of the animation,\n   o     status (function) gets or sets the status of the animation,\n   o     stop (function) stops the animation\n   o }\n   | var rect = Snap().rect(0, 0, 10, 10);\n   | Snap.animate(0, 10, function (val) {\n   |     rect.attr({\n   |         x: val\n   |     });\n   | }, 1000);\n   | // in given context is equivalent to\n   | rect.animate({x: 10}, 1000);\n  \\*/\n\n\n  Snap.animate = function (from, to, setter, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    var now = mina.time(),\n        anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n    callback && eve.once(\"mina.finish.\" + anim.id, callback);\n    return anim;\n  };\n  /*\\\n   * Element.stop\n   [ method ]\n   **\n   * Stops all the animations for the current element\n   **\n   = (Element) the current element\n  \\*/\n\n\n  elproto.stop = function () {\n    var anims = this.inAnim();\n\n    for (var i = 0, ii = anims.length; i < ii; i++) {\n      anims[i].stop();\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.animate\n   [ method ]\n   **\n   * Animates the given attributes of the element\n   **\n   - attrs (object) key-value pairs of destination attributes\n   - duration (number) duration of the animation in milliseconds\n   - easing (function) #optional easing function from @mina or custom\n   - callback (function) #optional callback function that executes when the animation ends\n   = (Element) the current element\n  \\*/\n\n\n  elproto.animate = function (attrs, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    if (attrs instanceof Animation) {\n      callback = attrs.callback;\n      easing = attrs.easing;\n      ms = attrs.dur;\n      attrs = attrs.attr;\n    }\n\n    var fkeys = [],\n        tkeys = [],\n        keys = {},\n        from,\n        to,\n        f,\n        eq,\n        el = this;\n\n    for (var key in attrs) {\n      if (attrs[has](key)) {\n        if (el.equal) {\n          eq = el.equal(key, Str(attrs[key]));\n          from = eq.from;\n          to = eq.to;\n          f = eq.f;\n        } else {\n          from = +el.attr(key);\n          to = +attrs[key];\n        }\n\n        var len = is(from, \"array\") ? from.length : 1;\n        keys[key] = slice(fkeys.length, fkeys.length + len, f);\n        fkeys = fkeys.concat(from);\n        tkeys = tkeys.concat(to);\n      }\n    }\n\n    var now = mina.time(),\n        anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n      var attr = {};\n\n      for (var key in keys) {\n        if (keys[has](key)) {\n          attr[key] = keys[key](val);\n        }\n      }\n\n      el.attr(attr);\n    }, easing);\n    el.anims[anim.id] = anim;\n    anim._attrs = attrs;\n    anim._callback = callback;\n    eve(\"snap.animcreated.\" + el.id, anim);\n    eve.once(\"mina.finish.\" + anim.id, function () {\n      eve.off(\"mina.*.\" + anim.id);\n      delete el.anims[anim.id];\n      callback && callback.call(el);\n    });\n    eve.once(\"mina.stop.\" + anim.id, function () {\n      eve.off(\"mina.*.\" + anim.id);\n      delete el.anims[anim.id];\n    });\n    return el;\n  };\n}); // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  // Colours are from https://www.materialui.co\n  var red = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n      pink = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n      purple = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n      deeppurple = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n      indigo = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n      blue = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n      lightblue = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n      cyan = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n      teal = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n      green = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n      lightgreen = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n      lime = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n      yellow = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n      amber = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n      orange = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n      deeporange = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n      brown = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n      grey = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n      bluegrey = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n  /*\\\n   * Snap.mui\n   [ property ]\n   **\n   * Contain Material UI colours.\n   | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n   # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n  \\*/\n\n  Snap.mui = {};\n  /*\\\n   * Snap.flat\n   [ property ]\n   **\n   * Contain Flat UI colours.\n   | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n   # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n  \\*/\n\n  Snap.flat = {};\n\n  function saveColor(colors) {\n    colors = colors.split(/(?=#)/);\n    var color = new String(colors[5]);\n    color[50] = colors[0];\n    color[100] = colors[1];\n    color[200] = colors[2];\n    color[300] = colors[3];\n    color[400] = colors[4];\n    color[500] = colors[5];\n    color[600] = colors[6];\n    color[700] = colors[7];\n    color[800] = colors[8];\n    color[900] = colors[9];\n\n    if (colors[10]) {\n      color.A100 = colors[10];\n      color.A200 = colors[11];\n      color.A400 = colors[12];\n      color.A700 = colors[13];\n    }\n\n    return color;\n  }\n\n  Snap.mui.red = saveColor(red);\n  Snap.mui.pink = saveColor(pink);\n  Snap.mui.purple = saveColor(purple);\n  Snap.mui.deeppurple = saveColor(deeppurple);\n  Snap.mui.indigo = saveColor(indigo);\n  Snap.mui.blue = saveColor(blue);\n  Snap.mui.lightblue = saveColor(lightblue);\n  Snap.mui.cyan = saveColor(cyan);\n  Snap.mui.teal = saveColor(teal);\n  Snap.mui.green = saveColor(green);\n  Snap.mui.lightgreen = saveColor(lightgreen);\n  Snap.mui.lime = saveColor(lime);\n  Snap.mui.yellow = saveColor(yellow);\n  Snap.mui.amber = saveColor(amber);\n  Snap.mui.orange = saveColor(orange);\n  Snap.mui.deeporange = saveColor(deeporange);\n  Snap.mui.brown = saveColor(brown);\n  Snap.mui.grey = saveColor(grey);\n  Snap.mui.bluegrey = saveColor(bluegrey);\n  Snap.flat.turquoise = \"#1abc9c\";\n  Snap.flat.greensea = \"#16a085\";\n  Snap.flat.sunflower = \"#f1c40f\";\n  Snap.flat.orange = \"#f39c12\";\n  Snap.flat.emerland = \"#2ecc71\";\n  Snap.flat.nephritis = \"#27ae60\";\n  Snap.flat.carrot = \"#e67e22\";\n  Snap.flat.pumpkin = \"#d35400\";\n  Snap.flat.peterriver = \"#3498db\";\n  Snap.flat.belizehole = \"#2980b9\";\n  Snap.flat.alizarin = \"#e74c3c\";\n  Snap.flat.pomegranate = \"#c0392b\";\n  Snap.flat.amethyst = \"#9b59b6\";\n  Snap.flat.wisteria = \"#8e44ad\";\n  Snap.flat.clouds = \"#ecf0f1\";\n  Snap.flat.silver = \"#bdc3c7\";\n  Snap.flat.wetasphalt = \"#34495e\";\n  Snap.flat.midnightblue = \"#2c3e50\";\n  Snap.flat.concrete = \"#95a5a6\";\n  Snap.flat.asbestos = \"#7f8c8d\";\n  /*\\\n   * Snap.importMUIColors\n   [ method ]\n   **\n   * Imports Material UI colours into global object.\n   | Snap.importMUIColors();\n   | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n   # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n  \\*/\n\n  Snap.importMUIColors = function () {\n    for (var color in Snap.mui) {\n      if (Snap.mui.hasOwnProperty(color)) {\n        window[color] = Snap.mui[color];\n      }\n    }\n  };\n});\nmodule.exports = Snap;","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n(function (glob) {\n  var version = \"0.5.4\",\n      has = \"hasOwnProperty\",\n      separator = /[\\.\\/]/,\n      comaseparator = /\\s*,\\s*/,\n      wildcard = \"*\",\n      numsort = function numsort(a, b) {\n    return a - b;\n  },\n      current_event,\n      stop,\n      events = {\n    n: {}\n  },\n      firstDefined = function firstDefined() {\n    for (var i = 0, ii = this.length; i < ii; i++) {\n      if (typeof this[i] != \"undefined\") {\n        return this[i];\n      }\n    }\n  },\n      lastDefined = function lastDefined() {\n    var i = this.length;\n\n    while (--i) {\n      if (typeof this[i] != \"undefined\") {\n        return this[i];\n      }\n    }\n  },\n      objtos = Object.prototype.toString,\n      Str = String,\n      isArray = Array.isArray || function (ar) {\n    return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n  },\n\n  /*\\\n   * eve\n   [ method ]\n    * Fires event with given `name`, given scope and other parameters.\n    - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n   - scope (object) context for the event handlers\n   - varargs (...) the rest of arguments will be sent to event handlers\n    = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n  \\*/\n  eve = function eve(name, scope) {\n    var oldstop = stop,\n        args = Array.prototype.slice.call(arguments, 2),\n        listeners = eve.listeners(name),\n        z = 0,\n        l,\n        indexed = [],\n        queue = {},\n        out = [],\n        ce = current_event;\n    out.firstDefined = firstDefined;\n    out.lastDefined = lastDefined;\n    current_event = name;\n    stop = 0;\n\n    for (var i = 0, ii = listeners.length; i < ii; i++) {\n      if (\"zIndex\" in listeners[i]) {\n        indexed.push(listeners[i].zIndex);\n\n        if (listeners[i].zIndex < 0) {\n          queue[listeners[i].zIndex] = listeners[i];\n        }\n      }\n    }\n\n    indexed.sort(numsort);\n\n    while (indexed[z] < 0) {\n      l = queue[indexed[z++]];\n      out.push(l.apply(scope, args));\n\n      if (stop) {\n        stop = oldstop;\n        return out;\n      }\n    }\n\n    for (i = 0; i < ii; i++) {\n      l = listeners[i];\n\n      if (\"zIndex\" in l) {\n        if (l.zIndex == indexed[z]) {\n          out.push(l.apply(scope, args));\n\n          if (stop) {\n            break;\n          }\n\n          do {\n            z++;\n            l = queue[indexed[z]];\n            l && out.push(l.apply(scope, args));\n\n            if (stop) {\n              break;\n            }\n          } while (l);\n        } else {\n          queue[l.zIndex] = l;\n        }\n      } else {\n        out.push(l.apply(scope, args));\n\n        if (stop) {\n          break;\n        }\n      }\n    }\n\n    stop = oldstop;\n    current_event = ce;\n    return out;\n  }; // Undocumented. Debug only.\n\n\n  eve._events = events;\n  /*\\\n   * eve.listeners\n   [ method ]\n    * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n    - name (string) name of the event, dot (`.`) or slash (`/`) separated\n    = (array) array of event handlers\n  \\*/\n\n  eve.listeners = function (name) {\n    var names = isArray(name) ? name : name.split(separator),\n        e = events,\n        item,\n        items,\n        k,\n        i,\n        ii,\n        j,\n        jj,\n        nes,\n        es = [e],\n        out = [];\n\n    for (i = 0, ii = names.length; i < ii; i++) {\n      nes = [];\n\n      for (j = 0, jj = es.length; j < jj; j++) {\n        e = es[j].n;\n        items = [e[names[i]], e[wildcard]];\n        k = 2;\n\n        while (k--) {\n          item = items[k];\n\n          if (item) {\n            nes.push(item);\n            out = out.concat(item.f || []);\n          }\n        }\n      }\n\n      es = nes;\n    }\n\n    return out;\n  };\n  /*\\\n   * eve.separator\n   [ method ]\n    * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n   * here. Be aware that if you pass a string longer than one character it will be treated as\n   * a list of characters.\n    - separator (string) new separator. Empty string resets to default: `.` or `/`.\n  \\*/\n\n\n  eve.separator = function (sep) {\n    if (sep) {\n      sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n      sep = \"[\" + sep + \"]\";\n      separator = new RegExp(sep);\n    } else {\n      separator = /[\\.\\/]/;\n    }\n  };\n  /*\\\n   * eve.on\n   [ method ]\n   **\n   * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n   | eve.on(\"*.under.*\", f);\n   | eve(\"mouse.under.floor\"); // triggers f\n   * Use @eve to trigger the listener.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   - name (array) if you don’t want to use separators, you can use array of strings\n   - f (function) event handler function\n   **\n   = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n   > Example:\n   | eve.on(\"mouse\", eatIt)(2);\n   | eve.on(\"mouse\", scream);\n   | eve.on(\"mouse\", catchIt)(1);\n   * This will ensure that `catchIt` function will be called before `eatIt`.\n   *\n   * If you want to put your handler before non-indexed handlers, specify a negative value.\n   * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n  \\*/\n\n\n  eve.on = function (name, f) {\n    if (typeof f != \"function\") {\n      return function () {};\n    }\n\n    var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\n    for (var i = 0, ii = names.length; i < ii; i++) {\n      (function (name) {\n        var names = isArray(name) ? name : Str(name).split(separator),\n            e = events,\n            exist;\n\n        for (var i = 0, ii = names.length; i < ii; i++) {\n          e = e.n;\n          e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {\n            n: {}\n          });\n        }\n\n        e.f = e.f || [];\n\n        for (i = 0, ii = e.f.length; i < ii; i++) {\n          if (e.f[i] == f) {\n            exist = true;\n            break;\n          }\n        }\n\n        !exist && e.f.push(f);\n      })(names[i]);\n    }\n\n    return function (zIndex) {\n      if (+zIndex == +zIndex) {\n        f.zIndex = +zIndex;\n      }\n    };\n  };\n  /*\\\n   * eve.f\n   [ method ]\n   **\n   * Returns function that will fire given event with optional arguments.\n   * Arguments that will be passed to the result function will be also\n   * concated to the list of final arguments.\n   | el.onclick = eve.f(\"click\", 1, 2);\n   | eve.on(\"click\", function (a, b, c) {\n   |     console.log(a, b, c); // 1, 2, [event object]\n   | });\n   - event (string) event name\n   - varargs (…) and any other arguments\n   = (function) possible event handler function\n  \\*/\n\n\n  eve.f = function (event) {\n    var attrs = [].slice.call(arguments, 1);\n    return function () {\n      eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n    };\n  };\n  /*\\\n   * eve.stop\n   [ method ]\n   **\n   * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n  \\*/\n\n\n  eve.stop = function () {\n    stop = 1;\n  };\n  /*\\\n   * eve.nt\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   - subname (string) #optional subname of the event\n   **\n   = (string) name of the event, if `subname` is not specified\n   * or\n   = (boolean) `true`, if current event’s name contains `subname`\n  \\*/\n\n\n  eve.nt = function (subname) {\n    var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n\n    if (subname) {\n      return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n    }\n\n    return cur;\n  };\n  /*\\\n   * eve.nts\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   **\n   = (array) names of the event\n  \\*/\n\n\n  eve.nts = function () {\n    return isArray(current_event) ? current_event : current_event.split(separator);\n  };\n  /*\\\n   * eve.off\n   [ method ]\n   **\n   * Removes given function from the list of event listeners assigned to given name.\n   * If no arguments specified all the events will be cleared.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n  \\*/\n\n  /*\\\n   * eve.unbind\n   [ method ]\n   **\n   * See @eve.off\n  \\*/\n\n\n  eve.off = eve.unbind = function (name, f) {\n    if (!name) {\n      eve._events = events = {\n        n: {}\n      };\n      return;\n    }\n\n    var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\n    if (names.length > 1) {\n      for (var i = 0, ii = names.length; i < ii; i++) {\n        eve.off(names[i], f);\n      }\n\n      return;\n    }\n\n    names = isArray(name) ? name : Str(name).split(separator);\n    var e,\n        key,\n        splice,\n        i,\n        ii,\n        j,\n        jj,\n        cur = [events],\n        inodes = [];\n\n    for (i = 0, ii = names.length; i < ii; i++) {\n      for (j = 0; j < cur.length; j += splice.length - 2) {\n        splice = [j, 1];\n        e = cur[j].n;\n\n        if (names[i] != wildcard) {\n          if (e[names[i]]) {\n            splice.push(e[names[i]]);\n            inodes.unshift({\n              n: e,\n              name: names[i]\n            });\n          }\n        } else {\n          for (key in e) {\n            if (e[has](key)) {\n              splice.push(e[key]);\n              inodes.unshift({\n                n: e,\n                name: key\n              });\n            }\n          }\n        }\n\n        cur.splice.apply(cur, splice);\n      }\n    }\n\n    for (i = 0, ii = cur.length; i < ii; i++) {\n      e = cur[i];\n\n      while (e.n) {\n        if (f) {\n          if (e.f) {\n            for (j = 0, jj = e.f.length; j < jj; j++) {\n              if (e.f[j] == f) {\n                e.f.splice(j, 1);\n                break;\n              }\n            }\n\n            !e.f.length && delete e.f;\n          }\n\n          for (key in e.n) {\n            if (e.n[has](key) && e.n[key].f) {\n              var funcs = e.n[key].f;\n\n              for (j = 0, jj = funcs.length; j < jj; j++) {\n                if (funcs[j] == f) {\n                  funcs.splice(j, 1);\n                  break;\n                }\n              }\n\n              !funcs.length && delete e.n[key].f;\n            }\n          }\n        } else {\n          delete e.f;\n\n          for (key in e.n) {\n            if (e.n[has](key) && e.n[key].f) {\n              delete e.n[key].f;\n            }\n          }\n        }\n\n        e = e.n;\n      }\n    } // prune inner nodes in path\n\n\n    prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n      e = inodes[i];\n\n      for (key in e.n[e.name].f) {\n        // not empty (has listeners)\n        continue prune;\n      }\n\n      for (key in e.n[e.name].n) {\n        // not empty (has children)\n        continue prune;\n      } // is empty\n\n\n      delete e.n[e.name];\n    }\n  };\n  /*\\\n   * eve.once\n   [ method ]\n   **\n   * Binds given event handler with a given name to only run once then unbind itself.\n   | eve.once(\"login\", f);\n   | eve(\"login\"); // triggers f\n   | eve(\"login\"); // no listeners\n   * Use @eve to trigger the listener.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   = (function) same return function as @eve.on\n  \\*/\n\n\n  eve.once = function (name, f) {\n    var f2 = function f2() {\n      eve.off(name, f2);\n      return f.apply(this, arguments);\n    };\n\n    return eve.on(name, f2);\n  };\n  /*\\\n   * eve.version\n   [ property (string) ]\n   **\n   * Current version of the library.\n  \\*/\n\n\n  eve.version = version;\n\n  eve.toString = function () {\n    return \"You are running Eve \" + version;\n  };\n\n  glob.eve = eve;\n  typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () {\n    return eve;\n  }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n        path.animate({\n          path: steps[pos]\n        }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x3, _x4, _x5) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x3,\n        property = _x4,\n        receiver = _x5;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x3 = parent;\n        _x4 = property;\n        _x5 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n        this.applyWrapperStyles();\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState); // Timeout ensures wrappers are cleared after animation finishes.\n\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      } // Applies component-specific styles to external wrapper elements.\n\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      } // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        } // Prevent any horizontal scroll.\n\n\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      } // Builds styles incrementally for a given element.\n\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase()); // Set base styles.\n\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {}; // Add animation-specific styles.\n\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        } // Add custom styles.\n\n\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        } // Add element inline styles.\n\n\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless disabled or custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else if (!this.props.disableCloseOnEsc) {\n          window.onkeydown = this.listenForClose.bind(this);\n        } // Allow initial open state to be set by props.\n\n\n        if (this.props.isOpen) {\n          this.toggleMenu({\n            isOpen: true,\n            noStateChange: true\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement('div', null, !this.props.noOverlay && _react2['default'].createElement('div', {\n          className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n          onClick: function onClick() {\n            return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n          },\n          style: this.getStyles('overlay')\n        }), _react2['default'].createElement('div', {\n          id: this.props.id,\n          className: ('bm-menu-wrap ' + this.props.className).trim(),\n          style: this.getStyles('menuWrap')\n        }, styles.svg && _react2['default'].createElement('div', {\n          className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n          style: this.getStyles('morphShape')\n        }, _react2['default'].createElement('svg', {\n          width: '100%',\n          height: '100%',\n          viewBox: '0 0 100 800',\n          preserveAspectRatio: 'none'\n        }, _react2['default'].createElement('path', {\n          d: styles.svg.pathInitial\n        }))), _react2['default'].createElement('div', {\n          className: ('bm-menu ' + this.props.menuClassName).trim(),\n          style: this.getStyles('menu')\n        }, _react2['default'].createElement('nav', {\n          className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n          style: this.getStyles('itemList')\n        }, _react2['default'].Children.map(this.props.children, function (item, index) {\n          if (item) {\n            var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n              return !!className;\n            }).join(' ');\n            var extraProps = {\n              key: index,\n              className: classList,\n              style: _this3.getStyles('item', index, item.props.style)\n            };\n            return _react2['default'].cloneElement(item, extraProps);\n          }\n        }))), this.props.customCrossIcon !== false && _react2['default'].createElement('div', {\n          style: this.getStyles('closeButton')\n        }, _react2['default'].createElement(_CrossIcon2['default'], {\n          onClick: function onClick() {\n            return _this3.toggleMenu();\n          },\n          styles: this.props.styles,\n          customIcon: this.props.customCrossIcon,\n          className: this.props.crossButtonClassName,\n          crossClassName: this.props.crossClassName\n        }))), this.props.customBurgerIcon !== false && _react2['default'].createElement('div', {\n          style: this.getStyles('burgerIcon')\n        }, _react2['default'].createElement(_BurgerIcon2['default'], {\n          onClick: function onClick() {\n            return _this3.toggleMenu();\n          },\n          styles: this.props.styles,\n          customIcon: this.props.customBurgerIcon,\n          className: this.props.burgerButtonClassName,\n          barClassName: this.props.burgerBarClassName\n        })));\n      }\n    }]);\n\n    return Menu;\n  }(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableCloseOnEsc: false,\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n  return Menu;\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];"],"sourceRoot":""}