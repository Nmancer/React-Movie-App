{"version":3,"sources":["components/Dumb Components/ActorInfo.js","components/Smart Components/ActorDetails.js"],"names":["ActorWrapper","styled","div","_templateObject","PrimaryColor","Actor","_templateObject2","ActorRight","_templateObject3","TertiaryColor","ActorHeadingBig","h1","_templateObject4","AccentColor","ActorHeadingSmall","h2","_templateObject5","ActorInfo","props","biography","birthday","deathday","name","place_of_birth","profile_path","react_default","a","createElement","src","concat","alt","ActorDetails","this","fetchActorDetails","match","params","id","Fragment","actorDetails","movie_credits","Dumb_Components_ActorInfo","RenderMovies","page","movies","cast","Component","connect","state"],"mappings":"q+BAOA,IAiDMA,EAAeC,IAAOC,IAAVC,IAGIC,KAEhBC,EAAQJ,IAAOC,IAAVI,KAkBLC,EAAaN,IAAOC,IAAVM,IAELC,KAELC,EAAkBT,IAAOU,GAAVC,IACVC,KAELC,EAAoBb,IAAOc,GAAVC,KAIRC,EAnFG,SAAAC,GAAS,IAEvBC,EAMED,EANFC,UACAC,EAKEF,EALFE,SACAC,EAIEH,EAJFG,SACAC,EAGEJ,EAHFI,KACAC,EAEEL,EAFFK,eACAC,EACEN,EADFM,aAEF,OACEC,EAAAC,EAAAC,cAAC3B,EAAD,KACEyB,EAAAC,EAAAC,cAACtB,EAAD,KACEoB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEC,IACEJ,EAAY,kCAAAK,OAC0BL,GAClC,KAENM,IAAKR,KAGTG,EAAAC,EAAAC,cAACpB,EAAD,KACGe,EAAOG,EAAAC,EAAAC,cAACjB,EAAD,KAAkBY,GAA0B,KACnDF,EACCK,EAAAC,EAAAC,cAACb,EAAD,kBACaM,EADb,KACyBG,EADzB,KAGE,KACHF,EACCI,EAAAC,EAAAC,cAACb,EAAD,aAEGO,GAED,KAEHF,EACCM,EAAAC,EAAAC,cAAA,SACG,IACDF,EAAAC,EAAAC,cAAA,0BACCR,GAED,SC5CRY,8LAEFC,KAAKd,MAAMe,kBAAkBD,KAAKd,MAAMgB,MAAMC,OAAOC,qCAGrD,OACEX,EAAAC,EAAAC,cAACF,EAAAC,EAAMW,SAAP,KACGL,KAAKd,MAAMoB,aAAaC,cACvBd,EAAAC,EAAAC,cAACF,EAAAC,EAAMW,SAAP,KACEZ,EAAAC,EAAAC,cAACa,EAAD,CACErB,UAAWa,KAAKd,MAAMoB,aAAanB,UACnCC,SAAUY,KAAKd,MAAMoB,aAAalB,SAClCC,SAAUW,KAAKd,MAAMoB,aAAajB,SAClCC,KAAMU,KAAKd,MAAMoB,aAAahB,KAC9BC,eAAgBS,KAAKd,MAAMoB,aAAaf,eACxCC,aAAcQ,KAAKd,MAAMoB,aAAad,eAExCC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEC,KAAMV,KAAKd,MAAMoB,aAAahB,KAC9BqB,OAAQX,KAAKd,MAAMoB,aAAaC,cAAcK,QAGhD,aAtBeC,aA+BZC,sBAHS,SAAAC,GACtB,MAAO,CAAET,aAAcS,EAAMT,eAI7B,CAAEL,uBAFWa,CAGbf","file":"static/js/4.af1bebe3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  PrimaryColor,\r\n  AccentColor,\r\n  TertiaryColor\r\n} from \"../../helpers/Theming\";\r\nconst ActorInfo = props => {\r\n  const {\r\n    biography,\r\n    birthday,\r\n    deathday,\r\n    name,\r\n    place_of_birth,\r\n    profile_path\r\n  } = props;\r\n  return (\r\n    <ActorWrapper>\r\n      <Actor>\r\n        <div>\r\n          <img\r\n            src={\r\n              profile_path\r\n                ? `https://image.tmdb.org/t/p/w185${profile_path}`\r\n                : null\r\n            }\r\n            alt={name}\r\n          />\r\n        </div>\r\n        <ActorRight>\r\n          {name ? <ActorHeadingBig>{name}</ActorHeadingBig> : null}\r\n          {birthday ? (\r\n            <ActorHeadingSmall>\r\n              Birthday: {birthday} ({place_of_birth})\r\n            </ActorHeadingSmall>\r\n          ) : null}\r\n          {deathday ? (\r\n            <ActorHeadingSmall>\r\n              Died:\r\n              {deathday}\r\n            </ActorHeadingSmall>\r\n          ) : null}\r\n\r\n          {biography ? (\r\n            <p>\r\n              {\" \"}\r\n              <span>Biography:</span>\r\n              {biography}\r\n            </p>\r\n          ) : null}\r\n        </ActorRight>\r\n      </Actor>\r\n    </ActorWrapper>\r\n  );\r\n};\r\n\r\nconst ActorWrapper = styled.div`\r\n  width: 100%;\r\n  margin-top: 60px;\r\n  background-color: ${PrimaryColor};\r\n`;\r\nconst Actor = styled.div`\r\n  display: flex;\r\n  width: 60%;\r\n  margin: 0 auto;\r\n  padding: 50px;\r\n  @media (max-width: 1280px) {\r\n    margin-top: 90px;\r\n    padding: 0;\r\n    width: 80%;\r\n  }\r\n  @media (max-width: 780px) {\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 480px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst ActorRight = styled.div`\r\n  margin-left: 5px;\r\n  color: ${TertiaryColor};\r\n`;\r\nconst ActorHeadingBig = styled.h1`\r\n  color: ${AccentColor};\r\n`;\r\nconst ActorHeadingSmall = styled.h2`\r\n  font-weight: normal;\r\n  font-size: 20px;\r\n`;\r\nexport default ActorInfo;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchActorDetails } from \"../../actions\";\r\nimport RenderMovies from \"../Dumb Components/RenderMovies\";\r\nimport ActorInfo from \"../Dumb Components/ActorInfo\";\r\nclass ActorDetails extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchActorDetails(this.props.match.params.id);\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.actorDetails.movie_credits ? (\r\n          <React.Fragment>\r\n            <ActorInfo\r\n              biography={this.props.actorDetails.biography}\r\n              birthday={this.props.actorDetails.birthday}\r\n              deathday={this.props.actorDetails.deathday}\r\n              name={this.props.actorDetails.name}\r\n              place_of_birth={this.props.actorDetails.place_of_birth}\r\n              profile_path={this.props.actorDetails.profile_path}\r\n            />\r\n            <RenderMovies\r\n              page={this.props.actorDetails.name}\r\n              movies={this.props.actorDetails.movie_credits.cast}\r\n            />\r\n          </React.Fragment>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { actorDetails: state.actorDetails };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchActorDetails }\r\n)(ActorDetails);\r\n"],"sourceRoot":""}